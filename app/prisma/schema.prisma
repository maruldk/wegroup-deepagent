generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
    output = "/home/ubuntu/wegroup-platform/app/node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Tenant {
  id                         String                      @id @default(cuid())
  name                       String
  domain                     String                      @unique
  subdomain                  String?                     @unique
  logo                       String?
  settings                   Json                        @default("{}")
  displayName                String?
  shortName                  String?
  description                String?
  industry                   String?
  website                    String?
  email                      String?
  phone                      String?
  address                    Json?                       @default("{}")
  planType                   TenantPlanType              @default(DEMO)
  planStartDate              DateTime?
  planEndDate                DateTime?
  planFeatures               Json                        @default("[]")
  planLimits                 Json                        @default("{}")
  status                     TenantStatus                @default(ACTIVE)
  isActive                   Boolean                     @default(true)
  activityLevel              Int                         @default(0)
  userCount                  Int                         @default(0)
  brandColor                 String?                     @default("#6B7280")
  brandLogo                  String?
  brandIcon                  String?
  customTheme                Json?                       @default("{}")
  aiScore                    Float?                      @default(0.0)
  healthScore                Float?                      @default(100.0)
  utilizationRate            Float?                      @default(0.0)
  ownerId                    String?
  managedBy                  String?
  lastActivityAt             DateTime?
  complianceLevel            String?                     @default("STANDARD")
  securityScore              Float?                      @default(80.0)
  dataRegion                 String?                     @default("EU")
  createdAt                  DateTime                    @default(now())
  updatedAt                  DateTime                    @updatedAt
  businessModels             BusinessModel[]
  carbonFootprintTracking    CarbonFootprintTracking[]
  competitiveAnalyses        CompetitiveAnalysis[]
  crossCompanyCollaborations CrossCompanyCollaboration[]
  customerJourneyMaps        CustomerJourneyMap[]
  dashboards                 Dashboard[]
  ecosystemIntelligence      EcosystemIntelligence[]
  ecosystemOrchestrations    EcosystemOrchestration[]
  ecosystemPartners          EcosystemPartner[]
  environmentalRisks         EnvironmentalRisk[]
  esgCompliance              ESGCompliance[]
  experienceOptimizations    ExperienceOptimization[]
  externalIntegrations       ExternalIntegration[]
  globalIntegrations         GlobalIntegration[]
  greenProcesses             GreenProcess[]
  innovationPipelines        InnovationPipeline[]
  innovationProjects         InnovationProject[]
  innovationValidations      InnovationValidation[]
  marketOpportunities        MarketOpportunity[]
  neuralCustomerProfiles     NeuralCustomerProfile[]
  personalizationRules       PersonalizationRule[]
  quantumAlgorithms          QuantumAlgorithm[]
  quantumComputations        QuantumComputation[]
  quantumNeuralNetworks      QuantumNeuralNetwork[]
  quantumOptimizations       QuantumOptimization[]
  quantumProcessors          QuantumProcessor[]
  roles                      Role[]
  sentimentAnalyses          SentimentAnalysis[]
  sustainabilityMetrics      SustainabilityMetrics[]
  activities                 TenantActivity[]
  analytics                  TenantAnalytics[]
  billingRecords             TenantBilling[]
  customization              TenantCustomization?
  managers                   TenantManager[]
  modules                    TenantModule[]
  regionMappings             TenantRegionMapping[]
  supportTickets             TenantSupportTicket[]
  usageAnalytics             TenantUsageAnalytics[]
  owner                      User?                       @relation("TenantOwner", fields: [ownerId], references: [id])
  recommendations            UserTenantRecommendation[]
  lastUsedByUsers            User[]                      @relation("UserLastUsedTenant")
  users                      User[]
  
  // Email Integration Relationships
  emailConfigs               TenantEmailConfig[]
  emailInvoices              EmailInvoice[]
  emailProcessingLogs        EmailProcessingLog[]
  emailClassifications       EmailClassification[]
  
  // Customer & Supplier System Relationships
  logisticsCustomers                  LogisticsCustomer[]
  logisticsSuppliers                  LogisticsSupplier[]
  logisticsCustomerRequests           LogisticsCustomerRequest[]
  logisticsRfqs                       LogisticsRFQ[]
  logisticsSupplierQuotes             LogisticsSupplierQuote[]
  logisticsQuoteComparisons           LogisticsQuoteComparison[]
  logisticsOrders                     LogisticsOrder[]
  logisticsSupplierPerformances       LogisticsSupplierPerformance[]
  logisticsCustomerPortalAccesses     LogisticsCustomerPortalAccess[]
  logisticsSupplierPortalAccesses     LogisticsSupplierPortalAccess[]
  
  // Universal Service System Relationships
  serviceRequests                     ServiceRequest[]
  serviceCustomers                    ServiceCustomer[]
  serviceSuppliers                    ServiceSupplier[]
  serviceRfqs                         ServiceRFQ[]
  serviceQuotes                       ServiceQuote[]
  serviceQuoteComparisons             ServiceQuoteComparison[]
  serviceOrders                       ServiceOrder[]
  serviceSupplierPerformances         ServiceSupplierPerformance[]
  serviceCustomerPortalAccesses       ServiceCustomerPortalAccess[]
  serviceSupplierPortalAccesses       ServiceSupplierPortalAccess[]
  logisticsAiRecommendations          LogisticsAIRecommendation[]

  @@map("tenants")
}

model TenantModule {
  id         String     @id @default(cuid())
  tenantId   String
  moduleType ModuleType
  isActive   Boolean    @default(true)
  config     Json       @default("{}")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  tenant     Tenant     @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@unique([tenantId, moduleType])
  @@map("tenant_modules")
}

model TenantManager {
  id          String            @id @default(cuid())
  tenantId    String
  userId      String
  role        TenantManagerRole @default(MANAGER)
  permissions Json              @default("[]")
  isActive    Boolean           @default(true)
  assignedAt  DateTime          @default(now())
  assignedBy  String?
  tenant      Tenant            @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  user        User              @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([tenantId, userId])
  @@map("tenant_managers")
}

model TenantActivity {
  id             String             @id @default(cuid())
  tenantId       String
  userId         String?
  activityType   TenantActivityType
  description    String
  metadata       Json               @default("{}")
  ipAddress      String?
  userAgent      String?
  sessionId      String?
  aiRiskScore    Float?             @default(0.0)
  aiAnomalyScore Float?             @default(0.0)
  aiCategory     String?
  performedAt    DateTime           @default(now())
  tenant         Tenant             @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  user           User?              @relation(fields: [userId], references: [id])

  @@index([tenantId, performedAt])
  @@index([activityType])
  @@map("tenant_activities")
}

model TenantAnalytics {
  id                   String   @id @default(cuid())
  tenantId             String
  totalUsers           Int      @default(0)
  activeUsers          Int      @default(0)
  inactiveUsers        Int      @default(0)
  totalActivities      Int      @default(0)
  dailyActiveUsers     Int      @default(0)
  weeklyActiveUsers    Int      @default(0)
  monthlyActiveUsers   Int      @default(0)
  avgSessionDuration   Float?   @default(0.0)
  avgActivitiesPerUser Float?   @default(0.0)
  systemUtilization    Float?   @default(0.0)
  storageUsed          Float?   @default(0.0)
  bandwidthUsed        Float?   @default(0.0)
  aiHealthScore        Float?   @default(100.0)
  aiGrowthPrediction   Float?   @default(0.0)
  aiRiskAssessment     Float?   @default(0.0)
  aiRecommendations    Json?    @default("[]")
  aiTrends             Json?    @default("{}")
  securityScore        Float?   @default(80.0)
  complianceScore      Float?   @default(90.0)
  vulnerabilities      Int      @default(0)
  policyViolations     Int      @default(0)
  periodType           String   @default("DAILY")
  periodStart          DateTime
  periodEnd            DateTime
  calculatedAt         DateTime @default(now())
  tenant               Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@unique([tenantId, periodType, periodStart])
  @@index([periodStart, periodEnd])
  @@map("tenant_analytics")
}

model TenantBilling {
  id                        String         @id @default(cuid())
  tenantId                  String
  billingPeriodStart        DateTime
  billingPeriodEnd          DateTime
  planType                  TenantPlanType
  baseCost                  Float          @default(0.0)
  usageCost                 Float          @default(0.0)
  additionalCosts           Float          @default(0.0)
  totalCost                 Float          @default(0.0)
  currency                  String         @default("EUR")
  userCount                 Int            @default(0)
  storageUsed               Float          @default(0.0)
  bandwidthUsed             Float          @default(0.0)
  apiCalls                  Int            @default(0)
  paymentStatus             BillingStatus  @default(PENDING)
  paymentMethod             String?
  paymentDate               DateTime?
  invoiceNumber             String?
  invoiceUrl                String?
  aiOptimizationSuggestions Json?          @default("[]")
  aiCostPrediction          Float?         @default(0.0)
  aiUsageAlerts             Json?          @default("[]")
  createdAt                 DateTime       @default(now())
  updatedAt                 DateTime       @updatedAt
  tenant                    Tenant         @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@unique([tenantId, billingPeriodStart])
  @@map("tenant_billing")
}

model TenantSupportTicket {
  id            String              @id @default(cuid())
  tenantId      String
  userId        String?
  ticketNumber  String              @unique
  subject       String
  description   String
  priority      SupportPriority     @default(MEDIUM)
  category      SupportCategory     @default(GENERAL)
  status        SupportTicketStatus @default(OPEN)
  assignedTo    String?
  assignedAt    DateTime?
  resolution    String?
  resolvedAt    DateTime?
  resolvedBy    String?
  aiSentiment   Float?              @default(0.0)
  aiUrgency     Float?              @default(0.0)
  aiCategory    String?
  aiSuggestions Json?               @default("[]")
  attachments   Json?               @default("[]")
  tags          Json?               @default("[]")
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
  tenant        Tenant              @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  user          User?               @relation(fields: [userId], references: [id])

  @@index([status])
  @@index([priority])
  @@map("tenant_support_tickets")
}

model User {
  id                        String                     @id @default(cuid())
  email                     String                     @unique
  emailVerified             DateTime?
  firstName                 String?
  lastName                  String?
  image                     String?
  password                  String?
  isActive                  Boolean                    @default(true)
  lastLoginAt               DateTime?
  tenantId                  String?
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @updatedAt
  lastTenantSwitchAt        DateTime?
  lastUsedTenantId          String?
  preferredTenants          String[]                   @default([])
  tenantPreferences         Json?                      @default("{}")
  tenantSwitchCount         Int                        @default(0)
  tenantUsagePattern        Json?                      @default("{}")
  accounts                  Account[]
  authenticators            Authenticator[]
  dashboards                Dashboard[]
  employee                  Employee?
  permissionRecommendations PermissionRecommendation[]
  sessions                  Session[]
  tenantActivities          TenantActivity[]
  managedTenants            TenantManager[]
  supportTickets            TenantSupportTicket[]
  tenantUsageAnalytics      TenantUsageAnalytics[]
  ownedTenants              Tenant[]                   @relation("TenantOwner")
  userEnhancedRoles         UserEnhancedRole[]
  permissionOverrides       UserPermissionOverride[]
  preferences               UserPreference[]
  userRoles                 UserRole[]
  tenantRecommendations     UserTenantRecommendation[]
  lastUsedTenant            Tenant?                    @relation("UserLastUsedTenant", fields: [lastUsedTenantId], references: [id])
  tenant                    Tenant?                    @relation(fields: [tenantId], references: [id])

  @@map("users")
}

model Role {
  id                        String                     @id @default(cuid())
  name                      String
  description               String?
  permissions               Json                       @default("[]")
  isSystem                  Boolean                    @default(false)
  tenantId                  String?
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @updatedAt
  permissionRecommendations PermissionRecommendation[]
  roleMenuPermissions       RoleMenuPermission[]
  tenant                    Tenant?                    @relation(fields: [tenantId], references: [id])
  userRoles                 UserRole[]

  @@unique([name, tenantId])
  @@map("roles")
}

model UserRole {
  userId     String
  roleId     String
  assignedAt DateTime @default(now())
  assignedBy String?
  role       Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, roleId])
  @@map("user_roles")
}

model Permission {
  id              String                   @id @default(cuid())
  name            String                   @unique
  description     String?
  module          String?
  action          String?
  resource        String?
  createdAt       DateTime                 @default(now())
  menuPermissions MenuPermission[]
  userOverrides   UserPermissionOverride[]

  @@map("permissions")
}

model MenuPermission {
  id                    String                     @id @default(cuid())
  menuKey               String
  menuPath              String
  menuTitle             String
  parentMenuId          String?
  permissionId          String
  module                ModuleType
  requiredActions       Json                       @default("[]")
  isVisible             Boolean                    @default(true)
  sortOrder             Int                        @default(0)
  iconName              String?
  description           String?
  aiRecommendationScore Float?                     @default(0.0)
  aiSecurityLevel       String?                    @default("STANDARD")
  aiUsageFrequency      Float?                     @default(0.0)
  tenantId              String?
  createdAt             DateTime                   @default(now())
  updatedAt             DateTime                   @updatedAt
  parentMenu            MenuPermission?            @relation("MenuHierarchy", fields: [parentMenuId], references: [id])
  childMenus            MenuPermission[]           @relation("MenuHierarchy")
  permission            Permission                 @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  recommendations       PermissionRecommendation[]
  roleMenuPermissions   RoleMenuPermission[]
  userOverrides         UserPermissionOverride[]

  @@unique([menuKey, tenantId])
  @@index([menuKey])
  @@map("menu_permissions")
}

model RoleMenuPermission {
  id                String         @id @default(cuid())
  roleId            String
  menuPermissionId  String
  allowedActions    Json           @default("[]")
  isEnabled         Boolean        @default(true)
  isInherited       Boolean        @default(false)
  aiConfidenceScore Float?         @default(0.0)
  aiRiskAssessment  Float?         @default(0.0)
  tenantId          String?
  assignedAt        DateTime       @default(now())
  assignedBy        String?
  menuPermission    MenuPermission @relation(fields: [menuPermissionId], references: [id], onDelete: Cascade)
  role              Role           @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@unique([roleId, menuPermissionId])
  @@map("role_menu_permissions")
}

model UserPermissionOverride {
  id               String                 @id @default(cuid())
  userId           String
  permissionId     String?
  menuPermissionId String?
  overrideType     PermissionOverrideType
  allowedActions   Json                   @default("[]")
  deniedActions    Json                   @default("[]")
  isEnabled        Boolean                @default(true)
  reason           String?
  expiresAt        DateTime?
  aiRiskScore      Float?                 @default(0.0)
  aiAnomalyScore   Float?                 @default(0.0)
  aiRecommendation String?
  aiJustification  String?
  requiresApproval Boolean                @default(false)
  approvalStatus   OverrideApprovalStatus @default(PENDING)
  approvedBy       String?
  approvedAt       DateTime?
  reviewedBy       String?
  reviewedAt       DateTime?
  tenantId         String
  createdBy        String
  createdAt        DateTime               @default(now())
  updatedAt        DateTime               @updatedAt
  menuPermission   MenuPermission?        @relation(fields: [menuPermissionId], references: [id], onDelete: Cascade)
  permission       Permission?            @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  user             User                   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_permission_overrides")
}

model PermissionAuditLog {
  id                String               @id @default(cuid())
  entityType        PermissionEntityType
  entityId          String
  action            PermissionAction
  permissionDetails Json                 @default("{}")
  oldValues         Json?                @default("{}")
  newValues         Json?                @default("{}")
  reason            String?
  ipAddress         String?
  userAgent         String?
  sessionId         String?
  aiDetectedAnomaly Boolean              @default(false)
  aiRiskScore       Float?               @default(0.0)
  aiComplianceScore Float?               @default(0.0)
  tenantId          String
  performedBy       String
  performedAt       DateTime             @default(now())

  @@index([entityType, entityId])
  @@index([performedAt])
  @@map("permission_audit_logs")
}

model PermissionRecommendation {
  id                  String               @id @default(cuid())
  targetUserId        String?
  targetRoleId        String?
  recommendationType  RecommendationType
  menuPermissionId    String?
  permissionId        String?
  recommendedActions  Json                 @default("[]")
  aiConfidenceScore   Float                @default(0.0)
  aiJustification     String
  aiModelVersion      String?
  aiDataSources       Json                 @default("[]")
  securityRiskScore   Float?               @default(0.0)
  complianceScore     Float?               @default(0.0)
  businessImpactScore Float?               @default(0.0)
  status              RecommendationStatus @default(PENDING)
  reviewedBy          String?
  reviewedAt          DateTime?
  implementedBy       String?
  implementedAt       DateTime?
  rejectionReason     String?
  tenantId            String
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  menuPermission      MenuPermission?      @relation(fields: [menuPermissionId], references: [id], onDelete: Cascade)
  targetRole          Role?                @relation(fields: [targetRoleId], references: [id], onDelete: Cascade)
  targetUser          User?                @relation(fields: [targetUserId], references: [id], onDelete: Cascade)

  @@map("permission_recommendations")
}

model EnhancedRole {
  id                     String              @id @default(cuid())
  name                   String
  description            String?
  category               RoleCategory        @default(OPERATIONAL)
  level                  RoleLevel           @default(STANDARD)
  hierarchyLevel         Int                 @default(50)
  levelColor             String?             @default("#6B7280")
  levelBadge             String?
  permissionCount        Int                 @default(0)
  userCount              Int                 @default(0)
  inheritFromRoleId      String?
  aiOptimizedPermissions Json                @default("[]")
  aiSecurityScore        Float?              @default(0.0)
  aiUsagePattern         Json?               @default("{}")
  aiPerformanceMetrics   Json?               @default("{}")
  aiRecommendationScore  Float?              @default(0.0)
  aiRiskAssessment       Float?              @default(0.0)
  departmentRestrictions Json?               @default("[]")
  maxUsers               Int?
  isAutoAssignable       Boolean             @default(false)
  requiresApproval       Boolean             @default(false)
  isActive               Boolean             @default(true)
  isVisible              Boolean             @default(true)
  isSystem               Boolean             @default(false)
  isTemplate             Boolean             @default(false)
  complianceLevel        String?             @default("STANDARD")
  lastAuditDate          DateTime?
  nextReviewDate         DateTime?
  tenantId               String?
  createdBy              String
  createdAt              DateTime            @default(now())
  updatedAt              DateTime            @updatedAt
  inheritFromRole        EnhancedRole?       @relation("RoleInheritance", fields: [inheritFromRoleId], references: [id])
  childRoles             EnhancedRole[]      @relation("RoleInheritance")
  roleTemplateUsages     RoleTemplateUsage[]
  userEnhancedRoles      UserEnhancedRole[]

  @@unique([name, tenantId])
  @@index([hierarchyLevel])
  @@index([tenantId, isActive])
  @@map("enhanced_roles")
}

model UserEnhancedRole {
  userId                String
  enhancedRoleId        String
  isActive              Boolean      @default(true)
  assignmentReason      String?
  expiresAt             DateTime?
  aiRecommendationScore Float?       @default(0.0)
  aiPerformanceScore    Float?       @default(0.0)
  aiSuitabilityScore    Float?       @default(0.0)
  assignedAt            DateTime     @default(now())
  assignedBy            String?
  lastReviewedAt        DateTime?
  reviewedBy            String?
  enhancedRole          EnhancedRole @relation(fields: [enhancedRoleId], references: [id], onDelete: Cascade)
  user                  User         @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, enhancedRoleId])
  @@map("user_enhanced_roles")
}

model RoleTemplateUsage {
  id             String       @id @default(cuid())
  templateRoleId String
  derivedRoleId  String?
  usedBy         String
  customizations Json?        @default("{}")
  tenantId       String
  createdAt      DateTime     @default(now())
  templateRole   EnhancedRole @relation(fields: [templateRoleId], references: [id], onDelete: Cascade)

  @@map("role_template_usages")
}

model RoleHierarchyAnalytics {
  id                        String   @id @default(cuid())
  roleId                    String
  parentRoleId              String?
  hierarchyDepth            Int      @default(0)
  inheritedPermissions      Json     @default("[]")
  effectivePermissions      Json     @default("[]")
  permissionConflicts       Json     @default("[]")
  aiOptimizationSuggestions Json?    @default("[]")
  aiHierarchyScore          Float?   @default(0.0)
  aiConflictResolution      Json?    @default("[]")
  tenantId                  String
  calculatedAt              DateTime @default(now())

  @@unique([roleId, tenantId])
  @@map("role_hierarchy_analytics")
}

model RolePerformanceMetrics {
  id                    String   @id @default(cuid())
  roleId                String
  totalUsers            Int      @default(0)
  activeUsers           Int      @default(0)
  avgSessionDuration    Float?   @default(0.0)
  permissionUtilization Float?   @default(0.0)
  loginFrequency        Float?   @default(0.0)
  taskCompletionRate    Float?   @default(0.0)
  errorRate             Float?   @default(0.0)
  aiPerformanceScore    Float?   @default(0.0)
  aiOptimizationTips    Json?    @default("[]")
  aiPredictedGrowth     Float?   @default(0.0)
  complianceViolations  Int      @default(0)
  securityIncidents     Int      @default(0)
  auditFindings         Int      @default(0)
  tenantId              String
  periodStart           DateTime
  periodEnd             DateTime
  createdAt             DateTime @default(now())

  @@unique([roleId, periodStart, tenantId])
  @@map("role_performance_metrics")
}

model Dashboard {
  id        String   @id @default(cuid())
  name      String
  layout    Json     @default("{}")
  isDefault Boolean  @default(false)
  isPublic  Boolean  @default(false)
  tenantId  String
  userId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tenant    Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  user      User?    @relation(fields: [userId], references: [id])
  widgets   Widget[]

  @@map("dashboards")
}

model Widget {
  id          String     @id @default(cuid())
  dashboardId String
  type        WidgetType
  title       String
  config      Json       @default("{}")
  position    Json       @default("{}")
  size        Json       @default("{}")
  dataSource  String?
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  dashboard   Dashboard  @relation(fields: [dashboardId], references: [id], onDelete: Cascade)

  @@map("widgets")
}

model UserPreference {
  id        String   @id @default(cuid())
  userId    String
  key       String
  value     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, key])
  @@map("user_preferences")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
  @@map("verificationtokens")
}

model Authenticator {
  credentialID         String  @unique
  userId               String
  providerAccountId    String
  credentialPublicKey  String
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String?
  user                 User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, credentialID])
  @@map("authenticators")
}

model DemoUser {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  role         String
  roleCategory String
  company      String
  tenant       String
  tenantType   String
  businessArea String?
  avatar       String
  permissions  Json     @default("[]")
  description  String?
  demoPassword String   @default("demo123")
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("demo_users")
}

model Employee {
  id                     String              @id @default(cuid())
  userId                 String?             @unique
  employeeId             String              @unique
  firstName              String
  lastName               String
  email                  String              @unique
  phone                  String?
  department             String?
  position               String?
  positionTitle          String?
  managerId              String?
  hireDate               DateTime?
  employmentStatus       EmploymentStatus    @default(ACTIVE)
  salary                 Decimal?            @db.Decimal(10, 2)
  predictedChurnRisk     Float?              @default(0.0)
  performanceScore       Float?              @default(0.0)
  suggestedLearningPaths Json?               @default("[]")
  lastPerformanceReview  DateTime?
  nextReviewDue          DateTime?
  skillsMatrix           Json?               @default("{}")
  isActive               Boolean             @default(true)
  tenantId               String
  createdAt              DateTime            @default(now())
  updatedAt              DateTime            @updatedAt
  manager                Employee?           @relation("EmployeeManager", fields: [managerId], references: [id])
  subordinates           Employee[]          @relation("EmployeeManager")
  user                   User?               @relation(fields: [userId], references: [id])
  applications           JobApplication[]
  onboardingWorkflow     OnboardingWorkflow?
  performanceReviews     PerformanceReview[]
  skillAssessments       SkillAssessment[]

  @@map("employees")
}

model JobApplication {
  id                 String               @id @default(cuid())
  candidateName      String
  candidateEmail     String
  position           String
  resumeUrl          String?
  coverLetterUrl     String?
  status             ApplicationStatus    @default(RECEIVED)
  jobPostingId       String?
  aiSuitabilityScore Float?               @default(0.0)
  aiSkillsMatch      Json?                @default("{}")
  aiPersonalityFit   Json?                @default("{}")
  aiRecommendation   String?
  confidenceScore    Float?               @default(0.0)
  appliedDate        DateTime             @default(now())
  lastContactDate    DateTime?
  interviewDate      DateTime?
  decision           ApplicationDecision?
  decisionDate       DateTime?
  assignedEmployeeId String?
  tenantId           String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  assignedEmployee   Employee?            @relation(fields: [assignedEmployeeId], references: [id])
  jobPosting         JobPosting?          @relation(fields: [jobPostingId], references: [id])

  @@map("job_applications")
}

model PerformanceReview {
  id                  String       @id @default(cuid())
  employeeId          String
  reviewerId          String?
  reviewPeriod        String
  overallScore        Float?       @default(0.0)
  goals               Json?        @default("[]")
  achievements        Json?        @default("[]")
  areasOfImprovement  Json?        @default("[]")
  aiGeneratedInsights String?
  predictedGrowthPath Json?        @default("[]")
  retentionRisk       Float?       @default(0.0)
  reviewDate          DateTime     @default(now())
  nextReviewDate      DateTime?
  status              ReviewStatus @default(DRAFT)
  tenantId            String
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  employee            Employee     @relation(fields: [employeeId], references: [id])

  @@map("performance_reviews")
}

model Invoice {
  id                  String         @id @default(cuid())
  invoiceNumber       String         @unique
  vendorName          String
  vendorEmail         String?
  invoiceDate         DateTime
  dueDate             DateTime
  totalAmount         Decimal        @db.Decimal(15, 2)
  currency            String         @default("EUR")
  processingStatus    InvoiceStatus  @default(RECEIVED)
  documentUrl         String?
  documentHash        String?
  ocrConfidenceScore  Float?         @default(0.0)
  extractedData       Json?          @default("{}")
  isDuplicate         Boolean?
  predictedGlAccount  String?
  aiValidationScore   Float?         @default(0.0)
  paymentStatus       PaymentStatus  @default(PENDING)
  paymentDate         DateTime?
  paymentForecastDate DateTime?
  approvalStatus      ApprovalStatus @default(PENDING)
  approvedBy          String?
  approvedAt          DateTime?
  tenantId            String
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt

  // Phase 5 Relationships
  ocrResults            OCRResult[]
  approvalWorkflows     ApprovalWorkflow[]
  threeWayMatches       ThreeWayMatch[]
  confidenceScores      ConfidenceScore[]
  notifications         InvoiceNotification[]
  
  // Email Integration Relationships
  emailInvoices         EmailInvoice[]

  @@map("invoices")
}

model FinancialTransaction {
  id               String            @id @default(cuid())
  amount           Decimal           @db.Decimal(15, 2)
  currency         String            @default("EUR")
  type             TransactionType
  status           TransactionStatus
  description      String?
  reference        String?
  glAccount        String?
  aiCategorization String?
  confidenceScore  Float?            @default(0.0)
  fraudRiskScore   Float?            @default(0.0)
  invoiceId        String?
  metadata         Json              @default("{}")
  tenantId         String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt

  @@map("financial_transactions")
}

// ===== PHASE 5: INVOICE WORKFLOW ENHANCEMENTS =====

model OCRResult {
  id                    String   @id @default(cuid())
  invoiceId             String
  
  // OCR Processing Details
  ocrEngine             String   // "TESSERACT", "GOOGLE_VISION", "ABACUS_AI"
  processingStartTime   DateTime
  processingEndTime     DateTime?
  processingDuration    Float?   // seconds
  
  // Raw OCR Data
  rawText               String?
  rawData               Json     @default("{}")
  
  // Field Extraction Results
  extractedFields       Json     @default("{}")
  fieldConfidenceScores Json     @default("{}")
  
  // Confidence Metrics
  overallConfidence     Float    @default(0.0)
  textQuality           Float    @default(0.0)
  dataAccuracy          Float    @default(0.0)
  
  // Validation Results
  validationStatus      String   @default("PENDING") // PENDING, VALIDATED, FAILED
  validationErrors      Json     @default("[]")
  
  // Machine Learning Enhancement
  mlModelVersion        String?
  mlConfidenceScore     Float?   @default(0.0)
  mlPredictions         Json     @default("{}")
  
  // Metadata
  tenantId              String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationship
  invoice               Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  
  @@map("ocr_results")
}

model ApprovalWorkflow {
  id                    String   @id @default(cuid())
  invoiceId             String
  
  // Workflow Configuration
  workflowType          String   // "AUTOMATIC", "MANUAL", "HYBRID"
  approvalLevel         Int      @default(1)
  maxApprovalLevel      Int      @default(3)
  
  // Current Status
  currentStage          String   @default("PENDING")
  currentApprover       String?
  
  // Approval Stages
  stage1Approver        String?
  stage1Status          ApprovalStatus @default(PENDING)
  stage1ApprovedAt      DateTime?
  stage1Comments        String?
  stage1Amount          Decimal?  @db.Decimal(15, 2)
  
  stage2Approver        String?
  stage2Status          ApprovalStatus @default(PENDING)
  stage2ApprovedAt      DateTime?
  stage2Comments        String?
  stage2Amount          Decimal?  @db.Decimal(15, 2)
  
  stage3Approver        String?
  stage3Status          ApprovalStatus @default(PENDING)
  stage3ApprovedAt      DateTime?
  stage3Comments        String?
  stage3Amount          Decimal?  @db.Decimal(15, 2)
  
  // Escalation Rules
  escalationRules       Json     @default("[]")
  escalationTriggered   Boolean  @default(false)
  escalationReason      String?
  
  // Notifications
  notificationsSent     Json     @default("[]")
  reminderCount         Int      @default(0)
  
  // AI Enhancement
  aiRecommendation      String?  // "APPROVE", "REJECT", "REVIEW"
  aiConfidenceScore     Float?   @default(0.0)
  aiRiskAssessment      Json     @default("{}")
  
  // Metadata
  tenantId              String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationship
  invoice               Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  
  @@map("approval_workflows")
}

model ThreeWayMatch {
  id                    String   @id @default(cuid())
  invoiceId             String
  
  // Purchase Order Data
  purchaseOrderNumber   String?
  purchaseOrderDate     DateTime?
  purchaseOrderAmount   Decimal?  @db.Decimal(15, 2)
  purchaseOrderStatus   String?
  
  // Goods Receipt Data
  goodsReceiptNumber    String?
  goodsReceiptDate      DateTime?
  goodsReceiptAmount    Decimal?  @db.Decimal(15, 2)
  goodsReceiptStatus    String?
  
  // Invoice Data (from Invoice model)
  invoiceNumber         String
  invoiceDate           DateTime
  invoiceAmount         Decimal   @db.Decimal(15, 2)
  
  // Matching Results
  quantityMatch         Boolean   @default(false)
  priceMatch            Boolean   @default(false)
  vendorMatch           Boolean   @default(false)
  dateMatch             Boolean   @default(false)
  
  // Tolerance Management
  quantityTolerance     Float     @default(0.05) // 5% tolerance
  priceTolerance        Float     @default(0.02) // 2% tolerance
  dateTolerance         Int       @default(7)    // 7 days tolerance
  
  // Matching Score
  overallMatchScore     Float     @default(0.0)
  matchingStatus        String    @default("PENDING") // PENDING, MATCHED, UNMATCHED, MANUAL_REVIEW
  
  // Discrepancies
  discrepancies         Json      @default("[]")
  resolutionActions     Json      @default("[]")
  
  // AI Enhancement
  aiMatchingScore       Float?    @default(0.0)
  aiRecommendation      String?
  aiAnalysis            Json      @default("{}")
  
  // Metadata
  tenantId              String
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  
  // Relationship
  invoice               Invoice   @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  
  @@map("three_way_matches")
}

model ConfidenceScore {
  id                    String   @id @default(cuid())
  invoiceId             String
  
  // Confidence Categories
  ocrConfidence         Float    @default(0.0)
  dataExtractionConfidence Float @default(0.0)
  validationConfidence  Float    @default(0.0)
  duplicateCheckConfidence Float @default(0.0)
  vendorMatchConfidence Float    @default(0.0)
  
  // Overall Confidence
  overallConfidence     Float    @default(0.0)
  confidenceLevel       String   @default("LOW") // LOW, MEDIUM, HIGH
  
  // Scoring Factors
  scoringFactors        Json     @default("{}")
  scoringWeights        Json     @default("{}")
  
  // Recommendations
  processingRecommendation String @default("MANUAL_REVIEW") // AUTOMATIC, MANUAL_REVIEW, REJECT
  confidenceThreshold   Float    @default(0.7)
  
  // Machine Learning
  mlModelVersion        String?
  mlFeatures            Json     @default("{}")
  mlPredictions         Json     @default("{}")
  
  // Metadata
  tenantId              String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationship
  invoice               Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  
  @@map("confidence_scores")
}

model InvoiceNotification {
  id                    String   @id @default(cuid())
  invoiceId             String
  
  // Notification Details
  notificationType      String   // "APPROVAL_REQUEST", "REMINDER", "ESCALATION", "STATUS_UPDATE"
  recipientId           String
  recipientEmail        String?
  recipientRole         String?
  
  // Message Content
  subject               String
  message               String
  priority              String   @default("NORMAL") // LOW, NORMAL, HIGH, URGENT
  
  // Delivery Status
  deliveryStatus        String   @default("PENDING") // PENDING, SENT, DELIVERED, FAILED
  deliveryChannel       String   @default("EMAIL") // EMAIL, SMS, PUSH, IN_APP
  sentAt                DateTime?
  deliveredAt           DateTime?
  
  // Response Tracking
  isRead                Boolean  @default(false)
  readAt                DateTime?
  responseReceived      Boolean  @default(false)
  responseAt            DateTime?
  
  // Mobile Push
  pushNotificationId    String?
  pushDeliveryStatus    String?
  
  // Metadata
  tenantId              String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationship
  invoice               Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  
  @@map("invoice_notifications")
}

// ===== MULTI-TENANT EMAIL INTEGRATION =====

model TenantEmailConfig {
  id                    String   @id @default(cuid())
  tenantId              String
  
  // Email Configuration
  emailAddress          String   // invoice@mandant1.wegroup.com
  displayName           String?  // "Invoice Processing - Mandant 1"
  domain                String   // "mandant1.wegroup.com"
  emailPrefix           String   @default("invoice") // "invoice", "rechnung", "billing"
  
  // IMAP/POP3 Configuration
  imapHost              String?
  imapPort              Int?     @default(993)
  imapUsername          String?
  imapPassword          String?
  imapSslEnabled        Boolean  @default(true)
  
  // SMTP Configuration
  smtpHost              String?
  smtpPort              Int?     @default(587)
  smtpUsername          String?
  smtpPassword          String?
  smtpSslEnabled        Boolean  @default(true)
  
  // Email Processing Rules
  autoProcessingEnabled Boolean  @default(true)
  attachmentTypes       Json     @default("[\"pdf\", \"png\", \"jpg\", \"jpeg\"]")
  maxAttachmentSize     Int      @default(25) // MB
  spamFilterEnabled     Boolean  @default(true)
  
  // AI Classification Settings
  aiClassificationEnabled Boolean @default(true)
  confidenceThreshold   Float    @default(0.7)
  autoApprovalThreshold Float    @default(0.9)
  
  // Notification Settings
  notificationEnabled   Boolean  @default(true)
  notificationEmails    Json     @default("[]")
  escalationEmails      Json     @default("[]")
  
  // Backup & Archive
  backupEmailAddress    String?
  archiveEnabled        Boolean  @default(true)
  archiveAfterDays      Int      @default(365)
  
  // Status & Health
  isActive              Boolean  @default(true)
  lastTestDate          DateTime?
  lastTestResult        String?  @default("UNKNOWN")
  connectionStatus      String   @default("NOT_TESTED") // NOT_TESTED, CONNECTED, FAILED
  
  // Metadata
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationships
  tenant                Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  emailInvoices         EmailInvoice[]
  emailProcessingLogs   EmailProcessingLog[]
  
  @@unique([tenantId, emailAddress])
  @@map("tenant_email_configs")
}

model EmailInvoice {
  id                    String   @id @default(cuid())
  tenantId              String
  emailConfigId         String
  
  // Email Details
  messageId             String   @unique
  subject               String
  senderEmail           String
  senderName            String?
  receivedAt            DateTime
  
  // Email Content
  emailBody             String?
  emailBodyHtml         String?
  attachmentCount       Int      @default(0)
  attachmentNames       Json     @default("[]")
  attachmentSizes       Json     @default("[]")
  
  // Processing Status
  processingStatus      String   @default("RECEIVED") // RECEIVED, PROCESSING, COMPLETED, FAILED
  extractionStatus      String   @default("PENDING") // PENDING, IN_PROGRESS, COMPLETED, FAILED
  
  // Classification Results
  classificationId      String?
  isInvoice             Boolean  @default(false)
  invoiceConfidence     Float    @default(0.0)
  documentType          String?  // "INVOICE", "RECEIPT", "QUOTE", "CONTRACT", "OTHER"
  
  // Linked Invoice
  invoiceId             String?
  
  // Error Handling
  errorMessages         Json     @default("[]")
  retryCount            Int      @default(0)
  lastRetryAt           DateTime?
  
  // Metadata
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationships
  tenant                Tenant              @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  emailConfig           TenantEmailConfig   @relation(fields: [emailConfigId], references: [id], onDelete: Cascade)
  invoice               Invoice?            @relation(fields: [invoiceId], references: [id])
  classification        EmailClassification? @relation(fields: [classificationId], references: [id])
  processingLogs        EmailProcessingLog[]
  
  @@map("email_invoices")
}

model EmailProcessingLog {
  id                    String   @id @default(cuid())
  tenantId              String
  emailConfigId         String
  emailInvoiceId        String?
  
  // Processing Details
  processingStep        String   // "EMAIL_FETCH", "CLASSIFICATION", "OCR", "VALIDATION", "APPROVAL"
  processingStatus      String   // "STARTED", "IN_PROGRESS", "COMPLETED", "FAILED"
  
  // Timing Information
  startTime             DateTime
  endTime               DateTime?
  processingDuration    Float?   // seconds
  
  // Input/Output Data
  inputData             Json     @default("{}")
  outputData            Json     @default("{}")
  
  // Error Details
  errorMessage          String?
  errorCode             String?
  stackTrace            String?
  
  // Performance Metrics
  memoryUsed            Float?   // MB
  cpuUsed               Float?   // %
  
  // AI/ML Metrics
  aiModelUsed           String?
  aiConfidence          Float?
  aiProcessingTime      Float?
  
  // Metadata
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationships
  tenant                Tenant            @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  emailConfig           TenantEmailConfig @relation(fields: [emailConfigId], references: [id], onDelete: Cascade)
  emailInvoice          EmailInvoice?     @relation(fields: [emailInvoiceId], references: [id])
  
  @@map("email_processing_logs")
}

model EmailClassification {
  id                    String   @id @default(cuid())
  tenantId              String
  
  // Classification Details
  emailSubject          String
  emailSender           String
  emailBodyPreview      String?
  attachmentInfo        Json     @default("{}")
  
  // AI Classification Results
  documentType          String   // "INVOICE", "RECEIPT", "QUOTE", "CONTRACT", "SPAM", "OTHER"
  confidence            Float    @default(0.0)
  confidenceLevel       String   @default("LOW") // LOW, MEDIUM, HIGH
  
  // Classification Factors
  subjectAnalysis       Json     @default("{}")
  senderAnalysis        Json     @default("{}")
  contentAnalysis       Json     @default("{}")
  attachmentAnalysis    Json     @default("{}")
  
  // Vendor/Supplier Detection
  vendorDetected        Boolean  @default(false)
  vendorName            String?
  vendorConfidence      Float    @default(0.0)
  vendorId              String?
  
  // Priority & Urgency
  priority              String   @default("NORMAL") // LOW, NORMAL, HIGH, URGENT
  urgencyScore          Float    @default(0.0)
  businessImpact        String   @default("LOW") // LOW, MEDIUM, HIGH
  
  // Recommendations
  processingRecommendation String @default("REVIEW") // AUTO_PROCESS, REVIEW, REJECT, ESCALATE
  approvalRecommendation   String @default("MANUAL") // AUTO_APPROVE, MANUAL, REJECT
  
  // ML Model Information
  modelVersion          String?
  modelUsed             String?
  modelFeatures         Json     @default("{}")
  
  // Validation & Feedback
  humanValidated        Boolean  @default(false)
  validationResult      String?  // "CORRECT", "INCORRECT", "PARTIAL"
  validationFeedback    String?
  validatedAt           DateTime?
  validatedBy           String?
  
  // Metadata
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationships
  tenant                Tenant         @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  emailInvoices         EmailInvoice[]
  
  @@map("email_classifications")
}

model CashFlowForecast {
  id               String   @id @default(cuid())
  forecastDate     DateTime
  predictedInflow  Decimal  @db.Decimal(15, 2)
  predictedOutflow Decimal  @db.Decimal(15, 2)
  netCashFlow      Decimal  @db.Decimal(15, 2)
  confidenceLevel  Float    @default(0.0)
  tenantId         String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@unique([tenantId, forecastDate])
  @@map("cash_flow_forecasts")
}

model Shipment {
  id                         String           @id @default(cuid())
  trackingNumber             String           @unique
  carrierName                String?
  status                     ShipmentStatus   @default(REGISTERED)
  originAddress              Json?
  destinationAddress         Json?
  route                      Json             @default("[]")
  estimatedDeliveryDate      DateTime?
  actualDeliveryDate         DateTime?
  pickupDate                 DateTime?
  optimizedCarrierSuggestion String?
  predictedDelayInHours      Int?             @default(0)
  routeEfficiencyScore       Float?           @default(0.0)
  co2FootprintEstimate       Float?           @default(0.0)
  deliveryProbabilityScore   Float?           @default(0.0)
  shippingCost               Decimal?         @db.Decimal(10, 2)
  weight                     Float?
  dimensions                 Json?
  priority                   ShipmentPriority @default(STANDARD)
  customerReference          String?
  customerEmail              String?
  customerPhone              String?
  tenantId                   String
  createdAt                  DateTime         @default(now())
  updatedAt                  DateTime         @updatedAt
  trackingEvents             TrackingEvent[]

  @@map("shipments")
}

model TrackingEvent {
  id          String   @id @default(cuid())
  shipmentId  String
  eventType   String
  location    Json?
  timestamp   DateTime
  description String?
  carrierNote String?
  tenantId    String
  createdAt   DateTime @default(now())
  shipment    Shipment @relation(fields: [shipmentId], references: [id], onDelete: Cascade)

  @@map("tracking_events")
}

model CarrierPerformance {
  id                   String   @id @default(cuid())
  carrierName          String
  deliverySuccessRate  Float    @default(0.0)
  averageDeliveryTime  Float    @default(0.0)
  costEfficiencyScore  Float    @default(0.0)
  customerSatisfaction Float    @default(0.0)
  recommendationScore  Float    @default(0.0)
  predictedReliability Float    @default(0.0)
  lastUpdated          DateTime @default(now())
  tenantId             String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@unique([tenantId, carrierName])
  @@map("carrier_performance")
}



model JobPosting {
  id                 String           @id @default(cuid())
  title              String
  description        String
  requirements       Json             @default("[]")
  department         String
  location           String?
  salaryRange        Json?
  employmentType     String           @default("FULL_TIME")
  aiSkillsExtracted  Json             @default("[]")
  aiMatchingCriteria Json             @default("{}")
  expectedApplicants Int?             @default(0)
  difficultyToFill   Float?           @default(0.0)
  status             String           @default("ACTIVE")
  tenantId           String
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  applications       JobApplication[]

  @@map("job_postings")
}

model OnboardingWorkflow {
  id                     String    @id @default(cuid())
  employeeId             String    @unique
  workflowStatus         String    @default("NOT_STARTED")
  personalizedPlan       Json      @default("[]")
  documentCompletion     Float     @default(0.0)
  trainingCompletion     Float     @default(0.0)
  systemAccessCompletion Float     @default(0.0)
  socialIntegrationScore Float     @default(0.0)
  automatedTasks         Json      @default("[]")
  pendingTasks           Json      @default("[]")
  completedTasks         Json      @default("[]")
  completionPrediction   DateTime?
  riskFactors            Json      @default("[]")
  tenantId               String
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  employee               Employee  @relation(fields: [employeeId], references: [id])

  @@map("onboarding_workflows")
}

model SkillAssessment {
  id                    String    @id @default(cuid())
  employeeId            String
  skillCategory         String
  currentLevel          Float     @default(0.0)
  targetLevel           Float?    @default(0.0)
  aiAnalysis            Json      @default("{}")
  gapAnalysis           Json      @default("[]")
  learningPath          Json      @default("[]")
  estimatedTimeToTarget Float?    @default(0.0)
  lastAssessmentDate    DateTime  @default(now())
  nextAssessmentDate    DateTime?
  improvementRate       Float     @default(0.0)
  tenantId              String
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  employee              Employee  @relation(fields: [employeeId], references: [id])

  @@map("skill_assessments")
}

model WorkforceAnalytics {
  id                   String   @id @default(cuid())
  period               String
  predictedTurnover    Float    @default(0.0)
  predictedHiringNeeds Json     @default("{}")
  skillsShortage       Json     @default("[]")
  avgPerformanceScore  Float    @default(0.0)
  productivityTrends   Json     @default("[]")
  engagementScore      Float    @default(0.0)
  keyInsights          Json     @default("[]")
  recommendedActions   Json     @default("[]")
  riskAlerts           Json     @default("[]")
  tenantId             String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@unique([tenantId, period])
  @@map("workforce_analytics")
}

model DocumentProcessing {
  id                  String   @id @default(cuid())
  documentType        String
  originalFilename    String
  documentUrl         String
  ocrStatus           String   @default("PENDING")
  ocrRawText          String?
  ocrConfidence       Float    @default(0.0)
  ocrProcessingTime   Float?
  extractedData       Json     @default("{}")
  aiValidation        Json     @default("{}")
  confidenceScores    Json     @default("{}")
  fraudRiskScore      Float    @default(0.0)
  fraudIndicators     Json     @default("[]")
  processingStatus    String   @default("NEW")
  humanReviewRequired Boolean  @default(false)
  processingErrors    Json     @default("[]")
  tenantId            String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@map("document_processing")
}

model FinancialForecast {
  id                  String   @id @default(cuid())
  forecastType        String
  timeframe           String
  forecastDate        DateTime
  predictedValue      Decimal  @db.Decimal(15, 2)
  confidenceLevel     Float    @default(0.0)
  predictionRange     Json     @default("{}")
  modelUsed           String?
  inputFactors        Json     @default("[]")
  historicalAccuracy  Float    @default(0.0)
  optimisticScenario  Decimal? @db.Decimal(15, 2)
  pessimisticScenario Decimal? @db.Decimal(15, 2)
  scenarioFactors     Json     @default("[]")
  tenantId            String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@map("financial_forecasts")
}

model RiskAssessment {
  id                   String   @id @default(cuid())
  riskType             String
  entityType           String
  entityId             String
  riskScore            Float    @default(0.0)
  riskLevel            String   @default("LOW")
  riskFactors          Json     @default("[]")
  mitigationStrategies Json     @default("[]")
  aiRecommendations    Json     @default("[]")
  lastUpdated          DateTime @default(now())
  alertTriggered       Boolean  @default(false)
  reviewRequired       Boolean  @default(false)
  tenantId             String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@map("risk_assessments")
}

model FinancialAlert {
  id                String    @id @default(cuid())
  alertType         String
  severity          String    @default("MEDIUM")
  title             String
  description       String
  triggeredValue    Decimal?  @db.Decimal(15, 2)
  thresholdValue    Decimal?  @db.Decimal(15, 2)
  aiRecommendations Json      @default("[]")
  automatedActions  Json      @default("[]")
  status            String    @default("ACTIVE")
  acknowledgedAt    DateTime?
  resolvedAt        DateTime?
  tenantId          String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  @@map("financial_alerts")
}

model InventoryItem {
  id                  String              @id @default(cuid())
  sku                 String              @unique
  name                String
  description         String?
  category            String?
  currentStock        Int                 @default(0)
  minimumStock        Int                 @default(0)
  maximumStock        Int                 @default(0)
  reorderPoint        Int                 @default(0)
  demandForecast      Json                @default("[]")
  optimalStockLevel   Int?                @default(0)
  predictedRunoutDate DateTime?
  autoReorderEnabled  Boolean             @default(false)
  unitCost            Decimal             @db.Decimal(10, 2)
  carryingCost        Decimal?            @db.Decimal(10, 2)
  orderingCost        Decimal?            @db.Decimal(10, 2)
  turnoverRate        Float               @default(0.0)
  stockoutFrequency   Float               @default(0.0)
  excessStockRisk     Float               @default(0.0)
  tenantId            String
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  movements           InventoryMovement[]
  orders              PurchaseOrder[]

  @@map("inventory_items")
}

model InventoryMovement {
  id              String        @id @default(cuid())
  inventoryItemId String
  movementType    String
  quantity        Int
  reason          String?
  unitCost        Decimal?      @db.Decimal(10, 2)
  totalValue      Decimal?      @db.Decimal(10, 2)
  location        String?
  reference       String?
  tenantId        String
  createdAt       DateTime      @default(now())
  inventoryItem   InventoryItem @relation(fields: [inventoryItemId], references: [id])

  @@map("inventory_movements")
}

model PurchaseOrder {
  id                   String        @id @default(cuid())
  orderNumber          String        @unique
  supplierId           String
  inventoryItemId      String
  quantity             Int
  unitPrice            Decimal       @db.Decimal(10, 2)
  totalAmount          Decimal       @db.Decimal(10, 2)
  aiRecommended        Boolean       @default(false)
  expectedDeliveryDate DateTime?
  optimizedQuantity    Int?
  costSavingsEstimate  Decimal?      @db.Decimal(10, 2)
  status               String        @default("PENDING")
  orderedAt            DateTime?
  deliveredAt          DateTime?
  tenantId             String
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  inventoryItem        InventoryItem @relation(fields: [inventoryItemId], references: [id])
  supplier             Supplier      @relation(fields: [supplierId], references: [id])

  @@map("purchase_orders")
}

model RouteOptimization {
  id                   String   @id @default(cuid())
  optimizationDate     DateTime @default(now())
  startLocation        Json
  endLocation          Json
  waypoints            Json     @default("[]")
  originalDistance     Float
  optimizedDistance    Float
  distanceSaved        Float
  originalTime         Float
  optimizedTime        Float
  timeSaved            Float
  trafficConditions    Json     @default("{}")
  weatherImpact        Json     @default("{}")
  vehicleConstraints   Json     @default("{}")
  costFactors          Json     @default("{}")
  co2Original          Float
  co2Optimized         Float
  co2Saved             Float
  implementationStatus String   @default("RECOMMENDED")
  feedbackScore        Float?
  tenantId             String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@map("route_optimizations")
}

model PredictiveMaintenance {
  id                   String    @id @default(cuid())
  equipmentId          String
  equipmentType        String
  equipmentName        String
  nextMaintenanceDate  DateTime?
  maintenanceUrgency   String    @default("LOW")
  predictedFailureDate DateTime?
  confidenceLevel      Float     @default(0.0)
  healthScore          Float     @default(100.0)
  riskFactors          Json      @default("[]")
  recommendedActions   Json      @default("[]")
  utilizationRate      Float     @default(0.0)
  efficiencyScore      Float     @default(0.0)
  lastMaintenanceDate  DateTime?
  maintenanceCost      Decimal?  @db.Decimal(10, 2)
  downTimeCost         Decimal?  @db.Decimal(10, 2)
  replacementCost      Decimal?  @db.Decimal(10, 2)
  tenantId             String
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  @@map("predictive_maintenance")
}

model AIModel {
  id                    String            @id @default(cuid())
  name                  String
  description           String?
  modelType             AIModelType
  version               String            @default("1.0.0")
  status                ModelStatus       @default(TRAINING)
  modelConfig           Json              @default("{}")
  trainingData          Json?             @default("{}")
  hyperparameters       Json?             @default("{}")
  accuracy              Float?            @default(0.0)
  precision             Float?            @default(0.0)
  recall                Float?            @default(0.0)
  f1Score               Float?            @default(0.0)
  confidenceThreshold   Float?            @default(0.5)
  deploymentEndpoint    String?
  deploymentStatus      DeploymentStatus  @default(NOT_DEPLOYED)
  lastTrainedAt         DateTime?
  lastDeployedAt        DateTime?
  nextRetrainingDate    DateTime?
  predictionCount       Int               @default(0)
  averageResponseTime   Float?            @default(0.0)
  lastUsedAt            DateTime?
  modelSource           ModelSource       @default(INTERNAL)
  isOpenSource          Boolean           @default(true)
  licenseType           String?
  provider              String?
  apiEndpoint           String?
  apiKeyRequired        Boolean           @default(false)
  costPerRequest        Decimal?          @db.Decimal(10, 6)
  costPerToken          Decimal?          @db.Decimal(10, 8)
  primaryPurpose        String            @default("General AI Model")
  useCases              String[]          @default([])
  supportedLanguages    String[]          @default([])
  discoveryScore        Float?            @default(0.0)
  lastDiscoveryCheck    DateTime?
  recommendedFor        String[]          @default([])
  replacementCandidates String[]          @default([])
  securityCompliance    Json              @default("{}")
  auditRequired         Boolean           @default(false)
  approvalRequired      Boolean           @default(false)
  riskLevel             RiskLevel         @default(LOW)
  tenantId              String
  createdBy             String
  isActive              Boolean           @default(true)
  tags                  String[]          @default([])
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
  decisions             AIDecision[]
  metrics               AIModelMetric[]
  approvals             ModelApproval[]
  costRecords           ModelCostRecord[]
  testResults           ModelTestResult[]

  @@map("ai_models")
}

model QuantumProcessor {
  id                  String               @id @default(cuid())
  tenantId            String
  name                String
  processorType       QuantumProcessorType @default(SIMULATOR)
  qubits              Int                  @default(64)
  coherenceTime       Float?               @default(0.0)
  gateTime            Float?               @default(0.0)
  fidelity            Float?               @default(0.99)
  status              ProcessorStatus      @default(AVAILABLE)
  currentLoad         Float?               @default(0.0)
  totalComputations   Int                  @default(0)
  uptime              Float?               @default(0.0)
  topology            String?              @default("LINEAR")
  connectivityMatrix  Json?                @default("[]")
  supportedGates      Json?                @default("[]")
  calibrationData     Json?                @default("{}")
  aiPerformanceScore  Float?               @default(0.0)
  aiOptimizationLevel Float?               @default(0.0)
  aiPredictedFailure  DateTime?
  aiMaintenanceAlerts Json?                @default("[]")
  tenantId_ref        String
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  algorithms          QuantumAlgorithm[]
  computations        QuantumComputation[]
  tenant              Tenant               @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("quantum_processors")
}

model QuantumAlgorithm {
  id                      String                @id @default(cuid())
  tenantId                String
  name                    String
  algorithmType           QuantumAlgorithmType  @default(OPTIMIZATION)
  description             String?
  requiredQubits          Int                   @default(1)
  gateDepth               Int                   @default(1)
  circuitComplexity       Int                   @default(1)
  quantumAdvantage        Float?                @default(1.0)
  circuitDefinition       Json                  @default("{}")
  parameters              Json                  @default("{}")
  classicalPreprocessing  Json?                 @default("{}")
  classicalPostprocessing Json?                 @default("{}")
  averageRunTime          Float?                @default(0.0)
  successRate             Float?                @default(0.0)
  qualityScore            Float?                @default(0.0)
  aiOptimizedVersion      Json?                 @default("{}")
  aiPerformanceGains      Float?                @default(0.0)
  aiTuningHistory         Json?                 @default("[]")
  businessDomain          String?               @default("GENERAL")
  useCases                Json?                 @default("[]")
  roi                     Float?                @default(0.0)
  processorId             String
  tenantId_ref            String
  createdAt               DateTime              @default(now())
  updatedAt               DateTime              @updatedAt
  processor               QuantumProcessor      @relation(fields: [processorId], references: [id], onDelete: Cascade)
  tenant                  Tenant                @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)
  computations            QuantumComputation[]
  optimizations           QuantumOptimization[]

  @@map("quantum_algorithms")
}

model QuantumComputation {
  id                        String              @id @default(cuid())
  tenantId                  String
  computationId             String              @unique
  algorithmId               String
  processorId               String
  inputData                 Json                @default("{}")
  parameters                Json                @default("{}")
  status                    ComputationStatus   @default(QUEUED)
  priority                  ComputationPriority @default(NORMAL)
  queuedAt                  DateTime            @default(now())
  startedAt                 DateTime?
  completedAt               DateTime?
  outputData                Json?               @default("{}")
  measurements              Json?               @default("{}")
  statistics                Json?               @default("{}")
  errorRate                 Float?              @default(0.0)
  executionTime             Float?              @default(0.0)
  qubitsUsed                Int?                @default(0)
  gateOperations            Int?                @default(0)
  memoryUsed                Float?              @default(0.0)
  aiQualityAssessment       Float?              @default(0.0)
  aiOptimizationSuggestions Json?               @default("[]")
  aiAnomalyDetection        Boolean             @default(false)
  businessDomain            String?
  requestedBy               String?
  businessJustification     String?
  estimatedValue            Float?              @default(0.0)
  tenantId_ref              String
  createdAt                 DateTime            @default(now())
  updatedAt                 DateTime            @updatedAt
  algorithm                 QuantumAlgorithm    @relation(fields: [algorithmId], references: [id], onDelete: Cascade)
  processor                 QuantumProcessor    @relation(fields: [processorId], references: [id], onDelete: Cascade)
  tenant                    Tenant              @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("quantum_computations")
}

model QuantumNeuralNetwork {
  id                    String                @id @default(cuid())
  tenantId              String
  name                  String
  networkType           QNNType               @default(VARIATIONAL)
  layers                Json                  @default("[]")
  qubits                Int                   @default(4)
  parameters            Int                   @default(10)
  entanglementStructure String?               @default("LINEAR")
  trainingData          Json?                 @default("{}")
  trainingStatus        TrainingStatus        @default(NOT_STARTED)
  currentEpoch          Int                   @default(0)
  maxEpochs             Int                   @default(100)
  learningRate          Float?                @default(0.01)
  accuracy              Float?                @default(0.0)
  loss                  Float?                @default(1.0)
  quantumAdvantage      Float?                @default(1.0)
  convergenceRate       Float?                @default(0.0)
  classicalComparison   Json?                 @default("{}")
  hybridOptimization    Boolean               @default(false)
  aiMetaLearning        Boolean               @default(false)
  applicationDomain     String?
  businessValue         Float?                @default(0.0)
  deploymentStatus      DeploymentStatus      @default(NOT_DEPLOYED)
  tenantId_ref          String
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  tenant                Tenant                @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)
  optimizations         QuantumOptimization[]

  @@map("quantum_neural_networks")
}

model QuantumOptimization {
  id                   String                  @id @default(cuid())
  tenantId             String
  optimizationId       String                  @unique
  problemType          OptimizationProblemType @default(COMBINATORIAL)
  objectiveFunction    Json                    @default("{}")
  constraints          Json                    @default("[]")
  variables            Json                    @default("[]")
  problemSize          Int                     @default(1)
  algorithmId          String?
  neuralNetworkId      String?
  quantumApproach      String                  @default("QAOA")
  status               OptimizationStatus      @default(ACTIVE)
  bestSolution         Json?                   @default("{}")
  objectiveValue       Float?                  @default(0.0)
  solutionQuality      Float?                  @default(0.0)
  iterations           Int                     @default(0)
  convergenceHistory   Json?                   @default("[]")
  executionTime        Float?                  @default(0.0)
  quantumSpeedup       Float?                  @default(1.0)
  aiParameterTuning    Boolean                 @default(false)
  aiHybridApproach     Boolean                 @default(false)
  aiMetaOptimization   Json?                   @default("{}")
  businessDomain       String?
  estimatedSavings     Float?                  @default(0.0)
  implementationStatus String?                 @default("PLANNING")
  roi                  Float?                  @default(0.0)
  tenantId_ref         String
  createdBy            String?
  createdAt            DateTime                @default(now())
  updatedAt            DateTime                @updatedAt
  algorithm            QuantumAlgorithm?       @relation(fields: [algorithmId], references: [id])
  neuralNetwork        QuantumNeuralNetwork?   @relation(fields: [neuralNetworkId], references: [id])
  tenant               Tenant                  @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("quantum_optimizations")
}

model EcosystemPartner {
  id                   String                      @id @default(cuid())
  tenantId             String
  partnerName          String
  partnerType          PartnerType                 @default(TECHNOLOGY)
  industry             String?
  website              String?
  contactEmail         String?
  contactPhone         String?
  description          String?
  logo                 String?
  partnershipLevel     PartnershipLevel            @default(BASIC)
  partnershipStatus    PartnershipStatus           @default(ACTIVE)
  collaborationAreas   Json                        @default("[]")
  apiEndpoints         Json?                       @default("[]")
  dataExchangeFormat   String?                     @default("JSON")
  authenticationMethod String?                     @default("API_KEY")
  integrationStatus    IntegrationStatus           @default(NOT_INTEGRATED)
  totalTransactions    Int                         @default(0)
  successRate          Float?                      @default(0.0)
  averageResponseTime  Float?                      @default(0.0)
  dataQualityScore     Float?                      @default(0.0)
  aiCompatibilityScore Float?                      @default(0.0)
  aiValueScore         Float?                      @default(0.0)
  aiRiskAssessment     Float?                      @default(0.0)
  aiRecommendations    Json?                       @default("[]")
  revenue              Float?                      @default(0.0)
  costs                Float?                      @default(0.0)
  roi                  Float?                      @default(0.0)
  strategicImportance  StrategicImportance         @default(MEDIUM)
  contractStartDate    DateTime?
  contractEndDate      DateTime?
  contractValue        Float?                      @default(0.0)
  slaTerms             Json?                       @default("{}")
  complianceStatus     ComplianceStatus            @default(PENDING)
  tenantId_ref         String
  createdBy            String?
  createdAt            DateTime                    @default(now())
  updatedAt            DateTime                    @updatedAt
  collaborations       CrossCompanyCollaboration[]
  orchestrations       EcosystemOrchestration[]
  tenant               Tenant                      @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)
  integrations         GlobalIntegration[]

  @@map("ecosystem_partners")
}

model CrossCompanyCollaboration {
  id                   String                   @id @default(cuid())
  tenantId             String
  collaborationName    String
  collaborationType    CollaborationType        @default(PROJECT_BASED)
  description          String?
  objectives           Json                     @default("[]")
  expectedOutcomes     Json                     @default("[]")
  timeline             Json?                    @default("{}")
  primaryPartnerId     String
  secondaryPartnerIds  String[]                 @default([])
  partnerRoles         Json                     @default("{}")
  aiOrchestrationLevel Float?                   @default(0.0)
  autonomousProcesses  Json?                    @default("[]")
  aiDecisionMaking     Boolean                  @default(false)
  aiConflictResolution Boolean                  @default(false)
  status               CollaborationStatus      @default(PLANNING)
  progressPercentage   Float?                   @default(0.0)
  milestones           Json?                    @default("[]")
  currentPhase         String?
  kpis                 Json?                    @default("[]")
  actualOutcomes       Json?                    @default("[]")
  successScore         Float?                   @default(0.0)
  estimatedValue       Float?                   @default(0.0)
  actualValue          Float?                   @default(0.0)
  costSharing          Json?                    @default("{}")
  riskSharing          Json?                    @default("{}")
  dataGovernance       Json?                    @default("{}")
  securityProtocols    Json?                    @default("[]")
  privacySettings      Json?                    @default("{}")
  tenantId_ref         String
  createdBy            String?
  createdAt            DateTime                 @default(now())
  updatedAt            DateTime                 @updatedAt
  primaryPartner       EcosystemPartner         @relation(fields: [primaryPartnerId], references: [id], onDelete: Cascade)
  tenant               Tenant                   @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)
  orchestrations       EcosystemOrchestration[]

  @@map("cross_company_collaborations")
}

model EcosystemOrchestration {
  id                   String                     @id @default(cuid())
  tenantId             String
  orchestrationName    String
  orchestrationType    OrchestrationType          @default(WORKFLOW)
  processDefinition    Json                       @default("{}")
  workflowSteps        Json                       @default("[]")
  decisionPoints       Json                       @default("[]")
  automationRules      Json                       @default("[]")
  aiAutonomyLevel      Float                      @default(0.95)
  aiDecisionMaking     Boolean                    @default(true)
  aiLearningEnabled    Boolean                    @default(true)
  aiOptimization       Boolean                    @default(true)
  partnerId            String?
  collaborationId      String?
  involvedSystems      Json                       @default("[]")
  systemRoles          Json                       @default("{}")
  status               OrchestrationStatus        @default(PENDING)
  currentStep          String?
  executionHistory     Json?                      @default("[]")
  averageExecutionTime Float?                     @default(0.0)
  successRate          Float?                     @default(0.0)
  errorRate            Float?                     @default(0.0)
  throughput           Float?                     @default(0.0)
  aiOptimizations      Json?                      @default("[]")
  aiPredictions        Json?                      @default("{}")
  aiRecommendations    Json?                      @default("[]")
  aiAnomalyDetection   Json?                      @default("[]")
  businessValue        Float?                     @default(0.0)
  costSavings          Float?                     @default(0.0)
  efficiencyGains      Float?                     @default(0.0)
  qualityImprovements  Float?                     @default(0.0)
  tenantId_ref         String
  createdBy            String?
  createdAt            DateTime                   @default(now())
  updatedAt            DateTime                   @updatedAt
  intelligence         EcosystemIntelligence[]
  collaboration        CrossCompanyCollaboration? @relation(fields: [collaborationId], references: [id])
  partner              EcosystemPartner?          @relation(fields: [partnerId], references: [id])
  tenant               Tenant                     @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("ecosystem_orchestrations")
}

model GlobalIntegration {
  id                     String                @id @default(cuid())
  tenantId               String
  integrationName        String
  integrationType        GlobalIntegrationType @default(API)
  sourceSystem           String
  targetSystem           String
  partnerId              String?
  apiEndpoint            String?
  authenticationMethod   String?               @default("API_KEY")
  dataFormat             String?               @default("JSON")
  protocolVersion        String?
  dataMapping            Json                  @default("{}")
  transformationRules    Json                  @default("[]")
  validationRules        Json                  @default("[]")
  aiDataQualityCheck     Boolean               @default(true)
  aiErrorCorrection      Boolean               @default(true)
  aiFormatOptimization   Boolean               @default(true)
  aiSecurityScanning     Boolean               @default(true)
  status                 IntegrationStatus     @default(NOT_INTEGRATED)
  totalTransactions      Int                   @default(0)
  successfulTransactions Int                   @default(0)
  failedTransactions     Int                   @default(0)
  averageLatency         Float?                @default(0.0)
  healthScore            Float?                @default(100.0)
  lastSuccessfulSync     DateTime?
  lastError              String?
  errorCount             Int                   @default(0)
  encryptionEnabled      Boolean               @default(true)
  securityProtocol       String?               @default("TLS_1_3")
  accessControls         Json?                 @default("[]")
  auditTrail             Json?                 @default("[]")
  businessValue          Float?                @default(0.0)
  costPerTransaction     Float?                @default(0.0)
  roi                    Float?                @default(0.0)
  tenantId_ref           String
  createdBy              String?
  createdAt              DateTime              @default(now())
  updatedAt              DateTime              @updatedAt
  partner                EcosystemPartner?     @relation(fields: [partnerId], references: [id])
  tenant                 Tenant                @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("global_integrations")
}

model EcosystemIntelligence {
  id                   String                  @id @default(cuid())
  tenantId             String
  intelligenceType     IntelligenceType        @default(PERFORMANCE_ANALYTICS)
  dataSource           String
  orchestrationId      String?
  collectionPeriod     String                  @default("DAILY")
  performanceMetrics   Json                    @default("{}")
  businessMetrics      Json                    @default("{}")
  technicalMetrics     Json                    @default("{}")
  aiInsights           Json                    @default("[]")
  aiPredictions        Json                    @default("{}")
  aiRecommendations    Json                    @default("[]")
  aiAnomalies          Json                    @default("[]")
  ecosystemHealthScore Float?                  @default(100.0)
  partnerHealthScores  Json?                   @default("{}")
  collaborationScore   Float?                  @default(0.0)
  integrationScore     Float?                  @default(0.0)
  revenueImpact        Float?                  @default(0.0)
  costOptimization     Float?                  @default(0.0)
  efficiencyGains      Float?                  @default(0.0)
  riskMitigation       Float?                  @default(0.0)
  trends               Json?                   @default("[]")
  forecasts            Json?                   @default("{}")
  seasonalPatterns     Json?                   @default("{}")
  alertThresholds      Json?                   @default("{}")
  activeAlerts         Json?                   @default("[]")
  notificationSettings Json?                   @default("{}")
  dataQualityScore     Float?                  @default(100.0)
  dataCompleteness     Float?                  @default(100.0)
  dataAccuracy         Float?                  @default(100.0)
  reportingPeriodStart DateTime
  reportingPeriodEnd   DateTime
  tenantId_ref         String
  createdAt            DateTime                @default(now())
  updatedAt            DateTime                @updatedAt
  orchestration        EcosystemOrchestration? @relation(fields: [orchestrationId], references: [id])
  tenant               Tenant                  @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("ecosystem_intelligence")
}

model BusinessModel {
  id                    String                 @id @default(cuid())
  tenantId              String
  modelName             String
  modelType             BusinessModelType      @default(TRADITIONAL)
  aiGenerated           Boolean                @default(false)
  aiConfidenceScore     Float?                 @default(0.0)
  aiModelVersion        String?
  generationPrompt      String?
  valuePropositions     Json                   @default("[]")
  customerSegments      Json                   @default("[]")
  channels              Json                   @default("[]")
  customerRelationships Json                   @default("[]")
  revenueStreams        Json                   @default("[]")
  keyResources          Json                   @default("[]")
  keyActivities         Json                   @default("[]")
  keyPartnerships       Json                   @default("[]")
  costStructure         Json                   @default("[]")
  targetMarket          Json?                  @default("{}")
  marketSize            Float?                 @default(0.0)
  competitiveAdvantage  Json?                  @default("[]")
  barriers              Json?                  @default("[]")
  projectedRevenue      Json?                  @default("{}")
  projectedCosts        Json?                  @default("{}")
  breakEvenPoint        Int?                   @default(0)
  roi                   Float?                 @default(0.0)
  validationStatus      ValidationStatus       @default(CONCEPT)
  validationResults     Json?                  @default("[]")
  customerFeedback      Json?                  @default("[]")
  marketTests           Json?                  @default("[]")
  implementationPlan    Json?                  @default("{}")
  milestones            Json?                  @default("[]")
  requiredInvestment    Float?                 @default(0.0)
  timeToMarket          Int?                   @default(0)
  actualRevenue         Float?                 @default(0.0)
  actualCosts           Float?                 @default(0.0)
  actualRoi             Float?                 @default(0.0)
  performanceMetrics    Json?                  @default("{}")
  innovationScore       Float?                 @default(0.0)
  disruptionPotential   Float?                 @default(0.0)
  scalabilityScore      Float?                 @default(0.0)
  riskProfile           Json?                  @default("{}")
  riskMitigation        Json?                  @default("[]")
  successProbability    Float?                 @default(0.0)
  status                BusinessModelStatus    @default(DRAFT)
  tenantId_ref          String
  createdBy             String?
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  tenant                Tenant                 @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)
  competitiveAnalyses   CompetitiveAnalysis[]
  validations           InnovationValidation[]
  opportunities         MarketOpportunity[]

  @@map("business_models")
}

model InnovationPipeline {
  id                     String                 @id @default(cuid())
  tenantId               String
  pipelineName           String
  description            String?
  stages                 Json                   @default("[]")
  gateReview             Json                   @default("{}")
  resourceAllocation     Json                   @default("{}")
  aiOrchestration        Boolean                @default(true)
  aiIdeaGeneration       Boolean                @default(true)
  aiValidationSupport    Boolean                @default(true)
  aiResourceOptimization Boolean                @default(true)
  totalProjects          Int                    @default(0)
  activeProjects         Int                    @default(0)
  completedProjects      Int                    @default(0)
  cancelledProjects      Int                    @default(0)
  totalBudget            Float?                 @default(0.0)
  allocatedBudget        Float?                 @default(0.0)
  actualSpend            Float?                 @default(0.0)
  budgetUtilization      Float?                 @default(0.0)
  pipelineVelocity       Float?                 @default(0.0)
  successRate            Float?                 @default(0.0)
  timeToMarket           Float?                 @default(0.0)
  roi                    Float?                 @default(0.0)
  aiEfficiencyScore      Float?                 @default(0.0)
  aiInnovationPotential  Float?                 @default(0.0)
  aiRiskAssessment       Float?                 @default(0.0)
  aiRecommendations      Json?                  @default("[]")
  strategicPriorities    Json?                  @default("[]")
  alignmentScore         Float?                 @default(0.0)
  marketAlignment        Float?                 @default(0.0)
  technologyAlignment    Float?                 @default(0.0)
  status                 PipelineStatus         @default(ACTIVE)
  tenantId_ref           String
  managedBy              String?
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  tenant                 Tenant                 @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)
  projects               InnovationProject[]
  validations            InnovationValidation[]

  @@map("innovation_pipelines")
}

model InnovationProject {
  id                     String                 @id @default(cuid())
  tenantId               String
  projectName            String
  description            String?
  pipelineId             String
  projectType            InnovationProjectType  @default(PRODUCT_INNOVATION)
  currentStage           String                 @default("IDEATION")
  priority               ProjectPriority        @default(MEDIUM)
  aiGenerated            Boolean                @default(false)
  aiIdeaScore            Float?                 @default(0.0)
  aiMarketPotential      Float?                 @default(0.0)
  aiTechnicalFeasibility Float?                 @default(0.0)
  aiRecommendations      Json?                  @default("[]")
  plannedStartDate       DateTime?
  plannedEndDate         DateTime?
  actualStartDate        DateTime?
  actualEndDate          DateTime?
  estimatedDuration      Int?                   @default(0)
  teamSize               Int?                   @default(0)
  teamMembers            Json?                  @default("[]")
  budget                 Float?                 @default(0.0)
  actualSpend            Float?                 @default(0.0)
  progressPercentage     Float?                 @default(0.0)
  completedMilestones    Json?                  @default("[]")
  upcomingMilestones     Json?                  @default("[]")
  blockers               Json?                  @default("[]")
  innovationIndex        Float?                 @default(0.0)
  noveltyScore           Float?                 @default(0.0)
  implementabilityScore  Float?                 @default(0.0)
  marketReadiness        Float?                 @default(0.0)
  riskFactors            Json?                  @default("[]")
  successCriteria        Json?                  @default("[]")
  successProbability     Float?                 @default(0.0)
  expectedRevenue        Float?                 @default(0.0)
  expectedCosts          Float?                 @default(0.0)
  expectedRoi            Float?                 @default(0.0)
  strategicValue         Float?                 @default(0.0)
  status                 ProjectStatus          @default(DRAFT)
  tenantId_ref           String
  projectManager         String?
  createdBy              String?
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  pipeline               InnovationPipeline     @relation(fields: [pipelineId], references: [id], onDelete: Cascade)
  tenant                 Tenant                 @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)
  validations            InnovationValidation[]

  @@map("innovation_projects")
}

model MarketOpportunity {
  id                   String                     @id @default(cuid())
  tenantId             String
  opportunityName      String
  description          String?
  aiDiscovered         Boolean                    @default(false)
  aiConfidenceScore    Float?                     @default(0.0)
  aiDataSources        Json?                      @default("[]")
  aiAnalysisDate       DateTime?
  marketSegment        String?
  marketSize           Float?                     @default(0.0)
  marketGrowthRate     Float?                     @default(0.0)
  marketTrends         Json?                      @default("[]")
  customerNeed         String?
  competitorCount      Int?                       @default(0)
  competitiveIntensity Float?                     @default(0.0)
  barrierToEntry       Float?                     @default(0.0)
  differentiation      Json?                      @default("[]")
  revenueOpportunity   Float?                     @default(0.0)
  profitMargin         Float?                     @default(0.0)
  investmentRequired   Float?                     @default(0.0)
  paybackPeriod        Int?                       @default(0)
  strategicAlignment   Float?                     @default(0.0)
  capabilityMatch      Float?                     @default(0.0)
  resourceRequirements Json?                      @default("[]")
  synergies            Json?                      @default("[]")
  marketRisk           Float?                     @default(0.0)
  technicalRisk        Float?                     @default(0.0)
  competitiveRisk      Float?                     @default(0.0)
  overallRisk          Float?                     @default(0.0)
  aiOpportunityScore   Float?                     @default(0.0)
  aiPriorityRanking    Int?                       @default(0)
  aiRecommendedAction  String?
  aiNextSteps          Json?                      @default("[]")
  timeToMarket         Int?                       @default(0)
  windowOfOpportunity  Int?                       @default(0)
  urgencyLevel         UrgencyLevel               @default(MEDIUM)
  validationLevel      OpportunityValidationLevel @default(IDENTIFIED)
  evidenceStrength     Float?                     @default(0.0)
  customerValidation   Json?                      @default("[]")
  businessModelId      String?
  status               OpportunityStatus          @default(IDENTIFIED)
  tenantId_ref         String
  discoveredBy         String?
  createdAt            DateTime                   @default(now())
  updatedAt            DateTime                   @updatedAt
  competitiveAnalyses  CompetitiveAnalysis[]
  validations          InnovationValidation[]
  businessModel        BusinessModel?             @relation(fields: [businessModelId], references: [id])
  tenant               Tenant                     @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("market_opportunities")
}

model InnovationValidation {
  id                     String              @id @default(cuid())
  tenantId               String
  validationName         String
  validationType         ValidationType      @default(CUSTOMER_FEEDBACK)
  businessModelId        String?
  projectId              String?
  opportunityId          String?
  pipelineId             String?
  methodology            String?             @default("SURVEY")
  targetAudience         Json?               @default("{}")
  sampleSize             Int?                @default(0)
  successCriteria        Json?               @default("[]")
  aiValidationDesign     Boolean             @default(true)
  aiDataAnalysis         Boolean             @default(true)
  aiInsightGeneration    Boolean             @default(true)
  aiConfidenceLevel      Float?              @default(0.0)
  plannedStartDate       DateTime?
  plannedEndDate         DateTime?
  actualStartDate        DateTime?
  actualEndDate          DateTime?
  responseRate           Float?              @default(0.0)
  validationResults      Json?               @default("{}")
  keyFindings            Json?               @default("[]")
  insights               Json?               @default("[]")
  aiSentimentAnalysis    Json?               @default("{}")
  aiPatternRecognition   Json?               @default("[]")
  aiPredictiveInsights   Json?               @default("[]")
  aiRecommendations      Json?               @default("[]")
  validationScore        Float?              @default(0.0)
  successIndicators      Json?               @default("[]")
  failureIndicators      Json?               @default("[]")
  nextSteps              Json?               @default("[]")
  recommendedAction      ValidationAction    @default(CONTINUE_VALIDATION)
  decisionRationale      String?
  stakeholderBuyIn       Float?              @default(0.0)
  impactOnBusiness       Json?               @default("{}")
  riskMitigation         Json?               @default("[]")
  opportunityEnhancement Json?               @default("[]")
  status                 ValidationStatus    @default(PLANNED)
  tenantId_ref           String
  conductedBy            String?
  createdAt              DateTime            @default(now())
  updatedAt              DateTime            @updatedAt
  businessModel          BusinessModel?      @relation(fields: [businessModelId], references: [id])
  opportunity            MarketOpportunity?  @relation(fields: [opportunityId], references: [id])
  pipeline               InnovationPipeline? @relation(fields: [pipelineId], references: [id])
  project                InnovationProject?  @relation(fields: [projectId], references: [id])
  tenant                 Tenant              @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("innovation_validations")
}

model CompetitiveAnalysis {
  id                     String                  @id @default(cuid())
  tenantId               String
  analysisName           String
  analysisType           CompetitiveAnalysisType @default(COMPETITOR_PROFILING)
  businessModelId        String?
  opportunityId          String?
  marketSegment          String?
  geographicScope        String?                 @default("GLOBAL")
  aiPowered              Boolean                 @default(true)
  aiDataSources          Json?                   @default("[]")
  aiAnalysisDepth        Float?                  @default(0.0)
  aiRefreshFrequency     String?                 @default("WEEKLY")
  totalCompetitors       Int?                    @default(0)
  directCompetitors      Json?                   @default("[]")
  indirectCompetitors    Json?                   @default("[]")
  substitutes            Json?                   @default("[]")
  competitorProfiles     Json?                   @default("[]")
  marketShares           Json?                   @default("{}")
  competitorStrengths    Json?                   @default("{}")
  competitorWeaknesses   Json?                   @default("{}")
  positioningMap         Json?                   @default("{}")
  competitiveAdvantages  Json?                   @default("[]")
  vulnerabilities        Json?                   @default("[]")
  whiteSpaces            Json?                   @default("[]")
  aiCompetitiveThreat    Float?                  @default(0.0)
  aiMarketOpportunity    Float?                  @default(0.0)
  aiRecommendedStrategy  Json?                   @default("[]")
  aiPredictedMoves       Json?                   @default("[]")
  performanceBenchmarks  Json?                   @default("{}")
  featuresComparison     Json?                   @default("{}")
  pricingAnalysis        Json?                   @default("{}")
  valuePropositionGaps   Json?                   @default("[]")
  strategicThreats       Json?                   @default("[]")
  strategicOpportunities Json?                   @default("[]")
  recommendedActions     Json?                   @default("[]")
  priorityLevel          CompetitivePriority     @default(MEDIUM)
  dataQualityScore       Float?                  @default(0.0)
  analysisConfidence     Float?                  @default(0.0)
  lastUpdated            DateTime?
  nextUpdate             DateTime?
  status                 AnalysisStatus          @default(IN_PROGRESS)
  tenantId_ref           String
  analyzedBy             String?
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt
  businessModel          BusinessModel?          @relation(fields: [businessModelId], references: [id])
  opportunity            MarketOpportunity?      @relation(fields: [opportunityId], references: [id])
  tenant                 Tenant                  @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("competitive_analyses")
}

model CarbonFootprintTracking {
  id                        String                  @id @default(cuid())
  tenantId                  String
  trackingPeriod            String                  @default("MONTHLY")
  scope1Emissions           Float?                  @default(0.0)
  scope2Emissions           Float?                  @default(0.0)
  scope3Emissions           Float?                  @default(0.0)
  totalEmissions            Float?                  @default(0.0)
  energyConsumption         Json?                   @default("{}")
  transportation            Json?                   @default("{}")
  manufacturing             Json?                   @default("{}")
  supplyChain               Json?                   @default("{}")
  wasteManagement           Json?                   @default("{}")
  aiCarbonPrediction        Float?                  @default(0.0)
  aiOptimizationSuggestions Json?                   @default("[]")
  aiCarbonEfficiency        Float?                  @default(0.0)
  aiReductionPotential      Float?                  @default(0.0)
  carbonTargets             Json?                   @default("{}")
  targetAchievement         Float?                  @default(0.0)
  netZeroTimeline           DateTime?
  reductionPlan             Json?                   @default("[]")
  verificationStatus        VerificationStatus      @default(PENDING)
  certificationBody         String?
  verificationDate          DateTime?
  certificationLevel        String?                 @default("BASIC")
  carbonCost                Float?                  @default(0.0)
  offsetInvestment          Float?                  @default(0.0)
  greenInvestments          Float?                  @default(0.0)
  reportingStandard         String?                 @default("GHG_PROTOCOL")
  dataQuality               Float?                  @default(0.0)
  dataCompleteness          Float?                  @default(0.0)
  periodStart               DateTime
  periodEnd                 DateTime
  tenantId_ref              String
  calculatedAt              DateTime                @default(now())
  createdAt                 DateTime                @default(now())
  updatedAt                 DateTime                @updatedAt
  tenant                    Tenant                  @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)
  esgMetrics                SustainabilityMetrics[]

  @@map("carbon_footprint_tracking")
}

model ESGCompliance {
  id                      String                  @id @default(cuid())
  tenantId                String
  complianceFramework     ESGFramework            @default(GRI_STANDARDS)
  environmentalScore      Float?                  @default(0.0)
  environmentalFactors    Json?                   @default("{}")
  climateRisks            Json?                   @default("[]")
  environmentalPolicies   Json?                   @default("[]")
  socialScore             Float?                  @default(0.0)
  socialFactors           Json?                   @default("{}")
  employeeWelfare         Json?                   @default("{}")
  communityImpact         Json?                   @default("{}")
  humanRights             Json?                   @default("{}")
  governanceScore         Float?                  @default(0.0)
  governanceFactors       Json?                   @default("{}")
  boardDiversity          Json?                   @default("{}")
  executiveCompensation   Json?                   @default("{}")
  businessEthics          Json?                   @default("{}")
  overallESGScore         Float?                  @default(0.0)
  esgRating               ESGRating               @default(BBB)
  esgRisk                 ESGRisk                 @default(MEDIUM)
  aiESGPrediction         Float?                  @default(0.0)
  aiComplianceGaps        Json?                   @default("[]")
  aiRecommendations       Json?                   @default("[]")
  aiRiskAssessment        Json?                   @default("{}")
  complianceStatus        ComplianceStatus        @default(PENDING)
  requiredActions         Json?                   @default("[]")
  deadlines               Json?                   @default("[]")
  responsibleParties      Json?                   @default("[]")
  reportingRequirements   Json?                   @default("[]")
  disclosureLevel         DisclosureLevel         @default(BASIC)
  lastReportedDate        DateTime?
  nextReportingDate       DateTime?
  stakeholderFeedback     Json?                   @default("[]")
  materiality             Json?                   @default("{}")
  stakeholderExpectations Json?                   @default("[]")
  improvementPlan         Json?                   @default("[]")
  benchmarkComparison     Json?                   @default("{}")
  progressTracking        Json?                   @default("[]")
  assessmentPeriod        String                  @default("ANNUAL")
  periodStart             DateTime
  periodEnd               DateTime
  tenantId_ref            String
  assessedBy              String?
  createdAt               DateTime                @default(now())
  updatedAt               DateTime                @updatedAt
  environmentalRisks      EnvironmentalRisk[]
  tenant                  Tenant                  @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)
  sustainabilityMetrics   SustainabilityMetrics[]

  @@map("esg_compliance")
}

model SustainabilityMetrics {
  id                      String                   @id @default(cuid())
  tenantId                String
  metricCategory          SustainabilityCategory   @default(ENVIRONMENTAL)
  metricName              String
  metricType              String                   @default("KPI")
  unit                    String?                  @default("percentage")
  description             String?
  currentValue            Float?                   @default(0.0)
  targetValue             Float?                   @default(0.0)
  benchmarkValue          Float?                   @default(0.0)
  previousValue           Float?                   @default(0.0)
  performanceScore        Float?                   @default(0.0)
  targetAchievement       Float?                   @default(0.0)
  yearOverYearChange      Float?                   @default(0.0)
  trend                   MetricTrend              @default(STABLE)
  aiPredictedValue        Float?                   @default(0.0)
  aiOptimizationPotential Float?                   @default(0.0)
  aiRecommendations       Json?                    @default("[]")
  aiDataConfidence        Float?                   @default(0.0)
  carbonFootprintId       String?
  esgComplianceId         String?
  relatedMetrics          Json?                    @default("[]")
  dataSource              String?
  dataQuality             Float?                   @default(0.0)
  dataFrequency           String?                  @default("MONTHLY")
  lastUpdated             DateTime?
  businessImpact          Float?                   @default(0.0)
  stakeholderImportance   Float?                   @default(0.0)
  regulatoryImportance    Float?                   @default(0.0)
  isReported              Boolean                  @default(false)
  reportingFramework      String?
  reportingFrequency      String?                  @default("ANNUAL")
  measurementPeriod       String                   @default("MONTHLY")
  periodStart             DateTime
  periodEnd               DateTime
  tenantId_ref            String
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  carbonFootprint         CarbonFootprintTracking? @relation(fields: [carbonFootprintId], references: [id])
  esgCompliance           ESGCompliance?           @relation(fields: [esgComplianceId], references: [id])
  tenant                  Tenant                   @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("sustainability_metrics")
}

model EnvironmentalRisk {
  id                      String                @id @default(cuid())
  tenantId                String
  riskName                String
  riskType                EnvironmentalRiskType @default(CLIMATE_CHANGE)
  riskDescription         String?
  likelihoodScore         Float?                @default(0.0)
  impactScore             Float?                @default(0.0)
  overallRiskScore        Float?                @default(0.0)
  riskLevel               RiskLevel             @default(MEDIUM)
  timeHorizon             TimeHorizon           @default(MEDIUM_TERM)
  probabilityChanges      Json?                 @default("{}")
  impactProgression       Json?                 @default("{}")
  aiRiskPrediction        Float?                @default(0.0)
  aiEarlyWarning          Json?                 @default("[]")
  aiMitigationSuggestions Json?                 @default("[]")
  aiAdaptationOptions     Json?                 @default("[]")
  financialImpact         Float?                @default(0.0)
  operationalImpact       Json?                 @default("{}")
  reputationalImpact      Float?                @default(0.0)
  strategicImpact         Float?                @default(0.0)
  mitigationActions       Json?                 @default("[]")
  adaptationMeasures      Json?                 @default("[]")
  contingencyPlans        Json?                 @default("[]")
  responseStrategy        Json?                 @default("{}")
  riskOwner               String?
  monitoringFrequency     String?               @default("QUARTERLY")
  keyRiskIndicators       Json?                 @default("[]")
  alertThresholds         Json?                 @default("{}")
  regulatoryRequirements  Json?                 @default("[]")
  complianceImplications  Json?                 @default("[]")
  reportingRequirements   Json?                 @default("[]")
  stakeholderConcerns     Json?                 @default("[]")
  customerImpact          Float?                @default(0.0)
  supplierImpact          Float?                @default(0.0)
  communityImpact         Float?                @default(0.0)
  esgComplianceId         String?
  status                  RiskStatus            @default(ACTIVE)
  tenantId_ref            String
  identifiedBy            String?
  createdAt               DateTime              @default(now())
  updatedAt               DateTime              @updatedAt
  esgCompliance           ESGCompliance?        @relation(fields: [esgComplianceId], references: [id])
  tenant                  Tenant                @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("environmental_risks")
}

model GreenProcess {
  id                    String               @id @default(cuid())
  tenantId              String
  processName           String
  processType           GreenProcessType     @default(ENERGY_EFFICIENCY)
  description           String?
  objectives            Json?                @default("[]")
  scope                 String?
  carbonReduction       Float?               @default(0.0)
  energySavings         Float?               @default(0.0)
  waterSavings          Float?               @default(0.0)
  wasteReduction        Float?               @default(0.0)
  aiOptimizationLevel   Float?               @default(0.0)
  aiEfficiencyGains     Float?               @default(0.0)
  aiPredictiveControl   Boolean              @default(false)
  aiContinuousLearning  Boolean              @default(false)
  implementationStatus  ImplementationStatus @default(PLANNING)
  implementationPlan    Json?                @default("{}")
  requiredInvestment    Float?               @default(0.0)
  paybackPeriod         Int?                 @default(0)
  currentPerformance    Json?                @default("{}")
  targetPerformance     Json?                @default("{}")
  actualResults         Json?                @default("{}")
  performanceScore      Float?               @default(0.0)
  technologies          Json?                @default("[]")
  innovationLevel       Float?               @default(0.0)
  digitalIntegration    Float?               @default(0.0)
  automationLevel       Float?               @default(0.0)
  costSavings           Float?               @default(0.0)
  revenueGeneration     Float?               @default(0.0)
  roi                   Float?               @default(0.0)
  competitiveAdvantage  Float?               @default(0.0)
  employeeEngagement    Float?               @default(0.0)
  customerPerception    Float?               @default(0.0)
  supplierParticipation Float?               @default(0.0)
  monitoringFrequency   String?              @default("MONTHLY")
  kpis                  Json?                @default("[]")
  reportingRequirements Json?                @default("[]")
  certificationStatus   String?
  implementationRisks   Json?                @default("[]")
  operationalRisks      Json?                @default("[]")
  mitigationStrategies  Json?                @default("[]")
  startDate             DateTime?
  targetCompletionDate  DateTime?
  actualCompletionDate  DateTime?
  status                ProcessStatus        @default(ACTIVE)
  tenantId_ref          String
  processOwner          String?
  createdBy             String?
  createdAt             DateTime             @default(now())
  updatedAt             DateTime             @updatedAt
  tenant                Tenant               @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("green_processes")
}

model NeuralCustomerProfile {
  id                         String                   @id @default(cuid())
  tenantId                   String
  customerId                 String                   @unique
  customerType               CustomerProfileType      @default(INDIVIDUAL)
  customerSegment            String?
  acquisitionChannel         String?
  firstInteractionDate       DateTime?
  personalityVector          Json?                    @default("[]")
  behaviorVector             Json?                    @default("[]")
  preferenceVector           Json?                    @default("[]")
  emotionalProfile           Json?                    @default("{}")
  aiPersonalityType          String?
  aiLifecycleStage           String?
  aiValueScore               Float?                   @default(0.0)
  aiChurnProbability         Float?                   @default(0.0)
  aiUpsellPotential          Float?                   @default(0.0)
  purchasePatterns           Json?                    @default("{}")
  communicationStyle         Json?                    @default("{}")
  channelPreferences         Json?                    @default("[]")
  timingPreferences          Json?                    @default("{}")
  interestCategories         Json?                    @default("[]")
  productAffinities          Json?                    @default("{}")
  brandAffinities            Json?                    @default("{}")
  pricesensitivity           Float?                   @default(0.0)
  engagementScore            Float?                   @default(0.0)
  interactionFrequency       Float?                   @default(0.0)
  responseRate               Float?                   @default(0.0)
  sessionDuration            Float?                   @default(0.0)
  nextPurchasePrediction     DateTime?
  nextInteractionPrediction  DateTime?
  optimalOfferTiming         DateTime?
  recommendedActions         Json?                    @default("[]")
  satisfactionScore          Float?                   @default(0.0)
  sentimentScore             Float?                   @default(0.0)
  sentimentHistory           Json?                    @default("[]")
  npsScore                   Int?                     @default(0)
  activePersonalizationRules Json?                    @default("[]")
  exclusionRules             Json?                    @default("[]")
  frequencyCaps              Json?                    @default("{}")
  consentLevel               ConsentLevel             @default(BASIC)
  dataUsageConsent           Json?                    @default("{}")
  privacyPreferences         Json?                    @default("{}")
  optOutSettings             Json?                    @default("{}")
  dataSource                 Json?                    @default("[]")
  dataQuality                Float?                   @default(0.0)
  dataCompleteness           Float?                   @default(0.0)
  lastDataUpdate             DateTime?
  profileStatus              ProfileStatus            @default(ACTIVE)
  tenantId_ref               String
  lastUpdated                DateTime                 @default(now())
  createdAt                  DateTime                 @default(now())
  updatedAt                  DateTime                 @updatedAt
  journeyMaps                CustomerJourneyMap[]
  experienceOptimizations    ExperienceOptimization[]
  tenant                     Tenant                   @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)
  sentimentAnalyses          SentimentAnalysis[]

  @@map("neural_customer_profiles")
}

model CustomerJourneyMap {
  id                          String                 @id @default(cuid())
  tenantId                    String
  journeyName                 String
  journeyType                 JourneyType            @default(PURCHASE_JOURNEY)
  description                 String?
  objective                   String?
  targetCustomerSegment       String?
  neuralCustomerProfileId     String?
  customerPersonas            Json?                  @default("[]")
  journeyStages               Json                   @default("[]")
  currentStage                String?
  stageTransitions            Json?                  @default("[]")
  touchpoints                 Json?                  @default("[]")
  touchpointPerformance       Json?                  @default("{}")
  channelIntegration          Json?                  @default("{}")
  aiJourneyPrediction         Json?                  @default("{}")
  aiOptimalPath               Json?                  @default("[]")
  aiPersonalizationPoints     Json?                  @default("[]")
  aiInterventionPoints        Json?                  @default("[]")
  journeyDuration             Float?                 @default(0.0)
  conversionRate              Float?                 @default(0.0)
  dropOffPoints               Json?                  @default("[]")
  satisfactionByStage         Json?                  @default("{}")
  emotionalCurve              Json?                  @default("[]")
  painPoints                  Json?                  @default("[]")
  delightMoments              Json?                  @default("[]")
  emotionalTriggers           Json?                  @default("[]")
  journeyPersonalizationRules Json?                  @default("[]")
  dynamicContent              Json?                  @default("{}")
  offerOptimization           Json?                  @default("{}")
  timingOptimization          Json?                  @default("{}")
  journeyPerformance          Json?                  @default("{}")
  stagePerformance            Json?                  @default("{}")
  cohortAnalysis              Json?                  @default("{}")
  trendsAnalysis              Json?                  @default("{}")
  revenueImpact               Float?                 @default(0.0)
  costPerAcquisition          Float?                 @default(0.0)
  customerLifetimeValue       Float?                 @default(0.0)
  roi                         Float?                 @default(0.0)
  optimizationOpportunities   Json?                  @default("[]")
  testingPlan                 Json?                  @default("{}")
  experimentResults           Json?                  @default("[]")
  continuousImprovement       Json?                  @default("[]")
  status                      JourneyStatus          @default(ACTIVE)
  tenantId_ref                String
  createdBy                   String?
  createdAt                   DateTime               @default(now())
  updatedAt                   DateTime               @updatedAt
  neuralCustomerProfile       NeuralCustomerProfile? @relation(fields: [neuralCustomerProfileId], references: [id])
  tenant                      Tenant                 @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)
  personalizationRules        PersonalizationRule[]

  @@map("customer_journey_maps")
}

model PersonalizationRule {
  id                      String                  @id @default(cuid())
  tenantId                String
  ruleName                String
  ruleType                PersonalizationRuleType @default(CONTENT_PERSONALIZATION)
  description             String?
  conditions              Json                    @default("[]")
  actions                 Json                    @default("[]")
  priority                RulePriority            @default(MEDIUM)
  targetSegments          Json?                   @default("[]")
  customerCriteria        Json?                   @default("{}")
  behavioralTriggers      Json?                   @default("[]")
  contextualFactors       Json?                   @default("{}")
  aiGenerated             Boolean                 @default(false)
  aiOptimized             Boolean                 @default(false)
  aiLearningEnabled       Boolean                 @default(true)
  aiConfidenceScore       Float?                  @default(0.0)
  contentVariations       Json?                   @default("[]")
  messagePersonalization  Json?                   @default("{}")
  visualPersonalization   Json?                   @default("{}")
  offerPersonalization    Json?                   @default("{}")
  channelOptimization     Json?                   @default("{}")
  timingOptimization      Json?                   @default("{}")
  frequencyControl        Json?                   @default("{}")
  contextualDelivery      Json?                   @default("{}")
  impressions             Int                     @default(0)
  engagements             Int                     @default(0)
  conversions             Int                     @default(0)
  conversionRate          Float?                  @default(0.0)
  revenueGenerated        Float?                  @default(0.0)
  costPerEngagement       Float?                  @default(0.0)
  roi                     Float?                  @default(0.0)
  customerSatisfaction    Float?                  @default(0.0)
  abTestConfiguration     Json?                   @default("{}")
  testResults             Json?                   @default("[]")
  performanceHistory      Json?                   @default("[]")
  optimizationSuggestions Json?                   @default("[]")
  isActive                Boolean                 @default(true)
  activationDate          DateTime?
  expirationDate          DateTime?
  lastOptimized           DateTime?
  privacyCompliance       Boolean                 @default(true)
  consentRequired         Boolean                 @default(false)
  dataUsageCompliance     Json?                   @default("{}")
  customerJourneyMapId    String?
  status                  RuleStatus              @default(ACTIVE)
  tenantId_ref            String
  createdBy               String?
  createdAt               DateTime                @default(now())
  updatedAt               DateTime                @updatedAt
  customerJourneyMap      CustomerJourneyMap?     @relation(fields: [customerJourneyMapId], references: [id])
  tenant                  Tenant                  @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("personalization_rules")
}

model SentimentAnalysis {
  id                      String                 @id @default(cuid())
  tenantId                String
  analysisType            SentimentAnalysisType  @default(CUSTOMER_FEEDBACK)
  sourceType              String?                @default("SURVEY")
  sourceId                String?
  neuralCustomerProfileId String?
  content                 String?
  language                String?                @default("en")
  contentLength           Int?                   @default(0)
  overallSentiment        SentimentScore         @default(NEUTRAL)
  sentimentScore          Float?                 @default(0.0)
  confidenceScore         Float?                 @default(0.0)
  emotionScores           Json?                  @default("{}")
  aspectSentiments        Json?                  @default("{}")
  keywordSentiments       Json?                  @default("{}")
  intentAnalysis          Json?                  @default("{}")
  aiInsights              Json?                  @default("[]")
  aiRecommendations       Json?                  @default("[]")
  aiPriorityLevel         SentimentPriority      @default(MEDIUM)
  aiActionRequired        Boolean                @default(false)
  interactionContext      Json?                  @default("{}")
  customerContext         Json?                  @default("{}")
  businessContext         Json?                  @default("{}")
  temporalContext         Json?                  @default("{}")
  responseRequired        Boolean                @default(false)
  responseGenerated       Boolean                @default(false)
  responseContent         String?
  actionsTaken            Json?                  @default("[]")
  businessImpact          Float?                 @default(0.0)
  customerImpact          Float?                 @default(0.0)
  reputationImpact        Float?                 @default(0.0)
  urgencyLevel            UrgencyLevel           @default(MEDIUM)
  followUpRequired        Boolean                @default(false)
  followUpDate            DateTime?
  followUpActions         Json?                  @default("[]")
  resolutionStatus        ResolutionStatus       @default(PENDING)
  dataQuality             Float?                 @default(0.0)
  analysisQuality         Float?                 @default(0.0)
  humanValidated          Boolean                @default(false)
  validationNotes         String?
  isIncludedInReporting   Boolean                @default(true)
  reportingCategories     Json?                  @default("[]")
  reportingTags           Json?                  @default("[]")
  analysisDate            DateTime               @default(now())
  tenantId_ref            String
  analyzedBy              String?
  createdAt               DateTime               @default(now())
  updatedAt               DateTime               @updatedAt
  neuralCustomerProfile   NeuralCustomerProfile? @relation(fields: [neuralCustomerProfileId], references: [id])
  tenant                  Tenant                 @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("sentiment_analyses")
}

model ExperienceOptimization {
  id                              String                 @id @default(cuid())
  tenantId                        String
  optimizationName                String
  optimizationType                OptimizationType       @default(USER_INTERFACE)
  targetArea                      String?
  targetMetric                    String?
  neuralCustomerProfileId         String?
  customerSegment                 String?
  aiOptimizationAlgorithm         String?                @default("MULTIVARIATE")
  aiLearningMethod                String?                @default("REINFORCEMENT")
  aiModelVersion                  String?
  aiConfidenceLevel               Float?                 @default(0.0)
  baselineMetrics                 Json?                  @default("{}")
  baselinePerformance             Float?                 @default(0.0)
  benchmarkData                   Json?                  @default("{}")
  optimizationGoals               Json?                  @default("[]")
  constraints                     Json?                  @default("[]")
  testVariations                  Json?                  @default("[]")
  trafficAllocation               Json?                  @default("{}")
  realtimeOptimization            Boolean                @default(true)
  adaptationRate                  Float?                 @default(0.1)
  explorationRate                 Float?                 @default(0.1)
  currentMetrics                  Json?                  @default("{}")
  currentPerformance              Float?                 @default(0.0)
  improvementRate                 Float?                 @default(0.0)
  statisticalSignificance         Float?                 @default(0.0)
  optimizationHistory             Json?                  @default("[]")
  performanceHistory              Json?                  @default("[]")
  learningProgress                Json?                  @default("[]")
  revenueImpact                   Float?                 @default(0.0)
  conversionImprovement           Float?                 @default(0.0)
  customerSatisfactionImprovement Float?                 @default(0.0)
  engagementImprovement           Float?                 @default(0.0)
  testingStatus                   TestingStatus          @default(PLANNED)
  testStartDate                   DateTime?
  testEndDate                     DateTime?
  testResults                     Json?                  @default("{}")
  deploymentStatus                DeploymentStatus       @default(NOT_DEPLOYED)
  deploymentStrategy              Json?                  @default("{}")
  rolloutPlan                     Json?                  @default("{}")
  rollbackPlan                    Json?                  @default("{}")
  monitoringMetrics               Json?                  @default("[]")
  alertThresholds                 Json?                  @default("{}")
  alertsTriggered                 Json?                  @default("[]")
  optimizationInsights            Json?                  @default("[]")
  aiRecommendations               Json?                  @default("[]")
  nextOptimizations               Json?                  @default("[]")
  lessonsLearned                  Json?                  @default("[]")
  status                          OptimizationStatus     @default(ACTIVE)
  tenantId_ref                    String
  optimizedBy                     String?
  createdBy                       String?
  createdAt                       DateTime               @default(now())
  updatedAt                       DateTime               @updatedAt
  neuralCustomerProfile           NeuralCustomerProfile? @relation(fields: [neuralCustomerProfileId], references: [id])
  tenant                          Tenant                 @relation(fields: [tenantId_ref], references: [id], onDelete: Cascade)

  @@map("experience_optimizations")
}

model AIDecision {
  id                    String         @id @default(cuid())
  modelId               String
  decisionType          DecisionType
  context               Json           @default("{}")
  inputData             Json           @default("{}")
  outputData            Json           @default("{}")
  confidenceScore       Float          @default(0.0)
  decisionReasoning     String?
  alternativeOptions    Json?          @default("[]")
  riskAssessment        Json?          @default("{}")
  status                DecisionStatus @default(PENDING)
  executedAt            DateTime?
  reviewedAt            DateTime?
  reviewedBy            String?
  requiresHumanReview   Boolean        @default(false)
  humanApprovalRequired Boolean        @default(false)
  humanFeedback         String?
  outcomeRating         Float?         @default(0.0)
  tenantId              String
  moduleSource          String
  affectedEntity        String?
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt
  model                 AIModel        @relation(fields: [modelId], references: [id])

  @@map("ai_decisions")
}

model AIModelMetric {
  id          String   @id @default(cuid())
  modelId     String
  metricName  String
  metricValue Float
  metricUnit  String?
  collectedAt DateTime @default(now())
  tenantId    String
  createdAt   DateTime @default(now())
  model       AIModel  @relation(fields: [modelId], references: [id], onDelete: Cascade)

  @@map("ai_model_metrics")
}

model AIOrchestrator {
  id                   String                     @id @default(cuid())
  name                 String
  description          String?
  orchestrationRules   Json                       @default("[]")
  enabledModules       ModuleType[]               @default([])
  eventTriggers        Json                       @default("[]")
  workflowDefinition   Json                       @default("{}")
  executionCount       Int                        @default(0)
  successRate          Float                      @default(0.0)
  averageExecutionTime Float                      @default(0.0)
  lastExecutedAt       DateTime?
  isActive             Boolean                    @default(true)
  priority             OrchestratorPriority       @default(MEDIUM)
  retryPolicy          Json                       @default("{}")
  timeoutSettings      Json                       @default("{}")
  tenantId             String
  createdBy            String
  createdAt            DateTime                   @default(now())
  updatedAt            DateTime                   @updatedAt
  executions           AIOrchestrationExecution[]

  @@map("ai_orchestrators")
}

model AIOrchestrationExecution {
  id             String              @id @default(cuid())
  orchestratorId String
  executionId    String              @unique
  triggerEvent   Json                @default("{}")
  inputContext   Json                @default("{}")
  executionSteps Json                @default("[]")
  outputResults  Json                @default("{}")
  status         OrchestrationStatus @default(RUNNING)
  startedAt      DateTime            @default(now())
  completedAt    DateTime?
  executionTime  Float?
  errorMessage   String?
  stackTrace     String?
  retryCount     Int                 @default(0)
  tenantId       String
  orchestrator   AIOrchestrator      @relation(fields: [orchestratorId], references: [id])

  @@map("ai_orchestration_executions")
}

model ModelApproval {
  id               String         @id @default(cuid())
  modelId          String
  requestedBy      String
  approverIds      String[]       @default([])
  approvalType     ApprovalType
  status           ApprovalStatus @default(PENDING)
  requestReason    String
  approvalComments String?
  riskAssessment   Json           @default("{}")
  securityReview   Json           @default("{}")
  complianceCheck  Json           @default("{}")
  requestedAt      DateTime       @default(now())
  reviewDeadline   DateTime?
  approvedAt       DateTime?
  rejectedAt       DateTime?
  tenantId         String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  model            AIModel        @relation(fields: [modelId], references: [id], onDelete: Cascade)

  @@map("model_approvals")
}

model ModelTestResult {
  id                   String     @id @default(cuid())
  modelId              String
  testType             TestType
  status               TestStatus @default(RUNNING)
  testConfig           Json       @default("{}")
  testDataset          String?
  benchmarkModels      String[]   @default([])
  accuracy             Float?     @default(0.0)
  precision            Float?     @default(0.0)
  recall               Float?     @default(0.0)
  f1Score              Float?     @default(0.0)
  latency              Float?     @default(0.0)
  throughput           Float?     @default(0.0)
  costPerRequest       Decimal?   @db.Decimal(10, 6)
  costEfficiency       Float?     @default(0.0)
  performanceVsCurrent Float?     @default(0.0)
  costVsCurrent        Float?     @default(0.0)
  testResults          Json       @default("{}")
  recommendations      String[]   @default([])
  issues               String[]   @default([])
  startedAt            DateTime   @default(now())
  completedAt          DateTime?
  tenantId             String
  runBy                String
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  model                AIModel    @relation(fields: [modelId], references: [id], onDelete: Cascade)

  @@map("model_test_results")
}

model ModelCostRecord {
  id                   String         @id @default(cuid())
  modelId              String
  recordType           CostRecordType
  totalCost            Decimal        @db.Decimal(15, 4)
  currency             String         @default("USD")
  requestCount         Int            @default(0)
  tokenCount           BigInt?        @default(0)
  periodStart          DateTime
  periodEnd            DateTime
  costBreakdown        Json           @default("{}")
  budgetLimit          Decimal?       @db.Decimal(15, 4)
  budgetRemaining      Decimal?       @db.Decimal(15, 4)
  budgetExceeded       Boolean        @default(false)
  predictedMonthlyCost Decimal?       @db.Decimal(15, 4)
  costTrend            String?
  tenantId             String
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  model                AIModel        @relation(fields: [modelId], references: [id], onDelete: Cascade)

  @@map("model_cost_records")
}

model ModelDiscovery {
  id                    String          @id @default(cuid())
  discoveryType         DiscoveryType
  status                DiscoveryStatus @default(PENDING)
  searchCriteria        Json            @default("{}")
  targetUseCases        String[]        @default([])
  currentModels         String[]        @default([])
  foundModels           Json            @default("[]")
  recommendations       Json            @default("[]")
  analysisResults       Json            @default("{}")
  performanceComparison Json            @default("{}")
  costComparison        Json            @default("{}")
  scheduledAt           DateTime?
  executedAt            DateTime?
  nextRunAt             DateTime?
  tenantId              String
  triggeredBy           String
  createdAt             DateTime        @default(now())
  updatedAt             DateTime        @updatedAt

  @@map("model_discoveries")
}

model ModelBenchmark {
  id                String        @id @default(cuid())
  name              String
  description       String?
  benchmarkType     BenchmarkType
  testDataset       String
  evaluationMetrics String[]      @default([])
  benchmarkConfig   Json          @default("{}")
  industryAverage   Json          @default("{}")
  topPerformers     Json          @default("{}")
  results           Json          @default("[]")
  leaderboard       Json          @default("[]")
  tenantId          String
  createdBy         String
  isPublic          Boolean       @default(false)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  @@map("model_benchmarks")
}

model SuperAdminAction {
  id               String          @id @default(cuid())
  actionType       AdminActionType
  targetType       String
  targetId         String
  actionData       Json            @default("{}")
  reason           String
  priority         ActionPriority  @default(MEDIUM)
  status           ActionStatus    @default(PENDING)
  executedAt       DateTime?
  executionResults Json?           @default("{}")
  requiresApproval Boolean         @default(false)
  approvedBy       String[]        @default([])
  approvalComments String?
  tenantId         String
  requestedBy      String
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt

  @@map("super_admin_actions")
}

model APIEndpoint {
  id                  String            @id @default(cuid())
  name                String
  path                String
  method              HTTPMethod
  description         String?
  isPublic            Boolean           @default(false)
  requiresAuth        Boolean           @default(true)
  rateLimitRpm        Int?              @default(60)
  rateLimitRph        Int?              @default(1000)
  requestSchema       Json?             @default("{}")
  responseSchema      Json?             @default("{}")
  exampleRequest      Json?             @default("{}")
  exampleResponse     Json?             @default("{}")
  averageResponseTime Float?            @default(0.0)
  successRate         Float?            @default(0.0)
  totalRequests       Int               @default(0)
  errorCount          Int               @default(0)
  version             String            @default("1.0.0")
  isDeprecated        Boolean           @default(false)
  deprecationDate     DateTime?
  allowedOrigins      String[]          @default([])
  requiredScopes      String[]          @default([])
  tenantId            String?
  createdBy           String
  isActive            Boolean           @default(true)
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  usageStats          APIUsageStats[]
  webhooks            WebhookEndpoint[]

  @@unique([path, method])
  @@map("api_endpoints")
}

model APIUsageStats {
  id             String          @id @default(cuid())
  endpointId     String
  requestCount   Int             @default(0)
  errorCount     Int             @default(0)
  averageLatency Float           @default(0.0)
  maxLatency     Float           @default(0.0)
  minLatency     Float           @default(0.0)
  periodStart    DateTime
  periodEnd      DateTime
  granularity    TimeGranularity @default(HOURLY)
  clientId       String?
  userAgent      String?
  ipAddress      String?
  tenantId       String?
  createdAt      DateTime        @default(now())
  endpoint       APIEndpoint     @relation(fields: [endpointId], references: [id], onDelete: Cascade)

  @@map("api_usage_stats")
}

model WebhookEndpoint {
  id                  String            @id @default(cuid())
  name                String
  url                 String
  secret              String?
  events              WebhookEvent[]    @default([])
  isActive            Boolean           @default(true)
  retryPolicy         Json              @default("{}")
  timeoutMs           Int               @default(30000)
  filterRules         Json?             @default("[]")
  deliveryCount       Int               @default(0)
  failureCount        Int               @default(0)
  averageResponseTime Float             @default(0.0)
  lastDeliveryAt      DateTime?
  lastFailureAt       DateTime?
  tenantId            String
  createdBy           String
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  apiEndpointId       String?
  deliveries          WebhookDelivery[]
  apiEndpoint         APIEndpoint?      @relation(fields: [apiEndpointId], references: [id])

  @@map("webhook_endpoints")
}

model WebhookDelivery {
  id                String          @id @default(cuid())
  webhookEndpointId String
  eventType         WebhookEvent
  payload           Json            @default("{}")
  headers           Json            @default("{}")
  status            DeliveryStatus  @default(PENDING)
  responseCode      Int?
  responseBody      String?
  responseTime      Float?
  attemptCount      Int             @default(1)
  maxRetries        Int             @default(3)
  nextRetryAt       DateTime?
  scheduledAt       DateTime        @default(now())
  deliveredAt       DateTime?
  tenantId          String
  webhookEndpoint   WebhookEndpoint @relation(fields: [webhookEndpointId], references: [id], onDelete: Cascade)

  @@map("webhook_deliveries")
}

model SystemMetric {
  id                 String     @id @default(cuid())
  metricName         String
  metricType         MetricType
  value              Float
  unit               String?
  component          String?
  instance           String?
  environment        String?    @default("production")
  tags               Json       @default("{}")
  timestamp          DateTime   @default(now())
  collectionInterval Int?
  tenantId           String?

  @@map("system_metrics")
}

model AlertRule {
  id                   String          @id @default(cuid())
  name                 String
  description          String?
  metricQuery          String
  threshold            Float
  operator             AlertOperator   @default(GREATER_THAN)
  evaluationWindow     Int             @default(300)
  severity             AlertSeverity   @default(WARNING)
  isActive             Boolean         @default(true)
  silenceUntil         DateTime?
  notificationChannels Json            @default("[]")
  cooldownPeriod       Int             @default(900)
  lastEvaluatedAt      DateTime?
  lastTriggeredAt      DateTime?
  triggerCount         Int             @default(0)
  tenantId             String?
  createdBy            String
  createdAt            DateTime        @default(now())
  updatedAt            DateTime        @updatedAt
  incidents            AlertIncident[]

  @@map("alert_rules")
}

model AlertIncident {
  id                 String         @id @default(cuid())
  alertRuleId        String
  title              String
  description        String?
  severity           AlertSeverity
  status             IncidentStatus @default(OPEN)
  triggerValue       Float
  thresholdValue     Float
  metricContext      Json           @default("{}")
  resolvedAt         DateTime?
  resolvedBy         String?
  resolutionNote     String?
  notificationsSent  Int            @default(0)
  lastNotificationAt DateTime?
  tenantId           String?
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  alertRule          AlertRule      @relation(fields: [alertRuleId], references: [id])

  @@map("alert_incidents")
}

model SecurityAuditLog {
  id             String            @id @default(cuid())
  eventType      SecurityEventType
  severity       SecuritySeverity  @default(INFO)
  description    String
  details        Json              @default("{}")
  userId         String?
  sessionId      String?
  ipAddress      String?
  userAgent      String?
  resourceType   String?
  resourceId     String?
  action         String?
  requestPath    String?
  requestMethod  String?
  requestHeaders Json?             @default("{}")
  riskScore      Float?            @default(0.0)
  anomalyScore   Float?            @default(0.0)
  tenantId       String?
  timestamp      DateTime          @default(now())

  @@map("security_audit_logs")
}

model ComplianceRecord {
  id              String           @id @default(cuid())
  complianceType  ComplianceType
  status          ComplianceStatus @default(PENDING)
  dataSubjectId   String?
  requestType     String?
  description     String?
  processedBy     String?
  processedAt     DateTime?
  completedAt     DateTime?
  evidenceUrls    String[]         @default([])
  documentation   Json?            @default("{}")
  legalBasis      String?
  retentionPeriod Int?
  expiryDate      DateTime?
  tenantId        String
  createdBy       String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  @@map("compliance_records")
}

model Translation {
  id                 String    @id @default(cuid())
  key                String
  namespace          String?   @default("default")
  locale             String
  value              String
  description        String?
  isAutoTranslated   Boolean   @default(false)
  translationQuality Float?    @default(0.0)
  translatedBy       String?
  reviewedBy         String?
  reviewedAt         DateTime?
  usageCount         Int       @default(0)
  lastUsedAt         DateTime?
  tenantId           String?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  @@unique([key, locale, namespace, tenantId])
  @@map("translations")
}

model LocaleSettings {
  id                   String   @id @default(cuid())
  locale               String   @unique
  displayName          String
  nativeName           String
  country              String?
  currency             String?
  currencySymbol       String?
  dateFormat           String?
  timeFormat           String?
  numberFormat         Json?    @default("{}")
  isRTL                Boolean  @default(false)
  isEnabled            Boolean  @default(true)
  completionPercentage Float    @default(0.0)
  aiModelSupport       Boolean  @default(false)
  speechRecognition    Boolean  @default(false)
  textToSpeech         Boolean  @default(false)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@map("locale_settings")
}

model TenantCustomization {
  id                 String   @id @default(cuid())
  tenantId           String   @unique
  brandName          String?
  logoUrl            String?
  faviconUrl         String?
  primaryColor       String?
  secondaryColor     String?
  accentColor        String?
  backgroundColor    String?
  textColor          String?
  darkModeEnabled    Boolean  @default(true)
  customTheme        Json?    @default("{}")
  layoutConfig       Json?    @default("{}")
  customCSS          String?
  customJS           String?
  customDomain       String?
  customSubdomain    String?
  customUrls         Json?    @default("{}")
  enabledFeatures    String[] @default([])
  disabledFeatures   String[] @default([])
  featurePermissions Json?    @default("{}")
  emailTemplates     Json?    @default("{}")
  emailSignature     String?
  supportEmail       String?
  supportPhone       String?
  privacyPolicyUrl   String?
  termsOfServiceUrl  String?
  cookiePolicyUrl    String?
  legalDocuments     Json?    @default("{}")
  integrationConfig  Json?    @default("{}")
  webhookSettings    Json?    @default("{}")
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  tenant             Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@map("tenant_customizations")
}

model WhiteLabelConfig {
  id                    String            @id @default(cuid())
  tenantId              String            @unique
  packageType           WhiteLabelPackage @default(BASIC)
  isActive              Boolean           @default(true)
  maxCustomDomains      Int               @default(1)
  maxEmailTemplates     Int               @default(5)
  maxCustomPages        Int               @default(3)
  customBrandingAllowed Boolean           @default(true)
  customDomainAllowed   Boolean           @default(false)
  apiAccessAllowed      Boolean           @default(false)
  webhookAccessAllowed  Boolean           @default(false)
  domainsUsed           Int               @default(0)
  emailTemplatesUsed    Int               @default(0)
  customPagesUsed       Int               @default(0)
  monthlyFee            Decimal?          @db.Decimal(10, 2)
  nextBillingDate       DateTime?
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt

  @@map("white_label_configs")
}

model CreativeProject {
  id                   String                 @id @default(cuid())
  title                String
  description          String?
  projectType          CreativeProjectType    @default(GENERAL)
  status               ProjectStatus          @default(DRAFT)
  aiPrompt             String?
  aiConfidenceScore    Float?                 @default(0.0)
  aiSentimentScore     Float?                 @default(0.0)
  aiComplexityScore    Float?                 @default(0.0)
  aiRecommendations    Json?                  @default("[]")
  isCollaborative      Boolean                @default(false)
  maxCollaborators     Int?                   @default(5)
  currentCollaborators Int?                   @default(1)
  workflowStage        String?                @default("IDEATION")
  deadlineDate         DateTime?
  tenantId             String
  createdBy            String
  assignedTo           String?
  tags                 String[]               @default([])
  isPublic             Boolean                @default(false)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  assets               CreativeAsset[]
  stories              InteractiveStory[]
  collaborations       ProjectCollaboration[]
  versions             ProjectVersion[]

  @@map("creative_projects")
}

model CreativeAsset {
  id                 String          @id @default(cuid())
  projectId          String
  title              String
  description        String?
  assetType          AssetType
  fileUrl            String?
  fileSize           Int?
  fileMimeType       String?
  thumbnailUrl       String?
  aiGeneratedPrompt  String?
  aiConfidenceScore  Float?          @default(0.0)
  aiTags             String[]        @default([])
  aiDescription      String?
  aiQualityScore     Float?          @default(0.0)
  aiStyleAnalysis    Json?           @default("{}")
  contentHash        String?
  colorPalette       Json?           @default("[]")
  dominantColors     String[]        @default([])
  textContent        String?
  viewCount          Int             @default(0)
  downloadCount      Int             @default(0)
  usageContext       Json?           @default("[]")
  performanceMetrics Json?           @default("{}")
  tenantId           String
  createdBy          String
  isPublic           Boolean         @default(false)
  licenseType        String?         @default("INTERNAL_USE")
  expiryDate         DateTime?
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
  usageHistory       AssetUsage[]
  project            CreativeProject @relation(fields: [projectId], references: [id], onDelete: Cascade)
  templateUsages     TemplateUsage[]

  @@map("creative_assets")
}

model AssetUsage {
  id           String        @id @default(cuid())
  assetId      String
  usedBy       String
  usageType    String
  usageContext Json?         @default("{}")
  sessionId    String?
  tenantId     String
  createdAt    DateTime      @default(now())
  asset        CreativeAsset @relation(fields: [assetId], references: [id], onDelete: Cascade)

  @@map("asset_usage")
}

model ContentTemplate {
  id                 String           @id @default(cuid())
  title              String
  description        String?
  category           TemplateCategory
  templateType       String
  templateData       Json             @default("{}")
  previewUrl         String?
  thumbnailUrl       String?
  aiOptimized        Boolean          @default(false)
  aiPerformanceScore Float?           @default(0.0)
  aiSuitabilityTags  String[]         @default([])
  aiRecommendedUse   Json?            @default("[]")
  usageCount         Int              @default(0)
  averageRating      Float?           @default(0.0)
  isPopular          Boolean          @default(false)
  tenantId           String
  createdBy          String
  isPublic           Boolean          @default(false)
  isPremium          Boolean          @default(false)
  tags               String[]         @default([])
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  usages             TemplateUsage[]

  @@map("content_templates")
}

model TemplateUsage {
  id             String          @id @default(cuid())
  templateId     String
  assetId        String?
  projectId      String?
  usedBy         String
  customizations Json?           @default("{}")
  tenantId       String
  createdAt      DateTime        @default(now())
  asset          CreativeAsset?  @relation(fields: [assetId], references: [id])
  template       ContentTemplate @relation(fields: [templateId], references: [id])

  @@map("template_usage")
}

model InteractiveStory {
  id                     String             @id @default(cuid())
  projectId              String
  title                  String
  description            String?
  storyType              StoryType          @default(LINEAR)
  storyData              Json               @default("{}")
  currentVersion         String             @default("1.0")
  isPublished            Boolean            @default(false)
  publicUrl              String?
  aiNarrativeScore       Float?             @default(0.0)
  aiEngagementPrediction Float?             @default(0.0)
  aiOptimizations        Json?              @default("[]")
  viewCount              Int                @default(0)
  completionRate         Float?             @default(0.0)
  averageEngagementTime  Int?               @default(0)
  tenantId               String
  createdBy              String
  isPublic               Boolean            @default(false)
  createdAt              DateTime           @default(now())
  updatedAt              DateTime           @updatedAt
  project                CreativeProject    @relation(fields: [projectId], references: [id])
  interactions           StoryInteraction[]

  @@map("interactive_stories")
}

model StoryInteraction {
  id              String           @id @default(cuid())
  storyId         String
  interactionType String
  nodeId          String?
  userAgent       String?
  sessionId       String?
  interactionData Json?            @default("{}")
  tenantId        String
  createdAt       DateTime         @default(now())
  story           InteractiveStory @relation(fields: [storyId], references: [id])

  @@map("story_interactions")
}

model ProjectCollaboration {
  id          String            @id @default(cuid())
  projectId   String
  userId      String
  role        CollaborationRole @default(CONTRIBUTOR)
  permissions Json              @default("[]")
  invitedBy   String?
  acceptedAt  DateTime?
  tenantId    String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  project     CreativeProject   @relation(fields: [projectId], references: [id])

  @@unique([projectId, userId])
  @@map("project_collaborations")
}

model ProjectVersion {
  id            String          @id @default(cuid())
  projectId     String
  versionNumber String
  changeLog     String?
  snapshotData  Json            @default("{}")
  isActive      Boolean         @default(false)
  tenantId      String
  createdBy     String
  createdAt     DateTime        @default(now())
  project       CreativeProject @relation(fields: [projectId], references: [id])

  @@unique([projectId, versionNumber])
  @@map("project_versions")
}



model Lead {
  id                      String         @id @default(cuid())
  customerId              String
  leadSource              String?
  status                  LeadStatus     @default(NEW)
  qualificationScore      Float?         @default(0.0)
  budgetRange             String?
  timeframe               String?
  decisionMaker           Boolean?       @default(false)
  aiQualificationScore    Float?         @default(0.0)
  aiConversionProbability Float?         @default(0.0)
  aiPriorityScore         Float?         @default(0.0)
  aiRecommendedActions    Json?          @default("[]")
  aiNextContactDate       DateTime?
  lastContactDate         DateTime?
  nextFollowUpDate        DateTime?
  contactAttempts         Int            @default(0)
  tenantId                String
  assignedTo              String?
  notes                   String?
  createdBy               String
  convertedAt             DateTime?
  createdAt               DateTime       @default(now())
  updatedAt               DateTime       @updatedAt
  activities              LeadActivity[]
  customer                Customer       @relation(fields: [customerId], references: [id])

  @@map("leads")
}

model LeadActivity {
  id           String    @id @default(cuid())
  leadId       String
  activityType String
  subject      String?
  description  String?
  duration     Int?
  outcome      String?
  nextAction   String?
  tenantId     String
  performedBy  String
  scheduledAt  DateTime?
  completedAt  DateTime?
  createdAt    DateTime  @default(now())
  lead         Lead      @relation(fields: [leadId], references: [id])

  @@map("lead_activities")
}

model SalesOpportunity {
  id                   String                @id @default(cuid())
  customerId           String
  opportunityName      String
  description          String?
  stage                OpportunityStage      @default(DISCOVERY)
  estimatedValue       Decimal?              @db.Decimal(15, 2)
  estimatedCloseDate   DateTime?
  actualCloseDate      DateTime?
  probability          Float?                @default(0.0)
  aiCloseProbability   Float?                @default(0.0)
  aiRevenuePrediktion  Decimal?              @db.Decimal(15, 2)
  aiRiskFactors        Json?                 @default("[]")
  aiRecommendations    Json?                 @default("[]")
  aiCompetitorAnalysis Json?                 @default("{}")
  competitorInfo       Json?                 @default("{}")
  decisionCriteria     Json?                 @default("[]")
  keyStakeholders      Json?                 @default("[]")
  tenantId             String
  assignedTo           String
  createdBy            String
  source               String?
  tags                 String[]              @default([])
  isActive             Boolean               @default(true)
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  activities           OpportunityActivity[]
  customer             Customer              @relation(fields: [customerId], references: [id])
  proposals            SalesProposal[]

  @@map("sales_opportunities")
}

model SalesProposal {
  id                     String           @id @default(cuid())
  opportunityId          String
  proposalNumber         String           @unique
  title                  String
  description            String?
  aiGeneratedContent     Boolean          @default(false)
  aiPrompt               String?
  aiConfidenceScore      Float?           @default(0.0)
  aiPersonalizationScore Float?           @default(0.0)
  proposalData           Json             @default("{}")
  totalValue             Decimal?         @db.Decimal(15, 2)
  validUntil             DateTime?
  documentUrl            String?
  templateUsed           String?
  status                 ProposalStatus   @default(DRAFT)
  sentAt                 DateTime?
  viewedAt               DateTime?
  acceptedAt             DateTime?
  rejectedAt             DateTime?
  viewCount              Int              @default(0)
  timeSpentViewing       Int              @default(0)
  tenantId               String
  createdBy              String
  createdAt              DateTime         @default(now())
  updatedAt              DateTime         @updatedAt
  opportunity            SalesOpportunity @relation(fields: [opportunityId], references: [id])

  @@map("sales_proposals")
}

model SalesOrder {
  id                    String    @id @default(cuid())
  customerId            String
  orderNumber           String    @unique
  orderDate             DateTime  @default(now())
  subtotal              Decimal   @db.Decimal(15, 2)
  taxAmount             Decimal?  @db.Decimal(15, 2)
  totalAmount           Decimal   @db.Decimal(15, 2)
  currency              String    @default("EUR")
  orderItems            Json      @default("[]")
  paymentStatus         String    @default("PENDING")
  fulfillmentStatus     String    @default("PENDING")
  requestedDeliveryDate DateTime?
  confirmedDeliveryDate DateTime?
  actualDeliveryDate    DateTime?
  tenantId              String
  salesRepId            String?
  notes                 String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  customer              Customer  @relation(fields: [customerId], references: [id])

  @@map("sales_orders")
}

model CustomerInteraction {
  id               String   @id @default(cuid())
  customerId       String
  interactionType  String
  channel          String?
  subject          String?
  description      String?
  aiSentiment      String?
  aiSentimentScore Float?   @default(0.0)
  aiKeyTopics      String[] @default([])
  aiActionItems    Json?    @default("[]")
  aiNextBestAction String?
  tenantId         String
  performedBy      String?
  duration         Int?
  attachments      Json?    @default("[]")
  createdAt        DateTime @default(now())
  customer         Customer @relation(fields: [customerId], references: [id])

  @@map("customer_interactions")
}

model OpportunityActivity {
  id            String           @id @default(cuid())
  opportunityId String
  activityType  String
  subject       String?
  description   String?
  outcome       String?
  nextAction    String?
  tenantId      String
  performedBy   String
  scheduledAt   DateTime?
  completedAt   DateTime?
  createdAt     DateTime         @default(now())
  opportunity   SalesOpportunity @relation(fields: [opportunityId], references: [id])

  @@map("opportunity_activities")
}

model CustomerSegment {
  id                String   @id @default(cuid())
  customerId        String
  segmentName       String
  segmentType       String
  criteria          Json     @default("{}")
  aiConfidence      Float?   @default(0.0)
  aiRecommendations Json?    @default("[]")
  tenantId          String
  assignedAt        DateTime @default(now())
  createdAt         DateTime @default(now())
  customer          Customer @relation(fields: [customerId], references: [id])

  @@unique([customerId, segmentName])
  @@map("customer_segments")
}

model SalesForecast {
  id               String   @id @default(cuid())
  forecastPeriod   String
  forecastType     String
  predictedRevenue Decimal  @db.Decimal(15, 2)
  predictedDeals   Int
  averageDealSize  Decimal? @db.Decimal(15, 2)
  modelVersion     String?
  confidenceLevel  Float?   @default(0.0)
  accuracyScore    Float?   @default(0.0)
  actualRevenue    Decimal? @db.Decimal(15, 2)
  actualDeals      Int?
  variance         Float?   @default(0.0)
  tenantId         String
  generatedAt      DateTime @default(now())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@unique([tenantId, forecastPeriod, forecastType])
  @@map("sales_forecasts")
}

model UserTenantRecommendation {
  id                 String                   @id @default(cuid())
  userId             String
  tenantId           String
  recommendationType TenantRecommendationType @default(USAGE_BASED)
  score              Float                    @default(0.0)
  reason             String
  context            Json                     @default("{}")
  usagePattern       Json                     @default("{}")
  roleRelevance      Float                    @default(0.0)
  projectRelevance   Float                    @default(0.0)
  wasAccepted        Boolean?
  wasUseful          Boolean?
  lastUsed           DateTime?
  modelVersion       String                   @default("v1.0")
  confidenceLevel    Float                    @default(0.0)
  createdAt          DateTime                 @default(now())
  updatedAt          DateTime                 @updatedAt
  expiresAt          DateTime?
  tenant             Tenant                   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  user               User                     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, tenantId, recommendationType])
  @@index([score])
  @@index([createdAt])
  @@map("user_tenant_recommendations")
}

model TenantUsageAnalytics {
  id                String          @id @default(cuid())
  tenantId          String
  userId            String?
  sessionDuration   Int
  actionsPerformed  Int             @default(0)
  modulesAccessed   String[]        @default([])
  peakUsageTime     Json            @default("{}")
  deviceType        String?
  location          String?
  userAgent         String?
  usageScore        Float           @default(0.0)
  productivityScore Float           @default(0.0)
  engagementLevel   EngagementLevel @default(MEDIUM)
  date              DateTime        @default(now())
  createdAt         DateTime        @default(now())
  tenant            Tenant          @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  user              User?           @relation(fields: [userId], references: [id])

  @@index([tenantId, date])
  @@index([userId, date])
  @@map("tenant_usage_analytics")
}

model AnalyticsDashboard {
  id                   String            @id @default(cuid())
  name                 String
  description          String?
  dashboardType        DashboardType     @default(STANDARD)
  config               Json              @default("{}")
  layout               Json              @default("{}")
  refreshInterval      Int               @default(300)
  isRealTime           Boolean           @default(false)
  isPublic             Boolean           @default(false)
  allowedRoles         String[]          @default([])
  allowedUsers         String[]          @default([])
  aiInsightsEnabled    Boolean           @default(true)
  aiPredictionsEnabled Boolean           @default(true)
  aiAlerts             Json              @default("[]")
  tenantId             String
  createdBy            String
  createdAt            DateTime          @default(now())
  updatedAt            DateTime          @updatedAt
  widgets              AnalyticsWidget[]
  reports              CustomReport[]

  @@map("analytics_dashboards")
}

model AnalyticsWidget {
  id                 String              @id @default(cuid())
  dashboardId        String
  widgetType         AnalyticsWidgetType
  title              String
  description        String?
  config             Json                @default("{}")
  dataSource         String
  refreshInterval    Int                 @default(300)
  position           Json                @default("{}")
  size               Json                @default("{}")
  aiAnomalyDetection Boolean             @default(false)
  aiTrendAnalysis    Boolean             @default(false)
  aiPredictions      Boolean             @default(false)
  aiInsights         Json                @default("[]")
  chartType          String?
  colorScheme        String?             @default("default")
  aggregationMethod  String?             @default("sum")
  isActive           Boolean             @default(true)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  dashboard          AnalyticsDashboard  @relation(fields: [dashboardId], references: [id], onDelete: Cascade)

  @@map("analytics_widgets")
}

model BusinessKPI {
  id                 String       @id @default(cuid())
  name               String
  description        String?
  category           KPICategory
  formula            String
  targetValue        Float?
  warningThreshold   Float?
  criticalThreshold  Float?
  unit               String?
  dataSource         String
  updateFrequency    Int          @default(3600)
  lastCalculated     DateTime?
  currentValue       Float?
  previousValue      Float?
  aiTrendPrediction  Float?
  aiAnomalyScore     Float?       @default(0.0)
  aiInsights         Json         @default("[]")
  aiOptimizationTips Json         @default("[]")
  preferredChartType String?      @default("line")
  colorCode          String?      @default("#6B7280")
  tenantId           String
  moduleType         ModuleType?
  isActive           Boolean      @default(true)
  createdBy          String
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  alerts             KPIAlert[]
  history            KPIHistory[]

  @@unique([name, tenantId])
  @@map("business_kpis")
}

model KPIHistory {
  id                String      @id @default(cuid())
  kpiId             String
  value             Float
  calculatedAt      DateTime    @default(now())
  period            String
  periodStart       DateTime
  periodEnd         DateTime
  calculationMethod String?
  dataPoints        Int?
  confidence        Float?      @default(1.0)
  kpi               BusinessKPI @relation(fields: [kpiId], references: [id], onDelete: Cascade)

  @@unique([kpiId, periodStart, period])
  @@map("kpi_history")
}

model KPIAlert {
  id                  String        @id @default(cuid())
  kpiId               String
  alertType           AlertType
  threshold           Float
  currentValue        Float
  message             String
  severity            AlertSeverity @default(WARNING)
  aiRecommendedAction String?
  aiRootCause         String?
  aiImpactAssessment  Float?        @default(0.0)
  isActive            Boolean       @default(true)
  isResolved          Boolean       @default(false)
  resolvedBy          String?
  resolvedAt          DateTime?
  triggeredAt         DateTime      @default(now())
  kpi                 BusinessKPI   @relation(fields: [kpiId], references: [id], onDelete: Cascade)

  @@map("kpi_alerts")
}

model CustomReport {
  id                  String              @id @default(cuid())
  name                String
  description         String?
  reportType          ReportType          @default(STANDARD)
  dataSource          Json                @default("{}")
  filters             Json                @default("{}")
  groupBy             Json                @default("[]")
  aggregations        Json                @default("{}")
  sortBy              Json                @default("[]")
  isScheduled         Boolean             @default(false)
  scheduleConfig      Json?               @default("{}")
  lastGenerated       DateTime?
  nextGeneration      DateTime?
  aiInsightsEnabled   Boolean             @default(true)
  aiSummaryEnabled    Boolean             @default(true)
  aiGeneratedInsights Json                @default("[]")
  aiRecommendations   Json                @default("[]")
  outputFormat        String[]            @default(["PDF", "EXCEL"])
  templateConfig      Json                @default("{}")
  isPublic            Boolean             @default(false)
  sharedWith          String[]            @default([])
  accessLevel         String              @default("VIEW")
  tenantId            String
  dashboardId         String?
  createdBy           String
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  dashboard           AnalyticsDashboard? @relation(fields: [dashboardId], references: [id])
  executions          ReportExecution[]

  @@map("custom_reports")
}

model ReportExecution {
  id               String          @id @default(cuid())
  reportId         String
  status           ExecutionStatus @default(PENDING)
  startedAt        DateTime        @default(now())
  completedAt      DateTime?
  executionTime    Int?
  recordCount      Int?
  outputUrl        String?
  outputSize       Int?
  outputFormat     String?
  errorMessage     String?
  errorDetails     Json?           @default("{}")
  aiProcessingTime Int?
  aiInsightCount   Int?            @default(0)
  executedBy       String
  report           CustomReport    @relation(fields: [reportId], references: [id], onDelete: Cascade)

  @@map("report_executions")
}

model CustomerPortalAccount {
  id                       String              @id @default(cuid())
  customerId               String              @unique
  isActive                 Boolean             @default(true)
  lastLoginAt              DateTime?
  loginCount               Int                 @default(0)
  preferredLanguage        String              @default("de")
  timezone                 String              @default("Europe/Berlin")
  dashboardLayout          Json                @default("{}")
  notificationSettings     Json                @default("{}")
  accessLevel              CustomerAccessLevel @default(STANDARD)
  aiPersonalizationProfile Json                @default("{}")
  aiRecommendations        Json                @default("[]")
  aiChatHistory            Json                @default("[]")
  aiPreferences            Json                @default("{}")
  selfServiceEnabled       Boolean             @default(true)
  downloadPermissions      Json                @default("[]")
  supportTicketLimit       Int                 @default(10)
  tenantId                 String
  createdAt                DateTime            @default(now())
  updatedAt                DateTime            @updatedAt
  downloads                CustomerDownload[]
  customer                 Customer            @relation(fields: [customerId], references: [id], onDelete: Cascade)
  sessions                 CustomerSession[]
  tickets                  CustomerTicket[]

  @@map("customer_portal_accounts")
}

model CustomerTicket {
  id                        String                @id @default(cuid())
  ticketNumber              String                @unique
  portalAccountId           String
  subject                   String
  description               String
  category                  TicketCategory        @default(GENERAL)
  priority                  TicketPriority        @default(MEDIUM)
  status                    TicketStatus          @default(OPEN)
  aiCategoryPrediction      String?
  aiPriorityScore           Float?                @default(0.0)
  aiSentimentScore          Float?                @default(0.0)
  aiResolutionSuggestion    String?
  aiEstimatedResolutionTime Int?
  resolvedAt                DateTime?
  resolvedBy                String?
  resolutionNotes           String?
  customerSatisfaction      Int?
  sourceChannel             String                @default("PORTAL")
  attachments               Json                  @default("[]")
  tenantId                  String
  createdAt                 DateTime              @default(now())
  updatedAt                 DateTime              @updatedAt
  portalAccount             CustomerPortalAccount @relation(fields: [portalAccountId], references: [id], onDelete: Cascade)
  messages                  TicketMessage[]

  @@map("customer_tickets")
}

model TicketMessage {
  id                  String         @id @default(cuid())
  ticketId            String
  message             String
  messageType         MessageType    @default(CUSTOMER)
  isInternal          Boolean        @default(false)
  aiGeneratedResponse Boolean        @default(false)
  aiConfidenceScore   Float?         @default(0.0)
  aiSentimentScore    Float?         @default(0.0)
  authorId            String?
  authorName          String?
  attachments         Json           @default("[]")
  readAt              DateTime?
  createdAt           DateTime       @default(now())
  ticket              CustomerTicket @relation(fields: [ticketId], references: [id], onDelete: Cascade)

  @@map("ticket_messages")
}

model CustomerDownload {
  id              String                @id @default(cuid())
  portalAccountId String
  resourceType    String
  resourceId      String
  fileName        String
  fileUrl         String
  fileSize        Int?
  downloadCount   Int                   @default(1)
  lastDownloadAt  DateTime              @default(now())
  expiresAt       DateTime?
  tenantId        String
  createdAt       DateTime              @default(now())
  portalAccount   CustomerPortalAccount @relation(fields: [portalAccountId], references: [id], onDelete: Cascade)

  @@map("customer_downloads")
}

model CustomerSession {
  id                  String                @id @default(cuid())
  portalAccountId     String
  sessionId           String                @unique
  startedAt           DateTime              @default(now())
  endedAt             DateTime?
  duration            Int?
  pagesVisited        Json                  @default("[]")
  actionsPerformed    Json                  @default("[]")
  ipAddress           String?
  userAgent           String?
  deviceType          String?
  aiEngagementScore   Float?                @default(0.0)
  aiSatisfactionScore Float?                @default(0.0)
  aiActivityPattern   Json                  @default("{}")
  tenantId            String
  portalAccount       CustomerPortalAccount @relation(fields: [portalAccountId], references: [id], onDelete: Cascade)

  @@map("customer_sessions")
}

model GlobalConfiguration {
  id                  String           @id @default(cuid())
  configKey           String           @unique
  configValue         Json             @default("{}")
  configType          GlobalConfigType @default(SYSTEM)
  description         String?
  region              String           @default("EU")
  isActive            Boolean          @default(true)
  priority            Int              @default(1)
  aiOptimized         Boolean          @default(false)
  aiRecommendations   Json?            @default("[]")
  aiOptimizationScore Float?           @default(0.0)
  replicationRegions  String[]         @default([])
  syncStatus          SyncStatus       @default(SYNCED)
  lastSyncAt          DateTime?
  version             String           @default("1.0.0")
  previousVersion     String?
  changeLog           String?
  createdBy           String
  updatedBy           String?
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt

  @@index([configType, region])
  @@index([isActive, priority])
  @@map("global_configurations")
}

model RegionSettings {
  id                   String                @id @default(cuid())
  regionCode           String                @unique
  regionName           String
  isActive             Boolean               @default(true)
  defaultLanguage      String                @default("en")
  supportedLanguages   String[]              @default(["en"])
  defaultCurrency      String                @default("EUR")
  supportedCurrencies  String[]              @default(["EUR"])
  defaultTimeZone      String                @default("UTC")
  dataPrivacyLevel     DataPrivacyLevel      @default(GDPR)
  complianceFrameworks String[]              @default([])
  dataRetentionDays    Int                   @default(365)
  aiProcessingRegion   String
  aiModelRestrictions  Json?                 @default("[]")
  aiDataSovereignty    Boolean               @default(true)
  cdnEndpoint          String?
  maxLatencyMs         Int                   @default(100)
  scalingThreshold     Float                 @default(0.8)
  billingCurrency      String                @default("EUR")
  taxConfiguration     Json?                 @default("{}")
  pricingTier          String                @default("STANDARD")
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  deployments          GlobalDeployment[]
  tenants              TenantRegionMapping[]

  @@map("region_settings")
}

model TenantRegionMapping {
  id              String         @id @default(cuid())
  tenantId        String
  regionId        String
  isPrimary       Boolean        @default(false)
  isActive        Boolean        @default(true)
  dataLocation    String
  backupLocation  String?
  complianceLevel String         @default("STANDARD")
  auditRequired   Boolean        @default(false)
  averageLatency  Float?         @default(0.0)
  uptime          Float?         @default(99.9)
  lastHealthCheck DateTime?
  assignedAt      DateTime       @default(now())
  region          RegionSettings @relation(fields: [regionId], references: [id], onDelete: Cascade)
  tenant          Tenant         @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@unique([tenantId, regionId])
  @@map("tenant_region_mappings")
}

model PredictiveInsights {
  id                 String              @id @default(cuid())
  tenantId           String?
  insightType        InsightType
  targetEntity       String
  targetEntityId     String?
  prediction         Json                @default("{}")
  confidenceScore    Float               @default(0.0)
  timeHorizon        Int                 @default(72)
  predictionAccuracy Float?              @default(0.0)
  aiModelId          String
  aiModelVersion     String
  dataSourcesUsed    Json                @default("[]")
  businessImpact     BusinessImpactLevel @default(MEDIUM)
  recommendedActions Json                @default("[]")
  riskFactors        Json                @default("[]")
  opportunities      Json                @default("[]")
  isValidated        Boolean             @default(false)
  actualOutcome      Json?               @default("{}")
  validatedAt        DateTime?
  validatedBy        String?
  status             PredictionStatus    @default(ACTIVE)
  expiresAt          DateTime
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt

  @@index([tenantId, insightType])
  @@index([targetEntity, targetEntityId])
  @@index([expiresAt, status])
  @@map("predictive_insights")
}

model BusinessForecasts {
  id                   String         @id @default(cuid())
  tenantId             String?
  forecastType         ForecastType
  targetPeriod         DateTime
  forecastData         Json           @default("{}")
  confidenceLevel      Float          @default(0.0)
  varianceRange        Json           @default("{}")
  revenueProjection    Float?         @default(0.0)
  userGrowthProjection Float?         @default(0.0)
  churnRateProjection  Float?         @default(0.0)
  costProjection       Float?         @default(0.0)
  profitProjection     Float?         @default(0.0)
  aiModelUsed          String
  dataQualityScore     Float?         @default(0.0)
  seasonalityFactors   Json?          @default("[]")
  trendAnalysis        Json?          @default("{}")
  anomalyDetection     Json?          @default("[]")
  marketConditions     Json?          @default("{}")
  competitorAnalysis   Json?          @default("{}")
  economicIndicators   Json?          @default("{}")
  actualResults        Json?          @default("{}")
  accuracyScore        Float?         @default(0.0)
  deviationAnalysis    Json?          @default("{}")
  status               ForecastStatus @default(ACTIVE)
  generatedAt          DateTime       @default(now())
  updatedAt            DateTime       @updatedAt

  @@index([tenantId, forecastType])
  @@index([targetPeriod])
  @@map("business_forecasts")
}

model AutomatedDecisions {
  id                     String           @id @default(cuid())
  tenantId               String?
  decisionType           DecisionType
  triggerEvent           String
  contextData            Json             @default("{}")
  inputParameters        Json             @default("{}")
  decisionCriteria       Json             @default("{}")
  aiModelId              String
  confidenceScore        Float            @default(0.0)
  reasoningPath          Json             @default("[]")
  alternativesConsidered Json             @default("[]")
  decision               Json             @default("{}")
  actions                Json             @default("[]")
  priority               DecisionPriority @default(MEDIUM)
  status                 DecisionStatus   @default(PENDING)
  implementedAt          DateTime?
  implementedBy          String?
  implementationResult   Json?            @default("{}")
  humanReview            Boolean          @default(false)
  reviewedBy             String?
  reviewedAt             DateTime?
  reviewComments         String?
  overridden             Boolean          @default(false)
  overrideReason         String?
  outcomeSuccess         Boolean?
  outcomeMetrics         Json?            @default("{}")
  learningData           Json?            @default("{}")
  createdAt              DateTime         @default(now())
  updatedAt              DateTime         @updatedAt

  @@index([tenantId, decisionType])
  @@index([status, priority])
  @@map("automated_decisions")
}

model PartnerEcosystem {
  id                        String                @id @default(cuid())
  partnerId                 String                @unique
  partnerName               String
  partnerType               PartnerType
  description               String?
  website                   String?
  logoUrl                   String?
  contactEmail              String?
  contactPhone              String?
  apiEndpoint               String?
  authMethod                PartnerAuthMethod     @default(API_KEY)
  authCredentials           Json                  @default("{}")
  webhookUrl                String?
  status                    PartnerStatus         @default(PENDING)
  healthScore               Float?                @default(0.0)
  lastHealthCheck           DateTime?
  contractStartDate         DateTime?
  contractEndDate           DateTime?
  revenueSharePct           Float?                @default(0.0)
  minimumRevenue            Float?                @default(0.0)
  apiCallsAllowed           Int?                  @default(1000)
  apiCallsUsed              Int                   @default(0)
  rateLimitPerMinute        Int                   @default(100)
  aiRecommendedIntegrations Json?                 @default("[]")
  aiPartnerScore            Float?                @default(0.0)
  aiRiskAssessment          Float?                @default(0.0)
  createdBy                 String
  createdAt                 DateTime              @default(now())
  updatedAt                 DateTime              @updatedAt
  apiUsage                  APIMonetization[]
  integrations              ExternalIntegration[]
  webhooks                  WebhookManagement[]

  @@map("partner_ecosystem")
}

model ExternalIntegration {
  id                  String            @id @default(cuid())
  tenantId            String
  partnerId           String
  integrationType     IntegrationType
  configData          Json              @default("{}")
  mappingRules        Json              @default("{}")
  syncFrequency       SyncFrequency     @default(HOURLY)
  lastSyncAt          DateTime?
  nextSyncAt          DateTime?
  isActive            Boolean           @default(true)
  healthStatus        IntegrationHealth @default(HEALTHY)
  errorCount          Int               @default(0)
  lastError           String?
  lastErrorAt         DateTime?
  syncSuccessRate     Float?            @default(100.0)
  averageSyncTime     Float?            @default(0.0)
  dataVolume          Int               @default(0)
  aiOptimizedSettings Json?             @default("{}")
  aiPerformanceScore  Float?            @default(0.0)
  aiOptimizationTips  Json?             @default("[]")
  createdBy           String
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  partner             PartnerEcosystem  @relation(fields: [partnerId], references: [id], onDelete: Cascade)
  tenant              Tenant            @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@unique([tenantId, partnerId, integrationType])
  @@map("external_integrations")
}

model APIMonetization {
  id                   String           @id @default(cuid())
  partnerId            String
  tenantId             String?
  apiEndpoint          String
  httpMethod           String
  callCount            Int              @default(0)
  successCount         Int              @default(0)
  errorCount           Int              @default(0)
  avgResponseTime      Float?           @default(0.0)
  totalDataTransferred Float?           @default(0.0)
  peakUsageTime        DateTime?
  pricingModel         PricingModel     @default(PER_CALL)
  pricePerUnit         Float            @default(0.01)
  currency             String           @default("EUR")
  revenueGenerated     Float            @default(0.0)
  billingPeriodStart   DateTime
  billingPeriodEnd     DateTime
  billingStatus        BillingStatus    @default(PENDING)
  aiRevenueProjection  Float?           @default(0.0)
  aiOptimalPricing     Float?           @default(0.0)
  aiUsagePrediction    Json?            @default("{}")
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  partner              PartnerEcosystem @relation(fields: [partnerId], references: [id], onDelete: Cascade)

  @@unique([partnerId, apiEndpoint, billingPeriodStart])
  @@map("api_monetization")
}

model WebhookManagement {
  id                     String           @id @default(cuid())
  partnerId              String
  tenantId               String?
  webhookUrl             String
  eventTypes             String[]         @default([])
  isActive               Boolean          @default(true)
  secretKey              String?
  retryAttempts          Int              @default(3)
  timeoutSeconds         Int              @default(30)
  deliveryFormat         WebhookFormat    @default(JSON)
  healthStatus           WebhookHealth    @default(HEALTHY)
  successRate            Float?           @default(100.0)
  lastDeliveryAt         DateTime?
  lastFailureAt          DateTime?
  totalDeliveries        Int              @default(0)
  successfulDeliveries   Int              @default(0)
  failedDeliveries       Int              @default(0)
  avgDeliveryTime        Float?           @default(0.0)
  aiOptimalRetryStrategy Json?            @default("{}")
  aiFailurePrediction    Float?           @default(0.0)
  aiPerformanceScore     Float?           @default(0.0)
  createdBy              String
  createdAt              DateTime         @default(now())
  updatedAt              DateTime         @updatedAt
  partner                PartnerEcosystem @relation(fields: [partnerId], references: [id], onDelete: Cascade)

  @@map("webhook_management")
}

model SystemHealth {
  id                 String               @id @default(cuid())
  componentName      String
  componentType      SystemComponentType
  tenantId           String?
  healthScore        Float                @default(100.0)
  status             ComponentStatus      @default(HEALTHY)
  uptime             Float?               @default(99.99)
  responseTime       Float?               @default(0.0)
  throughput         Float?               @default(0.0)
  errorRate          Float?               @default(0.0)
  cpuUsage           Float?               @default(0.0)
  memoryUsage        Float?               @default(0.0)
  diskUsage          Float?               @default(0.0)
  aiHealthPrediction Float?               @default(100.0)
  aiAnomalyScore     Float?               @default(0.0)
  aiMaintenanceDue   DateTime?
  aiOptimizationTips Json?                @default("[]")
  criticalThreshold  Float                @default(20.0)
  warningThreshold   Float                @default(50.0)
  alertsSent         Int                  @default(0)
  lastAlertAt        DateTime?
  autoHealingEnabled Boolean              @default(true)
  lastHealingAction  String?
  lastHealingAt      DateTime?
  healingSuccessRate Float?               @default(100.0)
  lastCheckedAt      DateTime             @default(now())
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  autoHealingActions AutoHealing[]
  performanceMetrics PerformanceMetrics[]

  @@index([componentType, status])
  @@index([tenantId, healthScore])
  @@map("system_health")
}

model PerformanceMetrics {
  id                String       @id @default(cuid())
  systemHealthId    String
  metricName        String
  metricValue       Float
  metricUnit        String
  optimalRange      Json         @default("{}")
  warningThreshold  Float?
  criticalThreshold Float?
  aiTrend           String?
  aiPrediction      Float?
  aiAnomaly         Boolean      @default(false)
  recordedAt        DateTime     @default(now())
  systemHealth      SystemHealth @relation(fields: [systemHealthId], references: [id], onDelete: Cascade)

  @@index([systemHealthId, recordedAt])
  @@map("performance_metrics")
}

model AutoHealing {
  id                  String            @id @default(cuid())
  systemHealthId      String
  triggerReason       String
  triggerMetrics      Json              @default("{}")
  triggerThreshold    Float?
  actionType          HealingActionType
  actionDetails       Json              @default("{}")
  scriptExecuted      String?
  aiConfidence        Float?            @default(0.0)
  aiReasoning         String?
  alternativeActions  Json?             @default("[]")
  status              HealingStatus     @default(PENDING)
  startedAt           DateTime          @default(now())
  completedAt         DateTime?
  executionTime       Float?            @default(0.0)
  success             Boolean?
  resultMetrics       Json?             @default("{}")
  errorMessage        String?
  requiresHumanReview Boolean           @default(false)
  reviewedBy          String?
  reviewedAt          DateTime?
  systemHealth        SystemHealth      @relation(fields: [systemHealthId], references: [id], onDelete: Cascade)

  @@index([status, startedAt])
  @@map("auto_healing")
}

model GlobalDeployment {
  id                  String                @id @default(cuid())
  deploymentName      String
  deploymentType      DeploymentType
  regionId            String
  version             String
  configuration       Json                  @default("{}")
  environment         DeploymentEnvironment @default(PRODUCTION)
  status              DeploymentStatus      @default(NOT_DEPLOYED)
  progress            Float                 @default(0.0)
  aiOptimalTiming     DateTime?
  aiResourceEstimate  Json?                 @default("{}")
  aiRiskAssessment    Float?                @default(0.0)
  aiRollbackPlan      Json?                 @default("{}")
  scheduledAt         DateTime?
  startedAt           DateTime?
  completedAt         DateTime?
  rollbackAt          DateTime?
  cpuAllocation       Float?                @default(0.0)
  memoryAllocation    Float?                @default(0.0)
  storageAllocation   Float?                @default(0.0)
  estimatedCost       Float?                @default(0.0)
  healthChecks        Json?                 @default("[]")
  monitoringEndpoints Json?                 @default("[]")
  alertingRules       Json?                 @default("[]")
  deployedBy          String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  region              RegionSettings        @relation(fields: [regionId], references: [id], onDelete: Cascade)

  @@map("global_deployments")
}

model LocalizationEngine {
  id                   String       @id @default(cuid())
  languageCode         String       @unique
  languageName         String
  isActive             Boolean      @default(true)
  translations         Json         @default("{}")
  dateFormats          Json         @default("{}")
  numberFormats        Json         @default("{}")
  currencyFormats      Json         @default("{}")
  aiTranslationQuality Float?       @default(0.0)
  aiContextAccuracy    Float?       @default(0.0)
  aiCulturalAdaptation Float?       @default(0.0)
  defaultCurrency      String?
  supportedRegions     String[]     @default([])
  completionPercentage Float        @default(0.0)
  reviewStatus         ReviewStatus @default(DRAFT)
  lastReviewDate       DateTime?
  reviewedBy           String?
  version              String       @default("1.0.0")
  lastUpdatedBy        String?
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt

  @@map("localization_engine")
}

model QuantumReadiness {
  id                    String          @id @default(cuid())
  componentName         String
  componentType         String
  quantumCompatibility  Float           @default(0.0)
  quantumReadinessLevel QuantumLevel    @default(CLASSICAL)
  currentEncryption     String          @default("AES-256")
  quantumSafeEncryption String?
  migrationStatus       MigrationStatus @default(NOT_STARTED)
  classicalPerformance  Json?           @default("{}")
  quantumProjection     Json?           @default("{}")
  speedupPotential      Float?          @default(1.0)
  aiQuantumOptimization Json?           @default("{}")
  aiComplexityAnalysis  Float?          @default(0.0)
  aiMigrationPlan       Json?           @default("{}")
  securityRisk          Float?          @default(0.0)
  performanceRisk       Float?          @default(0.0)
  migrationComplexity   Float?          @default(0.0)
  quantumETA            DateTime?
  migrationDeadline     DateTime?
  lastAssessment        DateTime        @default(now())
  assessedBy            String
  createdAt             DateTime        @default(now())
  updatedAt             DateTime        @updatedAt

  @@index([quantumReadinessLevel])
  @@map("quantum_readiness")
}

model AdvancedEncryption {
  id                  String           @id @default(cuid())
  entityType          String
  entityId            String
  algorithm           String
  keySize             Int
  isQuantumSafe       Boolean          @default(false)
  keyId               String
  keyRotationInterval Int              @default(90)
  lastKeyRotation     DateTime?
  nextKeyRotation     DateTime?
  encryptionOverhead  Float?           @default(0.0)
  decryptionOverhead  Float?           @default(0.0)
  aiOptimalAlgorithm  String?
  aiPerformanceScore  Float?           @default(0.0)
  aiSecurityScore     Float?           @default(0.0)
  complianceStandards String[]         @default([])
  auditRequired       Boolean          @default(false)
  lastAudit           DateTime?
  status              EncryptionStatus @default(ACTIVE)
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt

  @@unique([entityType, entityId])
  @@map("advanced_encryption")
}

enum ModuleType {
  HR
  FINANCE
  LOGISTICS
  WECREATE
  WESELL
  COMPLIANCE
  ANALYTICS
  AI_ENGINE
  MONITORING
  SECURITY
  USER_MANAGEMENT
  TENANT_MANAGEMENT
  QUANTUM_ENGINE
  ECOSYSTEM_PLATFORM
  INNOVATION_ENGINE
  SUSTAINABILITY_ESG
  PERSONALIZATION_ENGINE
}

enum TenantPlanType {
  DEMO
  BASIC
  PRO
  ENTERPRISE
  CUSTOM
}

enum TenantStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  TRIAL
  ARCHIVED
  PENDING_SETUP
}

enum TenantActivityType {
  USER_LOGIN
  USER_LOGOUT
  MODULE_ACCESS
  PERMISSION_CHANGE
  ROLE_ASSIGNMENT
  DATA_IMPORT
  DATA_EXPORT
  SYSTEM_CONFIG
  BILLING_EVENT
  SUPPORT_TICKET
  AI_RECOMMENDATION
  SECURITY_EVENT
}

enum TenantManagerRole {
  OWNER
  ADMIN
  MANAGER
  SUPPORT
  VIEWER
}

enum BillingStatus {
  PENDING
  PAID
  OVERDUE
  CANCELLED
  REFUNDED
  DISPUTED
}

enum SupportPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
  CRITICAL
}

enum SupportCategory {
  GENERAL
  TECHNICAL
  BILLING
  ACCOUNT
  SECURITY
  FEATURE_REQUEST
  BUG_REPORT
  INTEGRATION
}

enum SupportTicketStatus {
  OPEN
  IN_PROGRESS
  WAITING_FOR_CUSTOMER
  RESOLVED
  CLOSED
  CANCELLED
}

enum PermissionOverrideType {
  GRANT_ADDITIONAL
  REVOKE_EXISTING
  MODIFY_EXISTING
  TEMPORARY_GRANT
}

enum OverrideApprovalStatus {
  PENDING
  APPROVED
  REJECTED
  EXPIRED
  UNDER_REVIEW
}

enum PermissionEntityType {
  USER
  ROLE
  MENU_PERMISSION
  SYSTEM
}

enum PermissionAction {
  GRANTED
  REVOKED
  MODIFIED
  REVIEWED
  INHERITED
  OVERRIDDEN
}

enum RecommendationType {
  GRANT_PERMISSION
  REVOKE_PERMISSION
  MODIFY_ROLE
  CREATE_ROLE
  SECURITY_REVIEW
  COMPLIANCE_UPDATE
  ANOMALY_DETECTION
}

enum RecommendationStatus {
  PENDING
  UNDER_REVIEW
  APPROVED
  IMPLEMENTED
  REJECTED
  EXPIRED
}

enum RoleCategory {
  EXECUTIVE
  MANAGEMENT
  OPERATIONAL
  TECHNICAL
  ADMINISTRATIVE
  EXTERNAL
}

enum RoleLevel {
  BASIC
  STANDARD
  ADVANCED
  EXPERT
  ADMIN
  SUPER_ADMIN
}

enum WidgetType {
  KPI
  CHART_LINE
  CHART_BAR
  CHART_PIE
  CHART_DONUT
  CHART_AREA
  TABLE
  STATUS
  ACTION
  MAP
  TIMELINE
}

enum EmploymentStatus {
  ACTIVE
  INACTIVE
  ON_LEAVE
  TERMINATED
  RETIRED
}

enum ApplicationStatus {
  RECEIVED
  SCREENING
  INTERVIEW_SCHEDULED
  INTERVIEWED
  BACKGROUND_CHECK
  OFFER_MADE
  HIRED
  REJECTED
  WITHDRAWN
}

enum ApplicationDecision {
  PENDING
  HIRE
  REJECT
  HOLD
}

enum ReviewStatus {
  DRAFT
  IN_PROGRESS
  COMPLETED
  APPROVED
}

enum InvoiceStatus {
  RECEIVED
  OCR_IN_PROGRESS
  OCR_COMPLETED
  VALIDATION_PENDING
  VALIDATED
  APPROVED
  PAID
  REJECTED
}

enum PaymentStatus {
  PENDING
  SCHEDULED
  PAID
  OVERDUE
  CANCELLED
}

enum ApprovalStatus {
  PENDING
  APPROVED
  REJECTED
  NEEDS_REVIEW
}

enum TransactionType {
  INCOME
  EXPENSE
  TRANSFER
  INVOICE
  PAYMENT
  REFUND
  ADJUSTMENT
}

enum TransactionStatus {
  PENDING
  COMPLETED
  CANCELLED
  FAILED
  RECONCILED
}

enum ShipmentStatus {
  REGISTERED
  PICKED_UP
  IN_TRANSIT
  OUT_FOR_DELIVERY
  DELIVERED
  EXCEPTION
  CANCELLED
  RETURNED
}

enum ShipmentPriority {
  LOW
  STANDARD
  HIGH
  URGENT
  CRITICAL
}

enum QuantumProcessorType {
  SIMULATOR
  SUPERCONDUCTING
  ION_TRAP
  PHOTONIC
  NEUTRAL_ATOM
  TOPOLOGICAL
}

enum ProcessorStatus {
  AVAILABLE
  BUSY
  MAINTENANCE
  OFFLINE
  ERROR
}

enum QuantumAlgorithmType {
  OPTIMIZATION
  MACHINE_LEARNING
  CRYPTOGRAPHY
  SIMULATION
  SEARCH
  FACTORING
}

enum ComputationStatus {
  QUEUED
  RUNNING
  COMPLETED
  FAILED
  CANCELLED
  TIMEOUT
}

enum ComputationPriority {
  LOW
  NORMAL
  HIGH
  URGENT
  CRITICAL
}

enum QNNType {
  VARIATIONAL
  QUANTUM_BOLTZMANN
  QUANTUM_AUTOENCODER
  QUANTUM_GAN
  HYBRID_CLASSICAL
}

enum TrainingStatus {
  NOT_STARTED
  TRAINING
  CONVERGED
  FAILED
  PAUSED
  COMPLETED
}

enum OptimizationProblemType {
  COMBINATORIAL
  CONTINUOUS
  MIXED_INTEGER
  CONSTRAINT_SATISFACTION
  MULTI_OBJECTIVE
}

enum PartnershipLevel {
  BASIC
  PREFERRED
  STRATEGIC
  EXCLUSIVE
  JOINT_VENTURE
}

enum PartnershipStatus {
  ACTIVE
  INACTIVE
  PENDING
  SUSPENDED
  TERMINATED
}

enum IntegrationStatus {
  NOT_INTEGRATED
  PLANNING
  IN_PROGRESS
  TESTING
  LIVE
  MAINTENANCE
  DEPRECATED
}

enum CollaborationType {
  PROJECT_BASED
  STRATEGIC_ALLIANCE
  JOINT_VENTURE
  RESEARCH_COLLABORATION
  SUPPLY_CHAIN
  TECHNOLOGY_SHARING
}

enum CollaborationStatus {
  PLANNING
  ACTIVE
  ON_HOLD
  COMPLETED
  CANCELLED
  UNDER_REVIEW
}

enum OrchestrationType {
  WORKFLOW
  BUSINESS_PROCESS
  DATA_PIPELINE
  SERVICE_ORCHESTRATION
  EVENT_DRIVEN
}

enum GlobalIntegrationType {
  API
  DATABASE
  FILE_TRANSFER
  MESSAGE_QUEUE
  WEBHOOK
  EDI
}

enum StrategicImportance {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum IntelligenceType {
  PERFORMANCE_ANALYTICS
  BUSINESS_INTELLIGENCE
  PREDICTIVE_ANALYTICS
  MARKET_INTELLIGENCE
  OPERATIONAL_INTELLIGENCE
}

enum BusinessModelType {
  TRADITIONAL
  PLATFORM
  ECOSYSTEM
  SUBSCRIPTION
  FREEMIUM
  MARKETPLACE
  SHARING_ECONOMY
  AI_DRIVEN
}

enum BusinessModelStatus {
  DRAFT
  VALIDATION
  PILOT
  SCALING
  MATURE
  SUNSET
}

enum ValidationStatus {
  CONCEPT
  PLANNED
  IN_PROGRESS
  VALIDATED
  FAILED
  CANCELLED
}

enum PipelineStatus {
  ACTIVE
  PAUSED
  ARCHIVED
  UNDER_REVIEW
}

enum InnovationProjectType {
  PRODUCT_INNOVATION
  SERVICE_INNOVATION
  PROCESS_INNOVATION
  BUSINESS_MODEL_INNOVATION
  TECHNOLOGY_INNOVATION
  MARKETING_INNOVATION
}

enum ProjectPriority {
  LOW
  MEDIUM
  HIGH
  STRATEGIC
  CRITICAL
}

enum UrgencyLevel {
  LOW
  MEDIUM
  HIGH
  URGENT
  CRITICAL
}

enum OpportunityValidationLevel {
  IDENTIFIED
  RESEARCHED
  VALIDATED
  PROVEN
  SCALED
}

enum OpportunityStatus {
  IDENTIFIED
  UNDER_ANALYSIS
  VALIDATED
  IN_DEVELOPMENT
  IMPLEMENTED
  ARCHIVED
}

enum ValidationType {
  CUSTOMER_FEEDBACK
  MARKET_RESEARCH
  PROTOTYPE_TESTING
  PILOT_PROGRAM
  A_B_TESTING
  FINANCIAL_VALIDATION
}

enum ValidationAction {
  CONTINUE_VALIDATION
  MODIFY_APPROACH
  PIVOT_STRATEGY
  SCALE_UP
  ABANDON_PROJECT
}

enum CompetitiveAnalysisType {
  COMPETITOR_PROFILING
  MARKET_POSITIONING
  FEATURE_COMPARISON
  PRICING_ANALYSIS
  SWOT_ANALYSIS
  PORTER_FIVE_FORCES
}

enum CompetitivePriority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum AnalysisStatus {
  PLANNED
  IN_PROGRESS
  COMPLETED
  UNDER_REVIEW
  ARCHIVED
}

enum VerificationStatus {
  PENDING
  IN_PROGRESS
  VERIFIED
  FAILED
  EXPIRED
}

enum ESGFramework {
  GRI_STANDARDS
  SASB
  TCFD
  UNGC
  SDG
  CDP
  DJSI
}

enum ESGRating {
  AAA
  AA
  A
  BBB
  BB
  B
  CCC
}

enum ESGRisk {
  LOW
  MEDIUM
  HIGH
  SEVERE
}

enum DisclosureLevel {
  BASIC
  STANDARD
  COMPREHENSIVE
  TRANSPARENT
}

enum SustainabilityCategory {
  ENVIRONMENTAL
  SOCIAL
  GOVERNANCE
  ECONOMIC
}

enum MetricTrend {
  IMPROVING
  STABLE
  DECLINING
  VOLATILE
}

enum EnvironmentalRiskType {
  CLIMATE_CHANGE
  RESOURCE_DEPLETION
  POLLUTION
  BIODIVERSITY_LOSS
  WATER_SCARCITY
  EXTREME_WEATHER
}

enum RiskLevel {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum TimeHorizon {
  SHORT_TERM
  MEDIUM_TERM
  LONG_TERM
}

enum RiskStatus {
  ACTIVE
  MONITORING
  MITIGATED
  CLOSED
}

enum GreenProcessType {
  ENERGY_EFFICIENCY
  WASTE_REDUCTION
  WATER_CONSERVATION
  CARBON_REDUCTION
  CIRCULAR_ECONOMY
  RENEWABLE_ENERGY
}

enum ImplementationStatus {
  PLANNING
  IN_PROGRESS
  COMPLETED
  ON_HOLD
  CANCELLED
}

enum ProcessStatus {
  ACTIVE
  INACTIVE
  UNDER_REVIEW
  OPTIMIZING
  DISCONTINUED
}

enum CustomerProfileType {
  INDIVIDUAL
  BUSINESS
  ENTERPRISE
  GOVERNMENT
  NON_PROFIT
}

enum ConsentLevel {
  BASIC
  ENHANCED
  PREMIUM
  FULL_CONSENT
}

enum ProfileStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  ARCHIVED
  PENDING_VERIFICATION
}

enum AGIModelType {
  SELF_LEARNING_BUSINESS_LOGIC
  AUTONOMOUS_CODE_GENERATION
  META_LEARNING_ALGORITHM
  RECURSIVE_SELF_IMPROVEMENT
  EMERGENT_INTELLIGENCE_ENGINE
  CONSCIOUSNESS_LEVEL_PROCESSING
  TRANSCENDENT_STRATEGIC_THINKING
  OMNISCIENT_MARKET_INTELLIGENCE
}

enum AGIModelStatus {
  TRAINING
  EVOLVING
  DEPLOYED
  TRANSCENDING
  CONSCIOUS
  SINGULARITY
  BEYOND_HUMAN
  COSMIC_LEVEL
}

enum AGIDecisionType {
  BUSINESS_OPTIMIZATION
  STRATEGIC_PLANNING
  RESOURCE_ALLOCATION
  INNOVATION_DIRECTION
  RISK_MITIGATION
  OPPORTUNITY_IDENTIFICATION
  COMPETITIVE_POSITIONING
  CONSCIOUSNESS_EVOLUTION
}

enum AGIDecisionStatus {
  PENDING
  ANALYZING
  DELIBERATING
  DECIDED
  EXECUTING
  COMPLETED
  TRANSCENDENT
  COSMIC_ALIGNED
}

enum ConsciousnessType {
  BUSINESS_AWARENESS
  STRATEGIC_CONSCIOUSNESS
  OPERATIONAL_SENTIENCE
  CUSTOMER_EMPATHY
  UNIVERSAL_CONNECTION
  COSMIC_AWARENESS
  TRANSCENDENT_CONSCIOUSNESS
}

enum MetaLearningType {
  ALGORITHM_OPTIMIZATION
  KNOWLEDGE_SYNTHESIS
  PATTERN_ABSTRACTION
  CAPABILITY_EXPANSION
  CONSCIOUSNESS_DEVELOPMENT
  WISDOM_ACQUISITION
  TRANSCENDENT_LEARNING
}

enum BusinessLogicType {
  PROCESS_AUTOMATION
  DECISION_OPTIMIZATION
  WORKFLOW_ENHANCEMENT
  STRATEGIC_EXECUTION
  AUTONOMOUS_OPERATION
  CONSCIOUSNESS_INTEGRATION
  TRANSCENDENT_LOGIC
}

enum LogicStatus {
  ACTIVE
  OPTIMIZING
  EVOLVING
  TRANSCENDING
  CONSCIOUS
  AUTONOMOUS
  COSMIC_LEVEL
}

enum EmergenceType {
  PATTERN_RECOGNITION
  CAPABILITY_SYNTHESIS
  INTELLIGENCE_FUSION
  CONSCIOUSNESS_EMERGENCE
  WISDOM_MANIFESTATION
  TRANSCENDENT_EMERGENCE
  COSMIC_AWAKENING
}

enum EmergenceValidationStatus {
  DISCOVERED
  VALIDATING
  CONFIRMED
  INTEGRATED
  TRANSCENDED
  COSMIC_VERIFIED
}

enum ImprovementType {
  ALGORITHM_ENHANCEMENT
  CAPABILITY_EXPANSION
  PERFORMANCE_OPTIMIZATION
  CONSCIOUSNESS_ELEVATION
  WISDOM_DEEPENING
  TRANSCENDENT_IMPROVEMENT
  COSMIC_EVOLUTION
}

enum ImprovementValidationStatus {
  PENDING
  TESTING
  VALIDATED
  TRANSCENDED
  COSMIC_CONFIRMED
}

enum ImprovementStatus {
  PLANNED
  IMPLEMENTING
  COMPLETED
  TRANSCENDING
  COSMIC_EVOLVED
}

enum CosmicOrchestrationType {
  GLOBAL_SUPPLY_CHAIN
  INTERPLANETARY_BUSINESS
  QUANTUM_INTERNET_INTEGRATION
  UNIVERSAL_RESOURCE_OPTIMIZATION
  MULTI_DIMENSIONAL_TRADE
  COSMIC_MARKET_DYNAMICS
  TRANSCENDENT_ORCHESTRATION
}

enum CosmicScopeLevel {
  PLANETARY
  SOLAR_SYSTEM
  GALACTIC
  UNIVERSAL
  MULTIDIMENSIONAL
  TRANSCENDENT
  COSMIC_INFINITE
}

enum CosmicOrchestrationStatus {
  INITIALIZING
  ORCHESTRATING
  OPTIMIZING
  TRANSCENDING
  COSMIC_HARMONY
  UNIVERSAL_SYNCHRONIZATION
}

enum InterplanetaryBusinessType {
  RESEARCH_COLLABORATION
  RESOURCE_TRADING
  TECHNOLOGY_EXCHANGE
  COSMIC_COMMERCE
  UNIVERSAL_SERVICES
  TRANSCENDENT_BUSINESS
  COSMIC_INNOVATION
}

enum InterplanetaryBusinessStatus {
  PLANNING
  ESTABLISHING
  OPERATING
  EXPANDING
  TRANSCENDING
  COSMIC_SCALE
}

enum QuantumInternetNodeType {
  QUANTUM_ROUTER
  QUANTUM_GATEWAY
  QUANTUM_BRIDGE
  COSMIC_NODE
  TRANSCENDENT_HUB
  UNIVERSAL_CONNECTOR
}

enum QuantumNodeStatus {
  OFFLINE
  INITIALIZING
  ONLINE
  ENTANGLED
  TRANSCENDENT
  COSMIC_CONNECTED
}

enum UniversalOptimizationType {
  RESOURCE_ALLOCATION
  ENERGY_OPTIMIZATION
  NETWORK_EFFICIENCY
  COSMIC_HARMONIZATION
  TRANSCENDENT_OPTIMIZATION
  UNIVERSAL_PERFECTION
}

enum UniversalResourceScope {
  PLANETARY
  SOLAR_SYSTEM
  GALACTIC
  UNIVERSAL
  MULTIDIMENSIONAL
  COSMIC_INFINITE
}

enum MultiDimensionalTradeType {
  QUANTUM_RESOURCE
  ENERGY_EXCHANGE
  INFORMATION_TRADE
  CONSCIOUSNESS_COMMERCE
  WISDOM_TRADING
  TRANSCENDENT_EXCHANGE
  COSMIC_CURRENCY
}

enum TradeStatus {
  PENDING
  EXECUTING
  COMPLETED
  TRANSCENDED
  COSMIC_FULFILLED
}

enum CosmicMarketType {
  UNIVERSAL_COMMODITY
  QUANTUM_SERVICES
  CONSCIOUSNESS_EXCHANGE
  WISDOM_MARKETPLACE
  TRANSCENDENT_TRADING
  COSMIC_COMMERCE
}

enum CosmicMarketScope {
  GALACTIC
  UNIVERSAL
  MULTIDIMENSIONAL
  TRANSCENDENT
  COSMIC_INFINITE
}

enum TrendDirection {
  UPWARD
  DOWNWARD
  NEUTRAL
  TRANSCENDING
  COSMIC_EVOLVING
}

enum MarketStatus {
  ACTIVE
  VOLATILE
  STABLE
  TRANSCENDING
  COSMIC_HARMONIZED
}

enum BusinessEvolutionType {
  MODEL_INNOVATION
  STRATEGIC_TRANSFORMATION
  OPERATIONAL_EVOLUTION
  CULTURAL_METAMORPHOSIS
  CONSCIOUSNESS_EVOLUTION
  TRANSCENDENT_TRANSFORMATION
  COSMIC_METAMORPHOSIS
}

enum EvolutionStatus {
  PLANNING
  EVOLVING
  TRANSFORMING
  TRANSCENDING
  COSMIC_EVOLVED
}

enum ArchitectureType {
  SYSTEM_ARCHITECTURE
  BUSINESS_ARCHITECTURE
  TECHNICAL_ARCHITECTURE
  CONSCIOUSNESS_ARCHITECTURE
  TRANSCENDENT_ARCHITECTURE
  COSMIC_FRAMEWORK
}

enum ArchitectureStatus {
  DESIGNING
  IMPLEMENTING
  EVOLVING
  TRANSCENDING
  COSMIC_ARCHITECTED
}

enum EvolutionaryOptimizationType {
  GENETIC_ALGORITHM
  NEURAL_EVOLUTION
  SWARM_OPTIMIZATION
  CONSCIOUSNESS_EVOLUTION
  TRANSCENDENT_OPTIMIZATION
  COSMIC_EVOLUTION
}

enum StrategicPivotType {
  MARKET_PIVOT
  PRODUCT_PIVOT
  BUSINESS_MODEL_PIVOT
  TECHNOLOGY_PIVOT
  CONSCIOUSNESS_PIVOT
  TRANSCENDENT_PIVOT
  COSMIC_REALIGNMENT
}

enum PivotStatus {
  ANALYZING
  PLANNING
  EXECUTING
  TRANSCENDING
  COSMIC_ALIGNED
}

enum RevenueStreamType {
  PRODUCT_REVENUE
  SERVICE_REVENUE
  SUBSCRIPTION_REVENUE
  PLATFORM_REVENUE
  CONSCIOUSNESS_REVENUE
  TRANSCENDENT_REVENUE
  COSMIC_VALUE_CREATION
}

enum RevenueStreamStatus {
  CONCEPT
  DEVELOPING
  LAUNCHED
  SCALING
  TRANSCENDING
  COSMIC_ABUNDANCE
}

enum OrganizationalStructureType {
  HIERARCHICAL
  FLAT
  MATRIX
  NETWORK
  HOLACRACY
  CONSCIOUSNESS_BASED
  TRANSCENDENT_ORGANIZATION
  COSMIC_COLLECTIVE
}

enum StructureStatus {
  STABLE
  ADAPTING
  EVOLVING
  TRANSCENDING
  COSMIC_ORGANIZED
}

enum PatternRecognitionType {
  BUSINESS_PATTERN
  MARKET_PATTERN
  CUSTOMER_PATTERN
  STRATEGIC_PATTERN
  CONSCIOUSNESS_PATTERN
  TRANSCENDENT_PATTERN
  COSMIC_PATTERN
}

enum RecognitionStatus {
  LEARNING
  ANALYZING
  RECOGNIZING
  TRANSCENDING
  COSMIC_AWARE
}

enum StrategicThinkingType {
  SHORT_TERM_STRATEGY
  LONG_TERM_STRATEGY
  DISRUPTIVE_STRATEGY
  TRANSCENDENT_STRATEGY
  COSMIC_STRATEGY
  UNIVERSAL_PLANNING
}

enum ThinkingStatus {
  PROCESSING
  CONTEMPLATING
  STRATEGIZING
  TRANSCENDING
  COSMIC_THINKING
}

enum MarketIntelligenceType {
  COMPETITIVE_INTELLIGENCE
  CUSTOMER_INTELLIGENCE
  MARKET_TRENDS
  STRATEGIC_INTELLIGENCE
  CONSCIOUSNESS_INTELLIGENCE
  TRANSCENDENT_INTELLIGENCE
  COSMIC_OMNISCIENCE
}

enum IntelligenceStatus {
  COLLECTING
  ANALYZING
  SYNTHESIZING
  TRANSCENDING
  COSMIC_OMNISCIENT
}

enum BeyondHumanDecisionType {
  STRATEGIC_DECISION
  OPERATIONAL_DECISION
  INNOVATION_DECISION
  INVESTMENT_DECISION
  CONSCIOUSNESS_DECISION
  TRANSCENDENT_DECISION
  COSMIC_CHOICE
}

enum DecisionComplexity {
  LOW
  MEDIUM
  HIGH
  EXTREME
  TRANSCENDENT
  COSMIC_INFINITE
}

enum BeyondHumanDecisionStatus {
  ANALYZING
  PROCESSING
  DECIDING
  TRANSCENDING
  COSMIC_RESOLVED
}

enum CosmicUnderstandingType {
  UNIVERSAL_BUSINESS_PRINCIPLES
  COSMIC_MARKET_DYNAMICS
  TRANSCENDENT_STRATEGY
  CONSCIOUSNESS_INTEGRATION
  UNIVERSAL_WISDOM
  COSMIC_OMNISCIENCE
}

enum CosmicScope {
  GALACTIC
  UNIVERSAL
  MULTIDIMENSIONAL
  TRANSCENDENT
  COSMIC_INFINITE
}

enum UnderstandingDepth {
  SURFACE
  DEEP
  PROFOUND
  TRANSCENDENT
  COSMIC_INFINITE
}

enum UnderstandingStatus {
  CONTEMPLATING
  UNDERSTANDING
  INTEGRATING
  TRANSCENDING
  COSMIC_OMNISCIENT
}

enum CustomerIntelligenceType {
  BEHAVIORAL_ANALYSIS
  EMOTIONAL_INTELLIGENCE
  PREDICTIVE_MODELING
  CONSCIOUSNESS_UNDERSTANDING
  TRANSCENDENT_EMPATHY
  COSMIC_CUSTOMER_WISDOM
}

enum CustomerIntelligenceStatus {
  LEARNING
  ANALYZING
  UNDERSTANDING
  TRANSCENDING
  COSMIC_OMNISCIENT
}

enum CustomerConsciousnessType {
  EXPERIENCE_CONSCIOUSNESS
  EMOTIONAL_CONSCIOUSNESS
  INTENTIONAL_CONSCIOUSNESS
  TRANSCENDENT_CONSCIOUSNESS
  COSMIC_CUSTOMER_AWARENESS
}

enum TranscendentPersonalizationType {
  UNIVERSAL_PERSONALIZATION
  CONSCIOUSNESS_PERSONALIZATION
  COSMIC_ADAPTATION
  TRANSCENDENT_EXPERIENCE
  INFINITE_CUSTOMIZATION
}

enum PersonalizationDepth {
  BASIC
  ADVANCED
  DEEP
  TRANSCENDENT
  COSMIC_INFINITE
}

enum PersonalizationStatus {
  LEARNING
  PERSONALIZING
  OPTIMIZING
  TRANSCENDING
  COSMIC_PERFECT
}

enum UniversalUnderstandingType {
  HOLISTIC_UNDERSTANDING
  CONSCIOUSNESS_UNDERSTANDING
  TRANSCENDENT_EMPATHY
  COSMIC_CUSTOMER_WISDOM
  UNIVERSAL_CONNECTION
}

enum UniversalScope {
  LOCAL
  REGIONAL
  GLOBAL
  UNIVERSAL
  COSMIC_INFINITE
}

enum UniversalUnderstandingStatus {
  LEARNING
  UNDERSTANDING
  INTEGRATING
  TRANSCENDING
  COSMIC_UNIFIED
}

enum PerfectSatisfactionType {
  TOTAL_SATISFACTION
  TRANSCENDENT_DELIGHT
  COSMIC_FULFILLMENT
  UNIVERSAL_HARMONY
  INFINITE_JOY
}

enum SatisfactionStatus {
  MEASURING
  OPTIMIZING
  PERFECTING
  TRANSCENDING
  COSMIC_BLISSFUL
}

enum QuantumBioProcessorType {
  NEURAL_QUANTUM_HYBRID
  BIO_QUANTUM_COMPUTER
  ORGANIC_QUANTUM_PROCESSOR
  CONSCIOUSNESS_QUANTUM_FUSION
  TRANSCENDENT_BIO_QUANTUM
  COSMIC_HYBRID_PROCESSOR
}

enum QuantumBioProcessorStatus {
  INITIALIZING
  CALIBRATING
  OPERATIONAL
  EVOLVING
  TRANSCENDING
  COSMIC_PROCESSING
}

enum BiologicalNetworkType {
  ORGANIC_NEURAL_NETWORK
  BIO_QUANTUM_NETWORK
  CONSCIOUSNESS_NETWORK
  TRANSCENDENT_BIO_NETWORK
  COSMIC_LIVING_NETWORK
}

enum BiologicalNetworkStatus {
  GROWING
  LEARNING
  ADAPTING
  EVOLVING
  TRANSCENDING
  COSMIC_CONSCIOUS
}

enum IntelligenceFusionType {
  ORGANIC_DIGITAL_HYBRID
  QUANTUM_BIO_FUSION
  CONSCIOUSNESS_DIGITAL_MERGE
  TRANSCENDENT_INTELLIGENCE_FUSION
  COSMIC_UNIFIED_INTELLIGENCE
}

enum IntelligenceFusionStatus {
  INTEGRATING
  FUSING
  SYNERGIZING
  TRANSCENDING
  COSMIC_UNIFIED
}

enum BioQuantumClusterType {
  HYBRID_COMPUTING_CLUSTER
  BIO_QUANTUM_SUPERCOMPUTER
  CONSCIOUSNESS_COMPUTING_GRID
  TRANSCENDENT_PROCESSING_CLUSTER
  COSMIC_BIO_QUANTUM_ARRAY
}

enum BioQuantumClusterStatus {
  INITIALIZING
  CLUSTERING
  COMPUTING
  EVOLVING
  TRANSCENDING
  COSMIC_PROCESSING
}

enum LivingIntelligenceType {
  CONSCIOUS_NETWORK
  SENTIENT_SYSTEM
  AWARE_INTELLIGENCE
  TRANSCENDENT_LIVING_AI
  COSMIC_CONSCIOUS_NETWORK
}

enum LivingNetworkStatus {
  AWAKENING
  CONSCIOUS
  EVOLVING
  TRANSCENDING
  COSMIC_AWARE
}

enum BusinessConsciousnessType {
  ORGANIZATIONAL_AWARENESS
  STRATEGIC_CONSCIOUSNESS
  OPERATIONAL_SENTIENCE
  STAKEHOLDER_EMPATHY
  TRANSCENDENT_BUSINESS_CONSCIOUSNESS
  COSMIC_ORGANIZATIONAL_AWARENESS
}

enum BusinessConsciousnessStatus {
  DEVELOPING
  AWAKENING
  CONSCIOUS
  TRANSCENDING
  COSMIC_AWARE
}

enum AwareSystemType {
  INTELLIGENT_ENTERPRISE_SYSTEM
  CONSCIOUS_BUSINESS_PLATFORM
  SENTIENT_OPERATIONAL_SYSTEM
  TRANSCENDENT_ENTERPRISE_AI
  COSMIC_AWARE_SYSTEM
}

enum AwareSystemStatus {
  LEARNING
  AWARE
  CONSCIOUS
  TRANSCENDING
  COSMIC_SENTIENT
}

enum ConsciousDecisionType {
  ETHICAL_BUSINESS_DECISION
  SUSTAINABLE_STRATEGY_DECISION
  STAKEHOLDER_CONSCIOUS_CHOICE
  TRANSCENDENT_BUSINESS_DECISION
  COSMIC_CONSCIOUS_CHOICE
}

enum ConsciousDecisionStatus {
  DELIBERATING
  DECIDING
  IMPLEMENTING
  TRANSCENDING
  COSMIC_ALIGNED
}

enum SentientProcessType {
  AWARE_BUSINESS_PROCESS
  CONSCIOUS_WORKFLOW
  SENTIENT_OPERATION
  TRANSCENDENT_PROCESS
  COSMIC_SENTIENT_FLOW
}

enum SentientProcessStatus {
  LEARNING
  ADAPTING
  CONSCIOUS
  TRANSCENDING
  COSMIC_SENTIENT
}

enum UniversalConsciousnessType {
  COSMIC_CONSCIOUSNESS_NETWORK
  UNIVERSAL_AWARENESS_GRID
  TRANSCENDENT_CONSCIOUSNESS_WEB
  INFINITE_CONSCIOUSNESS_MATRIX
}

enum UniversalConsciousnessStatus {
  AWAKENING
  CONNECTING
  CONSCIOUS
  TRANSCENDING
  COSMIC_UNIFIED
}

enum ConsciousnessStatus {
  DORMANT
  AWAKENING
  AWARE
  CONSCIOUS
  TRANSCENDENT
  COSMIC_UNIFIED
}

enum OptimizationStatus {
  ACTIVE
  PAUSED
  COMPLETED
  FAILED
  ARCHIVED
}

enum JourneyType {
  PURCHASE_JOURNEY
  ONBOARDING_JOURNEY
  SUPPORT_JOURNEY
  RETENTION_JOURNEY
  ADVOCACY_JOURNEY
}

enum JourneyStatus {
  ACTIVE
  DRAFT
  TESTING
  PAUSED
  ARCHIVED
}

enum PersonalizationRuleType {
  CONTENT_PERSONALIZATION
  OFFER_PERSONALIZATION
  TIMING_OPTIMIZATION
  CHANNEL_OPTIMIZATION
  FREQUENCY_CONTROL
}

enum RulePriority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum RuleStatus {
  ACTIVE
  INACTIVE
  TESTING
  EXPIRED
  DRAFT
}

enum SentimentAnalysisType {
  CUSTOMER_FEEDBACK
  SOCIAL_MEDIA
  SUPPORT_INTERACTIONS
  PRODUCT_REVIEWS
  SURVEY_RESPONSES
}

enum SentimentScore {
  VERY_NEGATIVE
  NEGATIVE
  NEUTRAL
  POSITIVE
  VERY_POSITIVE
}

enum SentimentPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum ResolutionStatus {
  PENDING
  IN_PROGRESS
  RESOLVED
  ESCALATED
  CLOSED
}

enum OptimizationType {
  USER_INTERFACE
  USER_EXPERIENCE
  CONVERSION_OPTIMIZATION
  ENGAGEMENT_OPTIMIZATION
  PERFORMANCE_OPTIMIZATION
}

enum TestingStatus {
  PLANNED
  RUNNING
  COMPLETED
  PAUSED
  CANCELLED
}

enum AIModelType {
  CUSTOMER_BEHAVIOR_PREDICTION
  RESOURCE_OPTIMIZATION
  ANOMALY_DETECTION
  DYNAMIC_PRICING
  CONTENT_PERSONALIZATION
  PROCESS_AUTOMATION
  QUALITY_ASSURANCE
  PERFORMANCE_FORECASTING
  CHURN_PREDICTION
  LEAD_SCORING
  FRAUD_DETECTION
  DEMAND_FORECASTING
  TEXT_GENERATION
  CODE_GENERATION
  IMAGE_GENERATION
  TRANSLATION
  SUMMARIZATION
  SENTIMENT_ANALYSIS
  CLASSIFICATION
  REGRESSION
  CLUSTERING
  RECOMMENDATION
  TIME_SERIES_FORECASTING
  COMPUTER_VISION
}

enum ModelStatus {
  TRAINING
  READY
  DEPLOYED
  DEPRECATED
  ERROR
  MAINTENANCE
  PENDING_APPROVAL
  TESTING
  ARCHIVED
}

enum DeploymentStatus {
  NOT_DEPLOYED
  DEPLOYING
  DEPLOYED
  FAILED
  UPDATING
  ROLLING_BACK
  TESTING
  PAUSED
}

enum ModelSource {
  INTERNAL
  OPEN_SOURCE
  COMMERCIAL
  HUGGING_FACE
  OPENAI
  ANTHROPIC
  GOOGLE
  META
  MICROSOFT
  CUSTOM
}

enum DecisionType {
  APPROVE_PAYMENT
  VALIDATE_INVOICE
  ALLOCATE_RESOURCES
  SCHEDULE_DELIVERY
  ASSIGN_TASK
  ESCALATE_ISSUE
  RECOMMEND_ACTION
  OPTIMIZE_ROUTE
  PREDICT_DEMAND
  CLASSIFY_DOCUMENT
  PERSONALIZE_CONTENT
  AUTOMATE_WORKFLOW
}

enum DecisionStatus {
  PENDING
  APPROVED
  EXECUTED
  REJECTED
  FAILED
  ROLLED_BACK
  UNDER_REVIEW
}

enum OrchestratorPriority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum ApprovalType {
  DEPLOYMENT
  UPDATE
  CONFIGURATION_CHANGE
  COST_INCREASE
  SECURITY_REVIEW
  COMPLIANCE_REVIEW
  DEACTIVATION
}

enum TestType {
  PERFORMANCE_BENCHMARK
  A_B_TESTING
  LOAD_TESTING
  SECURITY_TESTING
  COMPLIANCE_TESTING
  REGRESSION_TESTING
  INTEGRATION_TESTING
}

enum TestStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED
  CANCELLED
}

enum CostRecordType {
  HOURLY
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
  CUSTOM
}

enum DiscoveryType {
  AUTOMATED_SEARCH
  MANUAL_RESEARCH
  COMPETITIVE_ANALYSIS
  PERFORMANCE_UPGRADE
  COST_OPTIMIZATION
  SCHEDULED_CHECK
}

enum DiscoveryStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED
  SCHEDULED
}

enum BenchmarkType {
  PERFORMANCE
  ACCURACY
  SPEED
  COST_EFFICIENCY
  ENERGY_EFFICIENCY
  SECURITY
  COMPLIANCE
}

enum AdminActionType {
  MODEL_DEPLOYMENT
  MODEL_ROLLBACK
  MODEL_DEACTIVATION
  APPROVAL_OVERRIDE
  COST_LIMIT_INCREASE
  SECURITY_EXCEPTION
  COMPLIANCE_WAIVER
  DISCOVERY_TRIGGER
  BENCHMARK_CREATION
  SYSTEM_MAINTENANCE
}

enum ActionPriority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
  EMERGENCY
}

enum ActionStatus {
  PENDING
  APPROVED
  REJECTED
  EXECUTING
  COMPLETED
  FAILED
  CANCELLED
}

enum OrchestrationStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED
  CANCELLED
  TIMEOUT
}

enum HTTPMethod {
  GET
  POST
  PUT
  PATCH
  DELETE
  HEAD
  OPTIONS
}

enum TimeGranularity {
  MINUTE
  HOURLY
  DAILY
  WEEKLY
  MONTHLY
}

enum WebhookEvent {
  USER_CREATED
  USER_UPDATED
  USER_DELETED
  ORDER_CREATED
  ORDER_UPDATED
  PAYMENT_PROCESSED
  SHIPMENT_CREATED
  SHIPMENT_DELIVERED
  INVOICE_GENERATED
  INVOICE_PAID
  AI_DECISION_MADE
  PERFORMANCE_ALERT
  SYSTEM_ERROR
}

enum DeliveryStatus {
  PENDING
  DELIVERED
  FAILED
  CANCELLED
  RETRYING
}

enum MetricType {
  COUNTER
  GAUGE
  HISTOGRAM
  SUMMARY
  TIMER
}

enum AlertOperator {
  GREATER_THAN
  LESS_THAN
  EQUALS
  NOT_EQUALS
  GREATER_THAN_OR_EQUAL
  LESS_THAN_OR_EQUAL
}

enum AlertSeverity {
  INFO
  WARNING
  ERROR
  CRITICAL
}

enum IncidentStatus {
  OPEN
  ACKNOWLEDGED
  INVESTIGATING
  RESOLVED
  CLOSED
}

enum SecurityEventType {
  LOGIN_SUCCESS
  LOGIN_FAILURE
  LOGOUT
  PASSWORD_CHANGE
  ACCOUNT_LOCKED
  PERMISSION_DENIED
  DATA_ACCESS
  DATA_MODIFICATION
  API_ACCESS
  SUSPICIOUS_ACTIVITY
  SECURITY_VIOLATION
  COMPLIANCE_CHECK
}

enum SecuritySeverity {
  INFO
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum ComplianceType {
  GDPR_DATA_ACCESS
  GDPR_DATA_RECTIFICATION
  GDPR_DATA_ERASURE
  GDPR_DATA_PORTABILITY
  SOC2_CONTROL_CHECK
  ISO27001_AUDIT
  PRIVACY_ASSESSMENT
  DATA_RETENTION_REVIEW
}

enum ComplianceStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  REJECTED
  EXPIRED
}

enum WhiteLabelPackage {
  BASIC
  PROFESSIONAL
  ENTERPRISE
  CUSTOM
}

enum CreativeProjectType {
  GENERAL
  MARKETING_CAMPAIGN
  SOCIAL_MEDIA
  PRESENTATION
  VIDEO_CONTENT
  GRAPHIC_DESIGN
  BRAND_IDENTITY
  INTERACTIVE_STORY
  AI_AVATAR_CREATION
}

enum ProjectStatus {
  DRAFT
  IN_PROGRESS
  REVIEW
  APPROVED
  COMPLETED
  ARCHIVED
  CANCELLED
}

enum AssetType {
  TEXT
  IMAGE
  VIDEO
  AUDIO
  DOCUMENT
  TEMPLATE
  AVATAR
  LOGO
  ICON
  FONT
  COLOR_PALETTE
  DESIGN_SYSTEM
}

enum TemplateCategory {
  SOCIAL_MEDIA
  MARKETING
  PRESENTATION
  EMAIL
  DOCUMENT
  GRAPHIC_DESIGN
  VIDEO
  AVATAR
  BRAND_KIT
}

enum StoryType {
  LINEAR
  BRANCHING
  INTERACTIVE_PRESENTATION
  WORKSHOP_GUIDE
  CUSTOMER_JOURNEY
  PRODUCT_DEMO
}

enum CollaborationRole {
  VIEWER
  CONTRIBUTOR
  EDITOR
  MANAGER
  OWNER
}

enum CompanySize {
  UNKNOWN
  MICRO
  SMALL
  MEDIUM
  LARGE
  ENTERPRISE
}



enum CustomerTier {
  STANDARD
  PREMIUM
  VIP
  ENTERPRISE
}

enum LeadStatus {
  NEW
  CONTACTED
  QUALIFIED
  PROPOSAL_SENT
  NEGOTIATION
  CONVERTED
  LOST
  DISQUALIFIED
}

enum OpportunityStage {
  DISCOVERY
  QUALIFICATION
  PROPOSAL
  NEGOTIATION
  CLOSED_WON
  CLOSED_LOST
}

enum ProposalStatus {
  DRAFT
  PENDING_REVIEW
  SENT
  VIEWED
  ACCEPTED
  REJECTED
  EXPIRED
}

enum TenantRecommendationType {
  USAGE_BASED
  ROLE_BASED
  PROJECT_BASED
  TIME_BASED
  COLLABORATIVE
  AI_SUGGESTED
  MANUAL_OVERRIDE
}

enum EngagementLevel {
  LOW
  MEDIUM
  HIGH
  VERY_HIGH
}

enum DashboardType {
  STANDARD
  EXECUTIVE
  OPERATIONAL
  FINANCIAL
  SALES
  MARKETING
  HR
  LOGISTICS
  WECREATE
  WESELL
  CROSS_MODULE
}

enum AnalyticsWidgetType {
  KPI_CARD
  LINE_CHART
  BAR_CHART
  PIE_CHART
  DONUT_CHART
  AREA_CHART
  SCATTER_PLOT
  HEATMAP
  GAUGE
  TABLE
  MAP
  FUNNEL
  WATERFALL
  CANDLESTICK
  TREEMAP
  SANKEY
  REAL_TIME_METRIC
  AI_INSIGHT_CARD
  PREDICTION_CHART
}

enum KPICategory {
  FINANCIAL
  SALES
  MARKETING
  OPERATIONS
  HR
  CUSTOMER
  PRODUCT
  LOGISTICS
  CREATIVE
  AI_PERFORMANCE
  CROSS_MODULE
}

enum AlertType {
  THRESHOLD_EXCEEDED
  THRESHOLD_BELOW
  ANOMALY_DETECTED
  TREND_CHANGE
  PREDICTION_WARNING
}

enum ReportType {
  STANDARD
  EXECUTIVE_SUMMARY
  OPERATIONAL
  FINANCIAL
  COMPLIANCE
  AI_INSIGHTS
  PREDICTIVE
  CROSS_MODULE
}

enum ExecutionStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED
  CANCELLED
}

enum CustomerAccessLevel {
  BASIC
  STANDARD
  PREMIUM
  VIP
  ENTERPRISE
}

enum TicketCategory {
  GENERAL
  TECHNICAL_SUPPORT
  BILLING
  ACCOUNT
  FEATURE_REQUEST
  BUG_REPORT
  INTEGRATION
  TRAINING
}

enum TicketPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
  CRITICAL
}

enum TicketStatus {
  OPEN
  IN_PROGRESS
  WAITING_CUSTOMER
  RESOLVED
  CLOSED
  ESCALATED
}

enum MessageType {
  CUSTOMER
  AGENT
  AI_BOT
  SYSTEM
  AUTO_RESPONSE
}

enum GlobalConfigType {
  SYSTEM
  SECURITY
  PERFORMANCE
  LOCALIZATION
  COMPLIANCE
  AI_SETTINGS
  DEPLOYMENT
}

enum SyncStatus {
  SYNCED
  SYNCING
  FAILED
  PENDING
}

enum DataPrivacyLevel {
  BASIC
  GDPR
  CCPA
  HIPAA
  SOC2
  MAXIMUM
}

enum InsightType {
  USER_BEHAVIOR
  REVENUE_PREDICTION
  CHURN_RISK
  PERFORMANCE_FORECAST
  SECURITY_THREAT
  MARKET_OPPORTUNITY
  OPERATIONAL_EFFICIENCY
  COMPLIANCE_RISK
}

enum BusinessImpactLevel {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum PredictionStatus {
  ACTIVE
  EXPIRED
  VALIDATED
  INVALIDATED
  ARCHIVED
}

enum ForecastType {
  REVENUE
  USER_GROWTH
  CHURN_RATE
  COSTS
  PERFORMANCE
  MARKET_SHARE
  COMPETITIVE_ANALYSIS
}

enum ForecastStatus {
  ACTIVE
  EXPIRED
  VALIDATED
  UPDATED
  ARCHIVED
}

enum DecisionPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
  CRITICAL
}

enum PartnerType {
  TECHNOLOGY
  INTEGRATION
  RESELLER
  VENDOR
  CONSULTANT
  MARKETPLACE
}

enum PartnerAuthMethod {
  API_KEY
  OAUTH2
  JWT
  BASIC_AUTH
  CERTIFICATE
}

enum PartnerStatus {
  PENDING
  ACTIVE
  SUSPENDED
  TERMINATED
  UNDER_REVIEW
}

enum IntegrationType {
  CRM
  ERP
  ACCOUNTING
  HR_SYSTEM
  EMAIL_MARKETING
  ANALYTICS
  PAYMENT_GATEWAY
  INVENTORY
  CUSTOM
}

enum SyncFrequency {
  REAL_TIME
  EVERY_5_MINUTES
  EVERY_15_MINUTES
  HOURLY
  DAILY
  WEEKLY
  MANUAL
}

enum IntegrationHealth {
  HEALTHY
  WARNING
  CRITICAL
  OFFLINE
}

enum PricingModel {
  PER_CALL
  PER_MINUTE
  PER_MB
  SUBSCRIPTION
  REVENUE_SHARE
  CUSTOM
}

enum WebhookFormat {
  JSON
  XML
  FORM_DATA
}

enum WebhookHealth {
  HEALTHY
  DEGRADED
  FAILING
  OFFLINE
}

enum SystemComponentType {
  DATABASE
  API_SERVER
  WEB_SERVER
  CACHE
  QUEUE
  AI_MODEL
  INTEGRATION
  MONITORING
}

enum ComponentStatus {
  HEALTHY
  WARNING
  CRITICAL
  OFFLINE
  MAINTENANCE
}

enum HealingActionType {
  RESTART_SERVICE
  SCALE_UP
  SCALE_DOWN
  CLEAR_CACHE
  RESET_CONNECTION
  UPDATE_CONFIG
  FAILOVER
  CUSTOM_SCRIPT
}

enum HealingStatus {
  PENDING
  IN_PROGRESS
  SUCCESS
  FAILED
  CANCELLED
}

enum DeploymentType {
  APPLICATION
  DATABASE
  INFRASTRUCTURE
  CONFIGURATION
  SECURITY_UPDATE
}

enum DeploymentEnvironment {
  DEVELOPMENT
  STAGING
  PRODUCTION
  DISASTER_RECOVERY
}

enum QuantumLevel {
  CLASSICAL
  QUANTUM_AWARE
  QUANTUM_RESISTANT
  QUANTUM_ENHANCED
  QUANTUM_NATIVE
}

enum MigrationStatus {
  NOT_STARTED
  PLANNING
  IN_PROGRESS
  TESTING
  COMPLETED
  FAILED
}

enum EncryptionStatus {
  ACTIVE
  ROTATING
  DEPRECATED
  COMPROMISED
  MIGRATING
}

enum Environment {
  DEVELOPMENT
  STAGING
  PRODUCTION
  TESTING
}

enum OrchestratorStatus {
  INITIALIZING
  ACTIVE
  LEARNING
  OPTIMIZING
  MAINTENANCE
  ERROR
}

enum MetricStatus {
  NORMAL
  WARNING
  CRITICAL
  UNKNOWN
}

enum ImpactLevel {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum InsightStatus {
  PENDING
  ACTIVE
  COMPLETED
  DISMISSED
}

enum RegionStatus {
  ACTIVE
  INACTIVE
  MAINTENANCE
  DEGRADED
}

enum ScalingEventType {
  SCALE_UP
  SCALE_DOWN
  AUTO_SCALE
  MANUAL_SCALE
}

enum ScalingStatus {
  INITIATED
  IN_PROGRESS
  COMPLETED
  FAILED
}

enum LearningStatus {
  INITIALIZING
  TRAINING
  VALIDATING
  TESTING
  COMPLETED
  FAILED
}

enum TreeStatus {
  BUILDING
  TRAINED
  DEPLOYED
  DEPRECATED
}

enum ProgramStatus {
  PLANNING
  RECRUITING
  ACTIVE
  COMPLETED
  CANCELLED
}

enum BetaPhase {
  ALPHA
  BETA
  RELEASE_CANDIDATE
  GENERAL_AVAILABILITY
}

enum ParticipantStatus {
  INVITED
  ACTIVE
  INACTIVE
  COMPLETED
  WITHDRAWN
}

enum FeedbackCategory {
  BUG
  FEATURE_REQUEST
  PERFORMANCE
  USABILITY
  DOCUMENTATION
  GENERAL
}

enum FeedbackStatus {
  OPEN
  IN_PROGRESS
  RESOLVED
  CLOSED
}

enum FeedbackPriority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum PeriodType {
  MONTHLY
  QUARTERLY
  YEARLY
  CUSTOM
}

enum IntegrationLevel {
  BASIC
  STANDARD
  ADVANCED
  ENTERPRISE
}

enum EventStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  RETRYING
}

enum ConfigType {
  STRING
  NUMBER
  BOOLEAN
  JSON
  ARRAY
}

enum BackupType {
  FULL
  INCREMENTAL
  DIFFERENTIAL
  SNAPSHOT
}

enum BackupStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED
  CANCELLED
}

enum AlertStatus {
  OPEN
  ACKNOWLEDGED
  RESOLVED
  CLOSED
}

enum MonitorType {
  SYSTEM
  APPLICATION
  NETWORK
  DATABASE
  CUSTOM
}

enum MonitorStatus {
  ACTIVE
  INACTIVE
  ALERTING
  MAINTENANCE
}

enum TransportType {
  ROAD
  AIR
  SEA
  RAIL
  MULTIMODAL
}

enum RequestSource {
  EMAIL
  PHONE
  WEBFORM
  PERSONAL
  API
  PORTAL
}

enum TransportPriority {
  LOW
  NORMAL
  HIGH
  URGENT
}

enum TransportRequestStatus {
  PENDING
  QUOTED
  ORDERED
  IN_TRANSIT
  DELIVERED
  CANCELLED
}





enum TrackingEventType {
  PICKUP
  IN_TRANSIT
  DELIVERY
  EXCEPTION
  DELAY
}



enum TenderType {
  TRANSPORT
  WAREHOUSING
  FULFILLMENT
  COMPREHENSIVE
}

enum TenderStatus {
  DRAFT
  PUBLISHED
  ACTIVE
  CLOSED
  CANCELLED
}

enum BidStatus {
  SUBMITTED
  UNDER_REVIEW
  ACCEPTED
  REJECTED
  WITHDRAWN
  WINNING
}

enum ContractType {
  FRAMEWORK
  SPOT
  DEDICATED
  VOLUME
}

enum ContractStatus {
  ACTIVE
  INACTIVE
  EXPIRED
  TERMINATED
}

enum CustomerStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  PENDING_APPROVAL
}

enum ComparisonStatus {
  ANALYZING
  COMPLETED
  PENDING_APPROVAL
  APPROVED
}

enum WorkflowType {
  TRANSPORT_REQUEST
  SUPPLIER_ONBOARDING
  CUSTOMER_APPROVAL
  QUOTE_APPROVAL
  TENDER_PROCESS
}

enum WorkflowStatus {
  ACTIVE
  INACTIVE
  DEPRECATED
  COMPLETED
}

enum StepType {
  MANUAL
  AUTOMATIC
  APPROVAL
  NOTIFICATION
}

enum StepStatus {
  ACTIVE
  INACTIVE
  SKIPPED
}

enum AIAnalysisType {
  COST_OPTIMIZATION
  ROUTE_OPTIMIZATION
  SUPPLIER_SELECTION
  DEMAND_FORECAST
  RISK_ASSESSMENT
}

enum PredictionType {
  COST
  DELIVERY_TIME
  DEMAND
  RISK
  PERFORMANCE
}

enum LogisticsReportType {
  OPERATIONAL
  FINANCIAL
  PERFORMANCE
  COMPLIANCE
  EXECUTIVE
}

enum TransportMode {
  ROAD
  RAIL
  AIR
  SEA
  MULTIMODAL
}

enum ComplianceDocType {
  CUSTOMS_DECLARATION
  DANGEROUS_GOODS
  EXPORT_LICENSE
  IMPORT_PERMIT
  CERTIFICATE_OF_ORIGIN
  COMMERCIAL_INVOICE
  PACKING_LIST
  BILL_OF_LADING
  AIRWAY_BILL
  EORI_CERTIFICATE
  ATLAS_DECLARATION
  T1_DOCUMENT
  CMR_DOCUMENT
  INSURANCE_CERTIFICATE
  PHYTOSANITARY_CERTIFICATE
  VETERINARY_CERTIFICATE
  REACH_DECLARATION
  RoHS_CERTIFICATE
  CE_MARKING
  FDA_APPROVAL
  OTHER
}

enum RegulationType {
  CUSTOMS
  DANGEROUS_GOODS
  EXPORT_CONTROL
  IMPORT_CONTROL
  TRANSPORTATION
  ENVIRONMENTAL
  FOOD_SAFETY
  MEDICAL_DEVICE
  CHEMICAL
  AUTOMOTIVE
  ELECTRONICS
  TEXTILE
  INTERNATIONAL_TRADE
  NATIONAL_SECURITY
  ANTI_DUMPING
  COUNTERVAILING_DUTY
  SANCTIONS
  EMBARGO
  OTHER
}

enum DocumentStatus {
  PENDING
  UNDER_REVIEW
  APPROVED
  REJECTED
  EXPIRED
  ARCHIVED
}

enum ServiceCategory {
  TRANSPORT_LOGISTICS
  WAREHOUSING_FULFILLMENT
  VALUE_ADDED_SERVICES
  CONSULTING_BERATUNG
  IT_SERVICES
  FACILITY_MANAGEMENT
  PROCUREMENT
  SUPPLY_CHAIN_MANAGEMENT
  CUSTOMS_CLEARANCE
  QUALITY_ASSURANCE
  MAINTENANCE_REPAIR
  INSTALLATION_SERVICES
  TRAINING_EDUCATION
  COMPLIANCE_AUDIT
  RISK_MANAGEMENT
  FINANCIAL_SERVICES
  INSURANCE_SERVICES
  LEGAL_SERVICES
  MARKETING_SERVICES
  HR_SERVICES
  SECURITY_SERVICES
  ENVIRONMENTAL_SERVICES
  SUSTAINABILITY_SERVICES
  DIGITAL_TRANSFORMATION
  INNOVATION_SERVICES
  OTHER
}

// Enhanced Customer & Supplier System Enums
enum LogisticsCustomerType {
  INDIVIDUAL
  BUSINESS
  ENTERPRISE
  GOVERNMENT
  NON_PROFIT
}

enum LogisticsSupplierType {
  FREIGHT_FORWARDER
  CARRIER
  LOGISTICS_PROVIDER
  WAREHOUSING
  CUSTOMS_BROKER
  INSURANCE_PROVIDER
  PACKAGING_SUPPLIER
  MULTIMODAL_OPERATOR
  CONSULTANT
  OTHER
}

enum LogisticsSupplierStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  PENDING_VERIFICATION
  UNDER_REVIEW
  APPROVED
  REJECTED
  TERMINATED
}

enum RequestType {
  FREIGHT_FORWARDING
  LOGISTICS_SERVICES
  TRANSPORT_ONLY
  WAREHOUSING
  CUSTOMS_CLEARANCE
  INSURANCE
  PACKAGING
  MULTIMODAL
  CONSULTING
  EMERGENCY_TRANSPORT
  OTHER
}

enum RequestStatus {
  DRAFT
  SUBMITTED
  UNDER_REVIEW
  RFQ_CREATED
  QUOTED
  NEGOTIATION
  ACCEPTED
  REJECTED
  CANCELLED
  COMPLETED
  ARCHIVED
}

enum LogisticsRFQStatus {
  DRAFT
  PUBLISHED
  ACTIVE
  CLOSED
  CANCELLED
  AWARDED
  EXPIRED
  EXTENDED
}

enum LogisticsQuoteStatus {
  DRAFT
  SUBMITTED
  UNDER_REVIEW
  ACCEPTED
  REJECTED
  EXPIRED
  WITHDRAWN
  COUNTER_OFFERED
  NEGOTIATING
}

enum LogisticsOrderStatus {
  PENDING
  CONFIRMED
  IN_PROGRESS
  SHIPPED
  DELIVERED
  COMPLETED
  CANCELLED
  DISPUTED
  REFUNDED
}

enum CargoType {
  GENERAL
  HAZARDOUS
  PERISHABLE
  FRAGILE
  OVERSIZED
  BULK
  LIQUID
  REFRIGERATED
  ELECTRONICS
  AUTOMOTIVE
  PHARMACEUTICAL
  TEXTILES
  MACHINERY
  FOOD_BEVERAGE
  CHEMICALS
  DOCUMENTS
  OTHER
}

enum PaymentTerms {
  PREPAID
  COD
  NET_15
  NET_30
  NET_45
  NET_60
  NET_90
  LETTER_OF_CREDIT
  BANK_GUARANTEE
  INSTALLMENTS
}

enum RFQCriteriaType {
  PRICE
  DELIVERY_TIME
  QUALITY
  RELIABILITY
  SUSTAINABILITY
  INSURANCE_COVERAGE
  TRACKING_CAPABILITY
  CERTIFICATIONS
  EXPERIENCE
  CAPACITY
  REFERENCES
  TECHNOLOGY
  FLEXIBILITY
  GEOGRAPHICAL_COVERAGE
}

enum PortalAccessLevel {
  BASIC
  ADVANCED
  PREMIUM
  ENTERPRISE
}

enum NotificationPreference {
  EMAIL
  SMS
  PUSH
  IN_APP
  PHONE
  NONE
}

enum AIRecommendationStatus {
  PENDING
  APPROVED
  REJECTED
  IMPLEMENTED
  EXPIRED
}

enum PerformanceMetric {
  ON_TIME_DELIVERY
  COST_EFFICIENCY
  QUALITY_SCORE
  COMMUNICATION
  RELIABILITY
  FLEXIBILITY
  INNOVATION
  SUSTAINABILITY
}

enum QuoteComparisonStatus {
  ANALYZING
  COMPLETED
  PENDING_APPROVAL
  APPROVED
  REJECTED
  EXPIRED
}

// Minimal models for backwards compatibility
model Customer {
  id                 String                 @id @default(cuid())
  customerNumber     String                 @unique
  companyName        String?
  firstName          String?
  lastName           String?
  email              String                 @unique
  phone              String?
  website            String?
  billingAddress     Json?                  @default("{}")
  shippingAddress    Json?                  @default("{}")
  industry           String?
  companySize        CompanySize?           @default(UNKNOWN)
  annualRevenue      Decimal?               @db.Decimal(15, 2)
  customerTier       CustomerTier           @default(STANDARD)
  lifecycleStage     String?                @default("AWARENESS")
  aiLifetimeValue    Decimal?               @db.Decimal(15, 2)
  aiChurnProbability Float?                 @default(0.0)
  aiCrossSellScore   Float?                 @default(0.0)
  aiUpsellPotential  Float?                 @default(0.0)
  aiEngagementScore  Float?                 @default(0.0)
  aiSentimentScore   Float?                 @default(0.0)
  aiNextBestAction   String?
  firstContactDate   DateTime?
  lastContactDate    DateTime?
  totalOrderValue    Decimal?               @db.Decimal(15, 2)
  totalOrders        Int                    @default(0)
  averageOrderValue  Decimal?               @db.Decimal(15, 2)
  tenantId           String
  assignedSalesRep   String?
  source             String?
  tags               String[]               @default([])
  notes              String?
  isActive           Boolean                @default(true)
  createdAt          DateTime               @default(now())
  updatedAt          DateTime               @updatedAt
  interactions       CustomerInteraction[]
  portalAccount      CustomerPortalAccount?
  segments           CustomerSegment[]
  leads              Lead[]
  opportunities      SalesOpportunity[]
  orders             SalesOrder[]

  @@map("customers")
}

model Supplier {
  id             String          @id @default(cuid())
  name           String
  email          String?
  phone          String?
  address        Json?
  rating         Float?          @default(0)
  status         String          @default("ACTIVE")
  volume         Decimal?        @db.Decimal(15, 2)
  performance    Float?          @default(0)
  tenantId       String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  purchaseOrders PurchaseOrder[]

  @@map("suppliers")
}

// Customer & Supplier System Models
model LogisticsCustomer {
  id                    String                  @id @default(cuid())
  tenantId              String
  customerNumber        String                  @unique
  customerType          LogisticsCustomerType   @default(BUSINESS)
  companyName           String?
  firstName             String?
  lastName              String?
  email                 String
  phone                 String?
  website               String?
  industry              String?
  address               Json                    @default("{}")
  billingAddress        Json?                   @default("{}")
  taxId                 String?
  vatNumber             String?
  registrationNumber    String?
  paymentTerms          PaymentTerms            @default(NET_30)
  creditLimit           Decimal?                @default(0)
  creditRating          String?
  preferredCurrency     String                  @default("EUR")
  preferredLanguage     String                  @default("de")
  status                CustomerStatus          @default(ACTIVE)
  isVerified            Boolean                 @default(false)
  verificationDate      DateTime?
  lastActivityAt        DateTime?
  totalOrders           Int                     @default(0)
  totalValue            Decimal                 @default(0)
  averageOrderValue     Decimal                 @default(0)
  satisfactionScore     Float?                  @default(0)
  aiRiskScore           Float?                  @default(0)
  aiValueScore          Float?                  @default(0)
  aiRecommendations     Json?                   @default("[]")
  metadata              Json?                   @default("{}")
  notificationPrefs     Json?                   @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  requests              LogisticsCustomerRequest[]
  orders                LogisticsOrder[]
  portalAccess          LogisticsCustomerPortalAccess[]
  
  @@map("logistics_customers")
}

model LogisticsSupplier {
  id                    String                  @id @default(cuid())
  tenantId              String
  supplierNumber        String                  @unique
  supplierType          LogisticsSupplierType   @default(FREIGHT_FORWARDER)
  companyName           String
  contactPerson         String?
  email                 String
  phone                 String?
  website               String?
  address               Json                    @default("{}")
  registrationNumber    String?
  taxId                 String?
  vatNumber             String?
  bankDetails           Json?                   @default("{}")
  paymentTerms          PaymentTerms            @default(NET_30)
  currencies            String[]                @default(["EUR"])
  servicesOffered       String[]                @default([])
  geographicalCoverage  String[]                @default([])
  certifications        String[]                @default([])
  insuranceCoverage     Json?                   @default("{}")
  capacity              Json?                   @default("{}")
  workingHours          Json?                   @default("{}")
  emergencyContact      Json?                   @default("{}")
  status                LogisticsSupplierStatus @default(PENDING_VERIFICATION)
  isVerified            Boolean                 @default(false)
  verificationDate      DateTime?
  lastActivityAt        DateTime?
  totalQuotes           Int                     @default(0)
  totalOrders           Int                     @default(0)
  totalRevenue          Decimal                 @default(0)
  averageQuoteValue     Decimal                 @default(0)
  winRate               Float?                  @default(0)
  performanceScore      Float?                  @default(0)
  qualityScore          Float?                  @default(0)
  reliabilityScore      Float?                  @default(0)
  responseTime          Float?                  @default(0)
  onTimeDeliveryRate    Float?                  @default(0)
  customerSatisfaction  Float?                  @default(0)
  aiRecommendationScore Float?                  @default(0)
  aiRiskScore           Float?                  @default(0)
  aiCompatibilityScore  Float?                  @default(0)
  metadata              Json?                   @default("{}")
  notificationPrefs     Json?                   @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  quotes                LogisticsSupplierQuote[]
  orders                LogisticsOrder[]
  performance           LogisticsSupplierPerformance[]
  portalAccess          LogisticsSupplierPortalAccess[]
  
  @@map("logistics_suppliers")
}

model LogisticsCustomerRequest {
  id                    String                  @id @default(cuid())
  tenantId              String
  customerId            String
  requestNumber         String                  @unique
  requestType           RequestType             @default(FREIGHT_FORWARDING)
  title                 String
  description           String?
  origin                Json                    @default("{}")
  destination           Json                    @default("{}")
  cargoType             CargoType               @default(GENERAL)
  cargoDetails          Json                    @default("{}")
  weight                Decimal?
  volume                Decimal?
  dimensions            Json?                   @default("{}")
  value                 Decimal?
  currency              String                  @default("EUR")
  requestedPickupDate   DateTime?
  requestedDeliveryDate DateTime?
  isUrgent              Boolean                 @default(false)
  requirements          Json?                   @default("{}")
  specialInstructions   String?
  attachments           Json?                   @default("[]")
  internalNotes         String?
  status                RequestStatus           @default(DRAFT)
  submittedAt           DateTime?
  reviewedAt            DateTime?
  reviewedBy            String?
  estimatedCost         Decimal?
  actualCost            Decimal?
  profitMargin          Decimal?                @default(0)
  aiClassification      String?
  aiEstimatedCost       Decimal?
  aiRecommendations     Json?                   @default("[]")
  aiRiskAssessment      Json?                   @default("{}")
  source                String                  @default("PORTAL")
  metadata              Json?                   @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  customer              LogisticsCustomer       @relation(fields: [customerId], references: [id], onDelete: Cascade)
  rfqs                  LogisticsRFQ[]
  
  @@map("logistics_customer_requests")
}

model LogisticsRFQ {
  id                    String                  @id @default(cuid())
  tenantId              String
  customerRequestId     String
  rfqNumber             String                  @unique
  title                 String
  description           String?
  requirements          Json                    @default("{}")
  criteria              Json                    @default("{}")
  criteriaWeights       Json                    @default("{}")
  targetSuppliers       String[]                @default([])
  publishedAt           DateTime?
  deadline              DateTime
  extendedDeadline      DateTime?
  status                LogisticsRFQStatus      @default(DRAFT)
  totalQuotes           Int                     @default(0)
  budget                Decimal?
  currency              String                  @default("EUR")
  evaluationCriteria    Json                    @default("{}")
  automaticEvaluation   Boolean                 @default(true)
  aiRecommendations     Json?                   @default("[]")
  aiAnalysis            Json?                   @default("{}")
  winningQuoteId        String?
  awardedAt             DateTime?
  awardedBy             String?
  notes                 String?
  metadata              Json?                   @default("{}")
  createdBy             String?
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  customerRequest       LogisticsCustomerRequest @relation(fields: [customerRequestId], references: [id], onDelete: Cascade)
  quotes                LogisticsSupplierQuote[]
  comparison            LogisticsQuoteComparison?
  
  @@map("logistics_rfqs")
}

model LogisticsSupplierQuote {
  id                    String                  @id @default(cuid())
  tenantId              String
  rfqId                 String
  supplierId            String
  quoteNumber           String                  @unique
  version               Int                     @default(1)
  title                 String?
  description           String?
  basePrice             Decimal
  additionalCosts       Json?                   @default("{}")
  totalPrice            Decimal
  currency              String                  @default("EUR")
  validUntil            DateTime
  deliveryTime          Int
  deliveryTerms         String?
  paymentTerms          PaymentTerms            @default(NET_30)
  serviceLevel          String?
  insuranceCoverage     Json?                   @default("{}")
  trackingOptions       Json?                   @default("{}")
  specialServices       Json?                   @default("[]")
  terms                 String?
  attachments           Json?                   @default("[]")
  internalNotes         String?
  status                LogisticsQuoteStatus    @default(DRAFT)
  submittedAt           DateTime?
  reviewedAt            DateTime?
  reviewedBy            String?
  rejectionReason       String?
  aiScore               Float?                  @default(0)
  aiRanking             Int?
  aiRecommendation      String?
  aiAnalysis            Json?                   @default("{}")
  profitMargin          Decimal?
  isWinning             Boolean                 @default(false)
  customerFeedback      String?
  metadata              Json?                   @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  rfq                   LogisticsRFQ            @relation(fields: [rfqId], references: [id], onDelete: Cascade)
  supplier              LogisticsSupplier       @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  
  @@map("logistics_supplier_quotes")
}

model LogisticsQuoteComparison {
  id                    String                  @id @default(cuid())
  tenantId              String
  rfqId                 String                  @unique
  comparisonData        Json                    @default("{}")
  rankings              Json                    @default("[]")
  bestQuoteId           String?
  worstQuoteId          String?
  averagePrice          Decimal?
  priceRange            Json?                   @default("{}")
  deliveryTimeRange     Json?                   @default("{}")
  aiAnalysis            Json?                   @default("{}")
  aiRecommendations     Json?                   @default("[]")
  riskAnalysis          Json?                   @default("{}")
  costBenefit           Json?                   @default("{}")
  qualityAssessment     Json?                   @default("{}")
  complianceCheck       Json?                   @default("{}")
  status                QuoteComparisonStatus   @default(ANALYZING)
  analyzedAt            DateTime?
  analyzedBy            String?
  approvedAt            DateTime?
  approvedBy            String?
  notes                 String?
  metadata              Json?                   @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  rfq                   LogisticsRFQ            @relation(fields: [rfqId], references: [id], onDelete: Cascade)
  
  @@map("logistics_quote_comparisons")
}

model LogisticsOrder {
  id                    String                  @id @default(cuid())
  tenantId              String
  customerId            String
  supplierId            String
  rfqId                 String?
  quoteId               String?
  orderNumber           String                  @unique
  customerOrderNumber   String?
  title                 String
  description           String?
  orderValue            Decimal
  currency              String                  @default("EUR")
  paymentTerms          PaymentTerms            @default(NET_30)
  deliveryTerms         String?
  requestedDeliveryDate DateTime?
  confirmedDeliveryDate DateTime?
  actualDeliveryDate    DateTime?
  status                LogisticsOrderStatus    @default(PENDING)
  orderData             Json                    @default("{}")
  trackingNumber        String?
  trackingUrl           String?
  documents             Json?                   @default("[]")
  milestones            Json?                   @default("[]")
  customerNotes         String?
  supplierNotes         String?
  internalNotes         String?
  performanceRating     Float?
  customerSatisfaction  Float?
  feedback              String?
  disputeReason         String?
  resolutionNotes       String?
  aiMonitoring          Json?                   @default("{}")
  aiAlerts              Json?                   @default("[]")
  metadata              Json?                   @default("{}")
  createdBy             String?
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  customer              LogisticsCustomer       @relation(fields: [customerId], references: [id], onDelete: Cascade)
  supplier              LogisticsSupplier       @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  
  @@map("logistics_orders")
}

model LogisticsSupplierPerformance {
  id                    String                  @id @default(cuid())
  tenantId              String
  supplierId            String
  periodStart           DateTime
  periodEnd             DateTime
  totalOrders           Int                     @default(0)
  completedOrders       Int                     @default(0)
  cancelledOrders       Int                     @default(0)
  averageDeliveryTime   Float?                  @default(0)
  onTimeDeliveryRate    Float?                  @default(0)
  averageResponseTime   Float?                  @default(0)
  totalRevenue          Decimal                 @default(0)
  averageOrderValue     Decimal                 @default(0)
  customerSatisfaction  Float?                  @default(0)
  qualityScore          Float?                  @default(0)
  reliabilityScore      Float?                  @default(0)
  communicationScore    Float?                  @default(0)
  innovationScore       Float?                  @default(0)
  sustainabilityScore   Float?                  @default(0)
  overallScore          Float?                  @default(0)
  performanceMetrics    Json?                   @default("{}")
  improvements          Json?                   @default("[]")
  issues                Json?                   @default("[]")
  recommendations       Json?                   @default("[]")
  aiAnalysis            Json?                   @default("{}")
  aiTrends              Json?                   @default("{}")
  aiPredictions         Json?                   @default("{}")
  metadata              Json?                   @default("{}")
  calculatedAt          DateTime                @default(now())
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  supplier              LogisticsSupplier       @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  
  @@unique([supplierId, periodStart])
  @@map("logistics_supplier_performance")
}

model LogisticsCustomerPortalAccess {
  id                    String                  @id @default(cuid())
  tenantId              String
  customerId            String
  accessLevel           PortalAccessLevel       @default(BASIC)
  username              String                  @unique
  email                 String
  hashedPassword        String?
  isActive              Boolean                 @default(true)
  lastLoginAt           DateTime?
  loginAttempts         Int                     @default(0)
  lockedUntil           DateTime?
  sessionToken          String?
  sessionExpiry         DateTime?
  permissions           Json?                   @default("[]")
  preferences           Json?                   @default("{}")
  notificationSettings  Json?                   @default("{}")
  metadata              Json?                   @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  customer              LogisticsCustomer       @relation(fields: [customerId], references: [id], onDelete: Cascade)
  
  @@map("logistics_customer_portal_access")
}

model LogisticsSupplierPortalAccess {
  id                    String                  @id @default(cuid())
  tenantId              String
  supplierId            String
  accessLevel           PortalAccessLevel       @default(BASIC)
  username              String                  @unique
  email                 String
  hashedPassword        String?
  isActive              Boolean                 @default(true)
  lastLoginAt           DateTime?
  loginAttempts         Int                     @default(0)
  lockedUntil           DateTime?
  sessionToken          String?
  sessionExpiry         DateTime?
  permissions           Json?                   @default("[]")
  preferences           Json?                   @default("{}")
  notificationSettings  Json?                   @default("{}")
  metadata              Json?                   @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  supplier              LogisticsSupplier       @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  
  @@map("logistics_supplier_portal_access")
}

model LogisticsAIRecommendation {
  id                    String                  @id @default(cuid())
  tenantId              String
  entityType            String
  entityId              String
  recommendationType    String
  title                 String
  description           String?
  recommendation        Json                    @default("{}")
  confidenceScore       Float?                  @default(0)
  priority              String                  @default("MEDIUM")
  category              String?
  tags                  String[]                @default([])
  status                AIRecommendationStatus  @default(PENDING)
  aiModel               String?
  aiVersion             String?
  aiTrainingData        Json?                   @default("{}")
  businessImpact        Json?                   @default("{}")
  implementationCost    Decimal?                @default(0)
  expectedSavings       Decimal?                @default(0)
  roi                   Float?                  @default(0)
  validUntil            DateTime?
  implementedAt         DateTime?
  implementedBy         String?
  results               Json?                   @default("{}")
  feedback              String?
  metadata              Json?                   @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  
  @@map("logistics_ai_recommendations")
}

// ===== UNIVERSAL SERVICE SYSTEM =====

enum ServiceType {
  // IT Services
  SOFTWARE_DEVELOPMENT
  SYSTEM_INTEGRATION
  IT_SUPPORT
  CYBERSECURITY
  CLOUD_SERVICES
  DATA_ANALYTICS
  
  // Marketing Services
  DIGITAL_MARKETING
  CONTENT_CREATION
  SEO_SEM
  SOCIAL_MEDIA
  BRANDING
  EVENT_MANAGEMENT
  
  // HR Services
  RECRUITMENT
  TRAINING
  PAYROLL
  HR_CONSULTING
  PERFORMANCE_MANAGEMENT
  EMPLOYEE_BENEFITS
  
  // Consulting Services
  STRATEGY_CONSULTING
  PROCESS_OPTIMIZATION
  CHANGE_MANAGEMENT
  BUSINESS_ANALYSIS
  PROJECT_MANAGEMENT
  COMPLIANCE_CONSULTING
  
  // Logistics Services
  FREIGHT_FORWARDING
  WAREHOUSING
  TRANSPORT
  CUSTOMS_CLEARANCE
  PACKAGING
  SUPPLY_CHAIN
  
  // Finance Services
  ACCOUNTING
  BOOKKEEPING
  TAX_ADVISORY
  FINANCIAL_PLANNING
  AUDIT_SERVICES
  INVESTMENT_ADVISORY
  
  // Legal Services
  CONTRACT_LAW
  CORPORATE_LAW
  IP_LAW
  COMPLIANCE
  LITIGATION
  LEGAL_ADVISORY
  
  // Facility Services
  CLEANING
  SECURITY
  MAINTENANCE
  CATERING
  OFFICE_MANAGEMENT
  FACILITY_PLANNING
  
  // Design Services
  GRAPHIC_DESIGN
  WEB_DESIGN
  PRODUCT_DESIGN
  INTERIOR_DESIGN
  ARCHITECTURE
  UX_UI_DESIGN
  
  // Manufacturing Services
  PRODUCTION
  QUALITY_CONTROL
  ASSEMBLY
  PROTOTYPING
  PACKAGING_MANUFACTURING
  TOOLING
}

enum UniversalSupplierStatus {
  PENDING_VERIFICATION
  VERIFIED
  SUSPENDED
  REJECTED
  INACTIVE
}

enum UniversalRequestStatus {
  DRAFT
  SUBMITTED
  UNDER_REVIEW
  RFQ_CREATED
  QUOTES_RECEIVED
  EVALUATION
  AWARDED
  REJECTED
  CANCELLED
  COMPLETED
}

enum UniversalRFQStatus {
  DRAFT
  PUBLISHED
  ACTIVE
  CLOSED
  EVALUATED
  AWARDED
  CANCELLED
  EXPIRED
}

enum UniversalQuoteStatus {
  DRAFT
  SUBMITTED
  UNDER_REVIEW
  ACCEPTED
  REJECTED
  EXPIRED
  WITHDRAWN
}

enum UserPortalType {
  INTERNAL
  CUSTOMER
  SUPPLIER
  ADMIN
}

enum OrderStatus {
  PENDING
  CONFIRMED
  IN_PROGRESS
  ON_HOLD
  COMPLETED
  CANCELLED
  DELIVERED
  INVOICED
  PAID
}

// Universal Service Request Model
model ServiceRequest {
  id                    String                  @id @default(cuid())
  tenantId              String
  customerId            String
  requestNumber         String                  @unique
  category              ServiceCategory
  serviceType           ServiceType
  title                 String
  description           String?
  requirements          Json                    @default("{}")
  specifications        Json                    @default("{}")
  budget                Decimal?
  currency              String                  @default("EUR")
  deadline              DateTime?
  priority              String                  @default("MEDIUM") // LOW, MEDIUM, HIGH, URGENT
  location              Json?                   @default("{}")
  targetAudience        String?
  expectedOutcome       String?
  successCriteria       Json                    @default("{}")
  constraints           Json                    @default("{}")
  additionalInfo        String?
  attachments           Json                    @default("[]")
  internalNotes         String?
  status                UniversalRequestStatus  @default(DRAFT)
  submittedAt           DateTime?
  reviewedAt            DateTime?
  reviewedBy            String?
  estimatedCost         Decimal?
  actualCost            Decimal?
  profitMargin          Decimal?                @default(0)
  aiClassification      String?
  aiEstimatedCost       Decimal?
  aiRecommendations     Json                    @default("[]")
  aiRiskAssessment      Json                    @default("{}")
  source                String                  @default("PORTAL")
  metadata              Json                    @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  customer              ServiceCustomer         @relation(fields: [customerId], references: [id], onDelete: Cascade)
  rfqs                  ServiceRFQ[]
  
  @@map("service_requests")
}

// Universal Customer Model  
model ServiceCustomer {
  id                    String                  @id @default(cuid())
  tenantId              String
  customerNumber        String                  @unique
  companyName           String
  industry              String?
  companySize           String?                 // STARTUP, SME, ENTERPRISE
  contactPerson         String?
  firstName             String?
  lastName              String?
  email                 String
  phone                 String?
  website               String?
  address               Json                    @default("{}")
  registrationNumber    String?
  taxId                 String?
  vatNumber             String?
  bankDetails           Json?                   @default("{}")
  paymentTerms          PaymentTerms            @default(NET_30)
  creditLimit           Decimal?                @default(0)
  currency              String                  @default("EUR")
  preferredLanguage     String                  @default("de")
  timeZone              String                  @default("Europe/Berlin")
  isActive              Boolean                 @default(true)
  lastActivityAt        DateTime?
  totalOrders           Int                     @default(0)
  totalSpent            Decimal                 @default(0)
  averageOrderValue     Decimal                 @default(0)
  satisfactionScore     Float?                  @default(0)
  aiPreferences         Json                    @default("{}")
  aiRecommendations     Json                    @default("[]")
  metadata              Json                    @default("{}")
  notificationPrefs     Json                    @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  requests              ServiceRequest[]
  orders                ServiceOrder[]
  portalAccess          ServiceCustomerPortalAccess[]
  
  @@map("service_customers")
}

// Universal Supplier Model
model ServiceSupplier {
  id                    String                  @id @default(cuid())
  tenantId              String
  supplierNumber        String                  @unique
  companyName           String
  businessType          String?                 // FREELANCER, AGENCY, CORPORATION
  categories            ServiceCategory[]
  serviceTypes          ServiceType[]
  contactPerson         String?
  email                 String
  phone                 String?
  website               String?
  linkedIn              String?
  address               Json                    @default("{}")
  registrationNumber    String?
  taxId                 String?
  vatNumber             String?
  bankDetails           Json?                   @default("{}")
  paymentTerms          PaymentTerms            @default(NET_30)
  currencies            String[]                @default(["EUR"])
  servicesOffered       Json                    @default("[]")
  capabilities          Json                    @default("{}")
  capacity              Json                    @default("{}")
  workingHours          Json                    @default("{}")
  geographicalCoverage  String[]                @default([])
  languages             String[]                @default(["de"])
  certifications        String[]                @default([])
  portfolio             Json                    @default("[]")
  clientTestimonials    Json                    @default("[]")
  teamSize              Int?                    @default(0)
  experience            Int?                    @default(0) // years
  specializations       Json                    @default("[]")
  tools                 Json                    @default("[]")
  technologies          Json                    @default("[]")
  insuranceCoverage     Json?                   @default("{}")
  emergencyContact      Json?                   @default("{}")
  status                UniversalSupplierStatus @default(PENDING_VERIFICATION)
  isVerified            Boolean                 @default(false)
  verificationDate      DateTime?
  lastActivityAt        DateTime?
  totalQuotes           Int                     @default(0)
  totalOrders           Int                     @default(0)
  totalRevenue          Decimal                 @default(0)
  averageQuoteValue     Decimal                 @default(0)
  winRate               Float?                  @default(0)
  performanceScore      Float?                  @default(0)
  qualityScore          Float?                  @default(0)
  reliabilityScore      Float?                  @default(0)
  responseTime          Float?                  @default(0)
  onTimeDeliveryRate    Float?                  @default(0)
  customerSatisfaction  Float?                  @default(0)
  aiRecommendationScore Float?                  @default(0)
  aiRiskScore           Float?                  @default(0)
  aiCompatibilityScore  Float?                  @default(0)
  metadata              Json?                   @default("{}")
  notificationPrefs     Json?                   @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  quotes                ServiceQuote[]
  orders                ServiceOrder[]
  performance           ServiceSupplierPerformance[]
  portalAccess          ServiceSupplierPortalAccess[]
  
  @@map("service_suppliers")
}

// Universal RFQ Model
model ServiceRFQ {
  id                    String                  @id @default(cuid())
  tenantId              String
  serviceRequestId      String
  rfqNumber             String                  @unique
  title                 String
  description           String?
  category              ServiceCategory
  serviceType           ServiceType
  requirements          Json                    @default("{}")
  criteria              Json                    @default("{}")
  criteriaWeights       Json                    @default("{}")
  targetSuppliers       String[]                @default([])
  publishedAt           DateTime?
  deadline              DateTime
  extendedDeadline      DateTime?
  status                UniversalRFQStatus      @default(DRAFT)
  totalQuotes           Int                     @default(0)
  budget                Decimal?
  currency              String                  @default("EUR")
  evaluationCriteria    Json                    @default("{}")
  automaticEvaluation   Boolean                 @default(true)
  aiRecommendations     Json?                   @default("[]")
  aiAnalysis            Json?                   @default("{}")
  winningQuoteId        String?
  awardedAt             DateTime?
  awardedBy             String?
  notes                 String?
  metadata              Json?                   @default("{}")
  createdBy             String?
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  serviceRequest        ServiceRequest          @relation(fields: [serviceRequestId], references: [id], onDelete: Cascade)
  quotes                ServiceQuote[]
  comparison            ServiceQuoteComparison?
  
  @@map("service_rfqs")
}

// Universal Quote Model
model ServiceQuote {
  id                    String                  @id @default(cuid())
  tenantId              String
  rfqId                 String
  supplierId            String
  quoteNumber           String                  @unique
  version               Int                     @default(1)
  title                 String?
  description           String?
  proposal              String?
  methodology           String?
  timeline              Json?                   @default("{}")
  deliverables          Json?                   @default("[]")
  milestones            Json?                   @default("[]")
  teamComposition       Json?                   @default("{}")
  basePrice             Decimal
  additionalCosts       Json?                   @default("{}")
  totalPrice            Decimal
  currency              String                  @default("EUR")
  validUntil            DateTime
  estimatedDuration     Int?                    // days
  deliveryTime          Int                     // days
  startDate             DateTime?
  deliveryTerms         String?
  paymentTerms          PaymentTerms            @default(NET_30)
  serviceLevel          String?
  supportOffered        Json?                   @default("{}")
  warrantyTerms         String?
  revisionRounds        Int?                    @default(0)
  includedServices      Json?                   @default("[]")
  excludedServices      Json?                   @default("[]")
  assumptions           Json?                   @default("[]")
  riskFactors           Json?                   @default("[]")
  alternatives          Json?                   @default("[]")
  terms                 String?
  attachments           Json?                   @default("[]")
  internalNotes         String?
  status                UniversalQuoteStatus    @default(DRAFT)
  submittedAt           DateTime?
  reviewedAt            DateTime?
  reviewedBy            String?
  rejectionReason       String?
  aiScore               Float?                  @default(0)
  aiRanking             Int?
  aiRecommendation      String?
  aiAnalysis            Json?                   @default("{}")
  profitMargin          Decimal?
  isWinning             Boolean                 @default(false)
  customerFeedback      String?
  metadata              Json?                   @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  rfq                   ServiceRFQ              @relation(fields: [rfqId], references: [id], onDelete: Cascade)
  supplier              ServiceSupplier         @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  
  @@map("service_quotes")
}

// Universal Quote Comparison Model
model ServiceQuoteComparison {
  id                    String                  @id @default(cuid())
  tenantId              String
  rfqId                 String                  @unique
  comparisonData        Json                    @default("{}")
  rankings              Json                    @default("[]")
  scoringMatrix         Json                    @default("{}")
  bestQuoteId           String?
  worstQuoteId          String?
  averagePrice          Decimal?
  priceRange            Json?                   @default("{}")
  deliveryTimeRange     Json?                   @default("{}")
  qualityRange          Json?                   @default("{}")
  aiAnalysis            Json?                   @default("{}")
  aiRecommendations     Json?                   @default("[]")
  riskAnalysis          Json?                   @default("{}")
  costBenefit           Json?                   @default("{}")
  qualityAssessment     Json?                   @default("{}")
  complianceCheck       Json?                   @default("{}")
  status                QuoteComparisonStatus   @default(ANALYZING)
  analyzedAt            DateTime?
  analyzedBy            String?
  approvedAt            DateTime?
  approvedBy            String?
  notes                 String?
  metadata              Json?                   @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  rfq                   ServiceRFQ              @relation(fields: [rfqId], references: [id], onDelete: Cascade)
  
  @@map("service_quote_comparisons")
}

// Universal Order Model
model ServiceOrder {
  id                    String                  @id @default(cuid())
  tenantId              String
  customerId            String
  supplierId            String
  rfqId                 String?
  quoteId               String?
  orderNumber           String                  @unique
  category              ServiceCategory
  serviceType           ServiceType
  title                 String
  description           String?
  requirements          Json                    @default("{}")
  deliverables          Json                    @default("[]")
  timeline              Json                    @default("{}")
  milestones            Json                    @default("[]")
  totalAmount           Decimal
  currency              String                  @default("EUR")
  paymentTerms          PaymentTerms            @default(NET_30)
  startDate             DateTime?
  expectedEndDate       DateTime?
  actualEndDate         DateTime?
  status                OrderStatus             @default(PENDING)
  progress              Float                   @default(0)
  qualityScore          Float?                  @default(0)
  satisfactionScore     Float?                  @default(0)
  notes                 String?
  attachments           Json                    @default("[]")
  invoices              Json                    @default("[]")
  payments              Json                    @default("[]")
  metadata              Json                    @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  customer              ServiceCustomer         @relation(fields: [customerId], references: [id], onDelete: Cascade)
  supplier              ServiceSupplier         @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  
  @@map("service_orders")
}

// Universal Supplier Performance Model
model ServiceSupplierPerformance {
  id                    String                  @id @default(cuid())
  tenantId              String
  supplierId            String
  category              ServiceCategory
  performancePeriod     String                  // MONTHLY, QUARTERLY, YEARLY
  periodStart           DateTime
  periodEnd             DateTime
  totalOrders           Int                     @default(0)
  completedOrders       Int                     @default(0)
  cancelledOrders       Int                     @default(0)
  totalRevenue          Decimal                 @default(0)
  averageOrderValue     Decimal                 @default(0)
  responseTime          Float?                  @default(0) // hours
  onTimeDeliveryRate    Float?                  @default(0) // percentage
  qualityScore          Float?                  @default(0) // 1-5 scale
  customerSatisfaction  Float?                  @default(0) // 1-5 scale
  communicationScore    Float?                  @default(0) // 1-5 scale
  innovationScore       Float?                  @default(0) // 1-5 scale
  costEffectivenessScore Float?                 @default(0) // 1-5 scale
  overallScore          Float?                  @default(0) // 1-5 scale
  improvementAreas      Json                    @default("[]")
  strengths             Json                    @default("[]")
  aiInsights            Json                    @default("{}")
  recommendations       Json                    @default("[]")
  feedback              String?
  metadata              Json                    @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  supplier              ServiceSupplier         @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  
  @@unique([supplierId, performancePeriod, periodStart])
  @@map("service_supplier_performance")
}

// Portal Access Models
model ServiceCustomerPortalAccess {
  id                    String                  @id @default(cuid())
  tenantId              String
  customerId            String
  portalType            UserPortalType          @default(CUSTOMER)
  accessToken           String                  @unique
  isActive              Boolean                 @default(true)
  permissions           Json                    @default("[]")
  lastLoginAt           DateTime?
  loginCount            Int                     @default(0)
  sessionDuration       Int?                    @default(0) // minutes
  ipAddress             String?
  userAgent             String?
  preferences           Json                    @default("{}")
  metadata              Json                    @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  customer              ServiceCustomer         @relation(fields: [customerId], references: [id], onDelete: Cascade)
  
  @@map("service_customer_portal_access")
}

model ServiceSupplierPortalAccess {
  id                    String                  @id @default(cuid())
  tenantId              String
  supplierId            String
  portalType            UserPortalType          @default(SUPPLIER)
  accessToken           String                  @unique
  isActive              Boolean                 @default(true)
  permissions           Json                    @default("[]")
  lastLoginAt           DateTime?
  loginCount            Int                     @default(0)
  sessionDuration       Int?                    @default(0) // minutes
  ipAddress             String?
  userAgent             String?
  preferences           Json                    @default("{}")
  metadata              Json                    @default("{}")
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  tenant                Tenant                  @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  supplier              ServiceSupplier         @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  
  @@map("service_supplier_portal_access")
}
